<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>alpha strategy learning note</title>
      <link href="/2021/02/01/finance/alpha/alpha_strategy_learning/"/>
      <url>/2021/02/01/finance/alpha/alpha_strategy_learning/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>这个是对于csdn多因子策略学习的笔记.</p><p>link:</p><p><a href="https://edu.csdn.net/course/detail/25572" target="_blank" rel="external nofollow noopener noreferrer">https://edu.csdn.net/course/detail/25572</a></p><h1 id="多因子策略简介"><a href="#多因子策略简介" class="headerlink" title="多因子策略简介"></a>多因子策略简介</h1><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210131214532.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210131214532.png" class="lazyload"></a></p><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210131214551.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210131214551.png" class="lazyload"></a></p><h1 id="pandas-grouby的使用"><a href="#pandas-grouby的使用" class="headerlink" title="pandas grouby的使用"></a>pandas grouby的使用</h1><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210131223815.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210131223815.png" class="lazyload"></a></p><p>截面波动率计算:</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data.groupby(<span class="string">'date'</span>)[<span class="string">'daily_return'</span>].std()<span class="string">'</span></span><br></pre></td></tr></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210131224210.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210131224210.png" class="lazyload"></a></p><p>因为每天的截面波动率不一样, 所以需要做归一化.</p><p>比如对多只股票一段周期内每天的daily return做标准化, 也就是说要对每只股票价格除以当天所有股票的价格标准差..</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">data.sort_value([<span class="string">'date'</span>, <span class="string">'symbol'</span>], inplace=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">demo.groupby(<span class="string">'date'</span>)[<span class="string">'daily_return'</span>].apply(<span class="keyword">lambda</span> x: x / x.std()).values</span><br></pre></td></tr></table></figure></div><p>这里写.values的原因是因为groupby返回的index值会是一个multi-index, 和原来的dataframe的index不一样.</p><p>一定要先sort否则会出错. 一定要先sort groupby的那个column, 然后再sort symbol.</p><h1 id="因子计算和处理示例"><a href="#因子计算和处理示例" class="headerlink" title="因子计算和处理示例"></a>因子计算和处理示例</h1><h2 id="因子计算"><a href="#因子计算" class="headerlink" title="因子计算"></a>因子计算</h2><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210131235018.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210131235018.png" class="lazyload"></a></p><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210131235542.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210131235542.png" class="lazyload"></a></p><h2 id="因子预处理"><a href="#因子预处理" class="headerlink" title="因子预处理"></a>因子预处理</h2><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210202011444.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210202011444.png" class="lazyload"></a></p><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210202011914.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210202011914.png" class="lazyload"></a></p><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210202012051.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210202012051.png" class="lazyload"></a></p>]]></content>
      
      
      <categories>
          
          <category> finance </category>
          
          <category> alpha </category>
          
      </categories>
      
      
        <tags>
            
            <tag> finance </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>backtrader tecent tutorial notes</title>
      <link href="/2021/01/18/finance/backtrader/backtrader_tecent_tutorial/"/>
      <url>/2021/01/18/finance/backtrader/backtrader_tecent_tutorial/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="backtrader-tecent-tutorial"><a href="#backtrader-tecent-tutorial" class="headerlink" title="backtrader tecent tutorial"></a>backtrader tecent tutorial</h1><p>这篇文章是对于腾讯课堂backtrader教程的笔记</p><p>教程 video link:</p><p><a href="https://ke.qq.com/webcourse/index.html#cid=2961673&amp;term_id=103074911&amp;taid=10122795538002185&amp;vid=5285890809636928466" target="_blank" rel="external nofollow noopener noreferrer">https://ke.qq.com/webcourse/index.html#cid=2961673&amp;term_id=103074911&amp;taid=10122795538002185&amp;vid=5285890809636928466</a></p><h1 id="第一章-基础"><a href="#第一章-基础" class="headerlink" title="第一章: 基础"></a>第一章: 基础</h1><h2 id="lines-对象"><a href="#lines-对象" class="headerlink" title="lines 对象"></a>lines 对象</h2><p>lines中每个line对象的访问:</p><ul><li>self.datas[0].lines[0] 访问0号线</li><li>self.datas[0].lines.close直接通过名字访问线对象, 可简写为self.datas[0].close, 进一步简写为self.data.close</li></ul><p>了解lines含有哪些对象的方法:</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">self.datas[<span class="number">0</span>].lines.getlinealiases()</span><br></pre></td></tr></table></figure></div><p>next方法中得到已经处理的bar的数目:</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">len(self)</span><br></pre></td></tr></table></figure></div><p>next方法中不能访问line整体,只能使用比如:</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">self.datas[<span class="number">0</span>].close[<span class="number">0</span>]</span><br></pre></td></tr></table></figure></div><p>init中只能访问line整体, 比如:</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">self.datas[<span class="number">0</span>].close</span><br></pre></td></tr></table></figure></div><p>init方法中, 含线对象可当作其默认线对象使用.  如果有多条线, 那取的是第一条线.</p><p>例如, 下面的代码等效:</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">self.datas[<span class="number">0</span>].lines[<span class="number">0</span>]</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">self.datas[<span class="number">0</span>].close</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">self.data[<span class="number">0</span>]</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">self.data</span><br></pre></td></tr></table></figure></div><h2 id="lines的长度"><a href="#lines的长度" class="headerlink" title="lines的长度"></a>lines的长度</h2><p>len(self.datas[0]) 得到的是当前已处理数据长度</p><p>self.datas[0].buflen()是数据线的总长度, 只有在回测中预加载的时候才能使用.</p><h2 id="line的切片"><a href="#line的切片" class="headerlink" title="line的切片"></a>line的切片</h2><p>self.data.close.get(ago=-1, size=10)</p><p>只能放在next中.</p><h2 id="line的上下移动错位"><a href="#line的上下移动错位" class="headerlink" title="line的上下移动错位"></a>line的上下移动错位</h2><p>self.data.close(-1) 向下移动一位</p><p>self.data.close(1) 向上移动一位</p><h2 id="notify-order"><a href="#notify-order" class="headerlink" title="notify_order"></a>notify_order</h2><p>任何order的变化都会触发notify_order</p><p>order.status 有以下几种状态</p><ul><li>order.Submitted</li><li>order.Accepted</li><li>order.Completed</li><li>order.Canceled</li><li>order.Margin (margin不足时触发)</li><li>order.Rejected</li></ul><h2 id="notify-trade"><a href="#notify-trade" class="headerlink" title="notify_trade"></a>notify_trade</h2><p>trade指仓位从0变成非0， 或者从非0变成0</p><p>任何trade的变化都会触发notify_trade</p><p>self.close()一定会关闭所有交易， 触发notify_trade</p><p>trade的内容：</p><ul><li>trade.pnl 毛收益</li><li>trade.pnlcomm 扣佣后收益</li><li>trade.comission 佣金</li></ul><h2 id="pending-order"><a href="#pending-order" class="headerlink" title="pending order"></a>pending order</h2><p>处于submitted或者accepted的订单</p><p>order状态图可以用下面的图表示。</p><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210119191052.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210119191052.png" class="lazyload"></a></p><p>例子：</p><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210119191417.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210119191417.png" class="lazyload"></a></p><h2 id="minimum-period"><a href="#minimum-period" class="headerlink" title="minimum period"></a>minimum period</h2><p>几个重要的方法</p><ul><li><p>prenext</p></li><li><p>nextstart （这个方法里一定要写self.next!）</p></li><li><p>next</p></li></ul><h2 id="程序运行顺序总结"><a href="#程序运行顺序总结" class="headerlink" title="程序运行顺序总结"></a>程序运行顺序总结</h2><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210119194605.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210119194605.png" class="lazyload"></a></p><p>例子：</p><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210119194848.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210119194848.png" class="lazyload"></a></p><h2 id="常用对象"><a href="#常用对象" class="headerlink" title="常用对象"></a>常用对象</h2><ul><li><p>self.data</p><p>self.datas[0]第一个行情数据</p><p>self.datas[1]第二个行情数据</p><p>self.datas[0].close第一个行情数据收盘线</p></li></ul><ul><li><p>self.position</p><p>self.position.size 第一个行情数据仓位数量</p><p>self.posiotion.price 第一个行情数据仓位平均价格</p><p>如果访问data[1],可调用 self.getposition(self.datas[1])来获得仓位</p></li><li><p>self.broker</p><p>self.broker.getcash() 获得现金</p><p>self.broker.getvalue()获得账户市值</p><p>self.broker.getposition(self.datas[0])获得第一个行情数据对象</p><p>self.broker.getposition(self.datas[0])获得第一个行情数据仓位</p><p>self.broker.getposition(self.datas[0])获得第一个行情数据平均价格(平均成本)</p></li></ul><ul><li><p>order</p><p>在notify_order中可使用下面这些东西.</p><p>order.status订单状态 (数字)</p><p>order.getstatusname()订单状态(名字)</p><p>order.getstatusname(order.status)从数字得到状态名称</p><p>订单的9个状态:</p><ul><li>Created</li><li>Submitted</li><li>Accepted</li><li>Partial</li><li>Completed</li><li>Canceled</li><li>Expired</li><li>Margin</li><li>Rejected</li></ul><p>order.isbuy()判断是不是买单</p><p>order.issell()判断是不是卖单 </p></li></ul><h1 id="第二章-数据"><a href="#第二章-数据" class="headerlink" title="第二章: 数据"></a>第二章: 数据</h1><p>数据应该是后复权的数据, 原因是分红计算更准确</p><h2 id="GenericCSV的扩展"><a href="#GenericCSV的扩展" class="headerlink" title="GenericCSV的扩展"></a>GenericCSV的扩展</h2><p>默认的GenericCSV只有7列, 如果要扩展需要继承并且手动加线.</p><p>增加一个pe线的例子</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GenericCSV_PE</span><span class="params">(GenericCSVData)</span>:</span></span><br><span class="line">    lines = (<span class="string">'pe'</span>, )</span><br><span class="line">    <span class="comment"># 默认第八列</span></span><br><span class="line">    params = ((<span class="string">'pe'</span>, <span class="number">8</span>), )</span><br><span class="line"></span><br><span class="line">data = GenericCSV_PE(</span><br><span class="line">    dataname=datapath,</span><br><span class="line">    datetime=<span class="number">2</span>,<span class="comment"># 几就表示第几列</span></span><br><span class="line">    open=<span class="number">3</span>,</span><br><span class="line">    high=<span class="number">4</span>,</span><br><span class="line">    low=<span class="number">5</span>,</span><br><span class="line">    close=<span class="number">6</span>,</span><br><span class="line">    volume=<span class="number">10</span>,</span><br><span class="line">    openinterest=<span class="number">-1</span>, <span class="comment"># -1表示没有openinterest信息</span></span><br><span class="line">    pe=<span class="number">12</span>,</span><br><span class="line">    dtformat=(<span class="string">'%Y%m%d'</span>),</span><br><span class="line">    fromdate=datetime(<span class="number">2019</span>, <span class="number">1</span>, <span class="number">1</span>),</span><br><span class="line">    todate=datetime(<span class="number">2020</span>, <span class="number">7</span> , <span class="number">8</span>)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">cerebro.adddata(data)</span><br></pre></td></tr></table></figure></div><h2 id="pandas读取数据"><a href="#pandas读取数据" class="headerlink" title="pandas读取数据"></a>pandas读取数据</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">dataframe = pandas.read_csv(</span><br><span class="line">    datapath,</span><br><span class="line">    skiprows=<span class="number">0</span>, <span class="comment"># 不忽略行</span></span><br><span class="line">    header=<span class="number">0</span>, <span class="comment"># 列头在第0行</span></span><br><span class="line">    parse_dates=<span class="literal">True</span>, <span class="comment"># 解析日期</span></span><br><span class="line">    index_col=<span class="number">2</span> <span class="comment"># 索引列(日期)在第二列</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">data = bt.feeds.PandasData(</span><br><span class="line">    dataname=dataframe,</span><br><span class="line">    datetime=<span class="literal">None</span>, <span class="comment">#使用索引列作为日期,如果不是索引列则要赋列名,比如"date"</span></span><br><span class="line">    open=<span class="number">2</span>, <span class="comment"># 2 代表open在第二列</span></span><br><span class="line">    high=<span class="number">3</span>,</span><br><span class="line">    low=<span class="number">4</span>,</span><br><span class="line">    close=<span class="number">5</span>,</span><br><span class="line">    volumne=<span class="number">9</span>,</span><br><span class="line">    openinterest=<span class="number">-1</span>,</span><br><span class="line">    fromdate=datetime(<span class="number">2019</span>, <span class="number">5</span>, <span class="number">1</span>)</span><br><span class="line">    todate=datetime(<span class="number">2019</span>, <span class="number">10</span>, <span class="number">1</span>)</span><br><span class="line">)</span><br></pre></td></tr></table></figure></div><h1 id="第三章-analyzer-和-observer"><a href="#第三章-analyzer-和-observer" class="headerlink" title="第三章: analyzer 和 observer"></a>第三章: analyzer 和 observer</h1><h2 id="常用的analyzer"><a href="#常用的analyzer" class="headerlink" title="常用的analyzer"></a>常用的analyzer</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">cerebro.addanalyze(bt.analyzers.SharpeRatio, riskfreerate=<span class="number">0.01</span>, annualize=<span class="literal">True</span>, _name=<span class="string">'shart_ratio'</span>)</span><br><span class="line"></span><br><span class="line">cerebro.addanalyze(bt.analyzers.AnnualReturn, _name=<span class="string">'annual_return'</span>)</span><br><span class="line"></span><br><span class="line">cerebro.addanalyze(bt.analyzers.DrawDown, _name=<span class="string">'drawdown'</span>)</span><br><span class="line"></span><br><span class="line">cerebro.addanalyze(bt.analyzers.TradeAnalyzer)</span><br><span class="line"></span><br><span class="line">thestrats = cerebro.run()</span><br><span class="line">thestrat = thestrats[<span class="number">0</span>]</span><br></pre></td></tr></table></figure></div><h2 id="稍微好看的打印方法"><a href="#稍微好看的打印方法" class="headerlink" title="稍微好看的打印方法"></a>稍微好看的打印方法</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> a <span class="keyword">in</span> thestrat.analyzers:</span><br><span class="line">    a.print()</span><br></pre></td></tr></table></figure></div><h2 id="内置的一些的analyzers"><a href="#内置的一些的analyzers" class="headerlink" title="内置的一些的analyzers"></a>内置的一些的analyzers</h2><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210120230409.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210120230409.png" class="lazyload"></a></p><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210120230511.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210120230511.png" class="lazyload"></a></p><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210120230703.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210120230703.png" class="lazyload"></a></p><h2 id="开发新的observer"><a href="#开发新的observer" class="headerlink" title="开发新的observer"></a>开发新的observer</h2><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210121004134.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210121004134.png" class="lazyload"></a></p><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210121004212.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210121004212.png" class="lazyload"></a></p><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210121004301.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210121004301.png" class="lazyload"></a></p><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210121004323.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210121004323.png" class="lazyload"></a></p><h1 id="第四章-writer-broker-indicator"><a href="#第四章-writer-broker-indicator" class="headerlink" title="第四章: writer, broker, indicator"></a>第四章: writer, broker, indicator</h1><h2 id="使用例子"><a href="#使用例子" class="headerlink" title="使用例子"></a>使用例子</h2><p>cerebro.addwriter(bt.WriterFile, rounding=2)</p><p>cerebro.addwriter(bt.WriterFile, out=’xxx.csv’, rounding=2)</p><p>cerebro.addwriter(bt.WriterFile, csv=True, out=’xxx.csv’, rounding=2)</p><h2 id="把indicator也输出到writer结果中"><a href="#把indicator也输出到writer结果中" class="headerlink" title="把indicator也输出到writer结果中"></a>把indicator也输出到writer结果中</h2><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210121005719.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210121005719.png" class="lazyload"></a></p><h2 id="使用ta-lib指标"><a href="#使用ta-lib指标" class="headerlink" title="使用ta-lib指标"></a>使用ta-lib指标</h2><p>self.sma = bt.talib.SMA(self.data, timeperiod=self.p.period)</p><h2 id="自定义指标"><a href="#自定义指标" class="headerlink" title="自定义指标"></a>自定义指标</h2><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210121011526.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210121011526.png" class="lazyload"></a></p><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210121011542.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210121011542.png" class="lazyload"></a></p><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210121011827.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210121011827.png" class="lazyload"></a></p><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210121012014.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210121012014.png" class="lazyload"></a></p><h2 id="indicator中的运算符"><a href="#indicator中的运算符" class="headerlink" title="indicator中的运算符"></a>indicator中的运算符</h2><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210121011651.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210121011651.png" class="lazyload"></a></p><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210121011729.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210121011729.png" class="lazyload"></a></p><h1 id="第五章-订单"><a href="#第五章-订单" class="headerlink" title="第五章: 订单"></a>第五章: 订单</h1><h2 id="利用buy-sell-close-下单"><a href="#利用buy-sell-close-下单" class="headerlink" title="利用buy/sell/close 下单"></a>利用buy/sell/close 下单</h2><p>buy的参数:</p><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210121213721.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210121213721.png" class="lazyload"></a></p><h2 id="取消所有订单"><a href="#取消所有订单" class="headerlink" title="取消所有订单"></a>取消所有订单</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> order <span class="keyword">in</span> orders:</span><br><span class="line">self.broker.cancel(order)</span><br></pre></td></tr></table></figure></div><h2 id="buy-sell的有效天数"><a href="#buy-sell的有效天数" class="headerlink" title="buy sell的有效天数"></a>buy sell的有效天数</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">validday = self.data.datetime[<span class="number">0</span>] <span class="comment"># current date time</span></span><br><span class="line">validday = bt.num2date(validday) + timedelta(days=<span class="number">3</span>)</span><br><span class="line">print(<span class="string">'validday'</span>, validday)</span><br><span class="line"></span><br><span class="line">self.order = self.buy(</span><br><span class="line">    size=<span class="number">100</span>,</span><br><span class="line">    valid=validday,</span><br><span class="line">    exectype=bt.Order.Limit,</span><br><span class="line">    price=someprice</span><br><span class="line">)</span><br></pre></td></tr></table></figure></div><h2 id="自定义下单量"><a href="#自定义下单量" class="headerlink" title="自定义下单量"></a>自定义下单量</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LongOnly</span><span class="params">(bt.sizer)</span>:</span></span><br><span class="line">    params=((<span class="string">'stake'</span>, <span class="number">100</span>), )</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_getsizing</span><span class="params">(self, comminfo, cash, data, isbuy)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> isbuy:</span><br><span class="line">            <span class="keyword">return</span> self.p.stake</span><br><span class="line">        position = self.broker.getposition(data)</span><br><span class="line">        <span class="keyword">return</span> min(self.p.stake, position.size)</span><br></pre></td></tr></table></figure></div><p>自定义的sizer中可以访问:</p><ul><li>self.strategy</li><li>self.broker</li></ul><h2 id="注入sizer到cerebro"><a href="#注入sizer到cerebro" class="headerlink" title="注入sizer到cerebro"></a>注入sizer到cerebro</h2><p>cerebro.addsizer_byidx(idx, sizercls, <em>args, *</em>kwargs)</p><p>例子:</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">idx = cerebro.addstratregy(MyStrategy)</span><br><span class="line">cerebro.addsizer_byidx(idx, LongOnly) <span class="comment"># MyStrategy使用这个sizer</span></span><br><span class="line"></span><br><span class="line">cerebro.addsizer(bt.sizers.SizerFix, stake=<span class="number">20</span>) <span class="comment"># 其他strategy使用这个sizer</span></span><br></pre></td></tr></table></figure></div><h2 id="order-target-xxx-下单方法"><a href="#order-target-xxx-下单方法" class="headerlink" title="order_target_xxx 下单方法"></a>order_target_xxx 下单方法</h2><ul><li><p>self.order_target_size(target=10000)  #通过买卖, 将self.data对应的股票仓位数量调整至10000股</p></li><li><p>self.order_target_value(target=10000) #通过买卖, 将self.data对应的股票仓位价值调整至10000元.如果不能整除则向下取整</p></li><li>sefl.order_target_percent(target=0.1)</li></ul><h1 id="第六章-策略参数优化-时间粒度"><a href="#第六章-策略参数优化-时间粒度" class="headerlink" title="第六章: 策略参数优化, 时间粒度"></a>第六章: 策略参数优化, 时间粒度</h1><h2 id="参数优化命令"><a href="#参数优化命令" class="headerlink" title="参数优化命令"></a>参数优化命令</h2><p>strats = cerebro.optstrategy(SmaCross, pfast=[5, 10, 15], pslow=[20, 30, 60])</p><p>strats = cerebro.optstrategy(SmaCross, period=[(5, 10), (5, 20), (10, 20)])</p><h2 id="混合时间粒度"><a href="#混合时间粒度" class="headerlink" title="混合时间粒度"></a>混合时间粒度</h2><p>必须使用cerebro.run(runonce=False)才不会出错</p><p>不同时间粒度指标比较,需要加原括号, 例如: self.isober = self.move_average_5min_bar &gt; self.move_average_day_bar()</p><h2 id="小粒度合成大粒度"><a href="#小粒度合成大粒度" class="headerlink" title="小粒度合成大粒度"></a>小粒度合成大粒度</h2><p>下面的代码将日线数据合成周线, 并储存在self.datas[1]中(data是日线)</p><p>cerebro.resampledata(data, timeframe=bt.TimeFrame.Weeks, compression=1)</p><p>下面的代码将日线数据合成轴线, 并且将两根轴线合并成一根周线(data是日线)</p><p>cerebro.resampledata(data, timeframe=bt.TimeFrame.Weeks, compression=2)</p><p>下面的代码将5分钟k线合成10分钟k线(data是5分钟k线)</p><p>cerebro.resampledata(data, timeframe=bt.TimeFrame.Minutes, compression=2)</p><p>下面的代码将tick数据合成1分钟数据(data是tick数据)</p><p>cerebro.resampledata(data, timeframe=bt.TimeFrame.Minutes, compression=1)</p><h1 id="第七章-多股票组合策略"><a href="#第七章-多股票组合策略" class="headerlink" title="第七章 多股票组合策略"></a>第七章 多股票组合策略</h1><h2 id="加载多个数据"><a href="#加载多个数据" class="headerlink" title="加载多个数据"></a>加载多个数据</h2><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210124171659.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210124171659.png" class="lazyload"></a></p><h2 id="定期再平衡策略-月线"><a href="#定期再平衡策略-月线" class="headerlink" title="定期再平衡策略(月线)"></a>定期再平衡策略(月线)</h2><p>例子:</p><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210124200723.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210124200723.png" class="lazyload"></a></p><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210124201014.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210124201014.png" class="lazyload"></a></p><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210124201901.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210124201901.png" class="lazyload"></a></p>]]></content>
      
      
      <categories>
          
          <category> finance </category>
          
          <category> backtrader </category>
          
      </categories>
      
      
        <tags>
            
            <tag> finance </tag>
            
            <tag> backtrader </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>backtrader youtube tutorial notes</title>
      <link href="/2021/01/15/finance/backtrader/backtrader_youtube_tutorial/"/>
      <url>/2021/01/15/finance/backtrader/backtrader_youtube_tutorial/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="backtrader框架"><a href="#backtrader框架" class="headerlink" title="backtrader框架"></a>backtrader框架</h1><p>video link:</p><p><a href="https://www.youtube.com/watch?v=aTIkLcql0Is&amp;list=PLHxM50fGnEoVSkh8PAI7dTWtEFJuu9Yom&amp;index=17" target="_blank" rel="external nofollow noopener noreferrer">https://www.youtube.com/watch?v=aTIkLcql0Is&amp;list=PLHxM50fGnEoVSkh8PAI7dTWtEFJuu9Yom&amp;index=17</a></p><p>code link:</p><p><a href="https://github.com/supersheepbear/backtrader_learn" target="_blank" rel="external nofollow noopener noreferrer">https://github.com/supersheepbear/backtrader_learn</a></p><h1 id="整体框架"><a href="#整体框架" class="headerlink" title="整体框架"></a>整体框架</h1><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210115200537.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210115200537.png" class="lazyload" title></a></p><h1 id="backtrader回测执行逻辑"><a href="#backtrader回测执行逻辑" class="headerlink" title="backtrader回测执行逻辑"></a>backtrader回测执行逻辑</h1><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210115200627.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210115200627.png" class="lazyload" title></a></p><h1 id="strategy的生命周期"><a href="#strategy的生命周期" class="headerlink" title="strategy的生命周期"></a>strategy的生命周期</h1><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210115201609.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210115201609.png" class="lazyload" title></a></p><h1 id="indicator的一般编写步骤"><a href="#indicator的一般编写步骤" class="headerlink" title="indicator的一般编写步骤"></a>indicator的一般编写步骤</h1><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210115202049.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210115202049.png" class="lazyload" title></a></p><h1 id="Dual-Thrust-indicator-编写举例"><a href="#Dual-Thrust-indicator-编写举例" class="headerlink" title="Dual Thrust indicator 编写举例"></a>Dual Thrust indicator 编写举例</h1><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210115203711.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210115203711.png" class="lazyload" title></a><br><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210115202930.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210115202930.png" class="lazyload" title></a></p><h1 id="策略优化"><a href="#策略优化" class="headerlink" title="策略优化"></a>策略优化</h1><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210115221317.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210115221317.png" class="lazyload" title></a></p><h1 id="交易参数设置"><a href="#交易参数设置" class="headerlink" title="交易参数设置"></a>交易参数设置</h1><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210116000312.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210116000312.png" class="lazyload" title></a></p><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210116210610.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210116210610.png" class="lazyload" title></a></p><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210116210552.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210116210552.png" class="lazyload" title></a></p><h1 id="Writer-设置"><a href="#Writer-设置" class="headerlink" title="Writer 设置"></a>Writer 设置</h1><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210116210629.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210116210629.png" class="lazyload" title></a></p><h1 id="数据获取"><a href="#数据获取" class="headerlink" title="数据获取"></a>数据获取</h1><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210116210641.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210116210641.png" class="lazyload" title></a></p><h1 id="observer"><a href="#observer" class="headerlink" title="observer"></a>observer</h1><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210116211347.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210116211347.png" class="lazyload" title></a></p><h1 id="portfolio回测"><a href="#portfolio回测" class="headerlink" title="portfolio回测"></a>portfolio回测</h1><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210118113708.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20210118113708.png" class="lazyload" title></a></p>]]></content>
      
      
      <categories>
          
          <category> finance </category>
          
          <category> backtrader </category>
          
      </categories>
      
      
        <tags>
            
            <tag> finance </tag>
            
            <tag> backtrader </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>class_tricks</title>
      <link href="/2020/12/08/python/advanced/class_tricks/"/>
      <url>/2020/12/08/python/advanced/class_tricks/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>track一些有用的 python class的连接</p><p>正确理解@staticmethod和@classmethod的实用例子</p><p><a href="https://zhuanlan.zhihu.com/p/28010894" target="_blank" rel="external nofollow noopener noreferrer">https://zhuanlan.zhihu.com/p/28010894</a></p><p>深入理解 <code>__new__</code></p><p><a href="https://blog.csdn.net/luoweifu/article/details/82732313" target="_blank" rel="external nofollow noopener noreferrer">https://blog.csdn.net/luoweifu/article/details/82732313</a></p><p>dataclasses 文档</p><p><a href="https://www.python.org/dev/peps/pep-0557/" target="_blank" rel="external nofollow noopener noreferrer">https://www.python.org/dev/peps/pep-0557/</a></p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
          <category> advanced </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ib_insync速查表</title>
      <link href="/2020/03/01/finance/vnpy_notes/ib_insync%E9%80%9F%E6%9F%A5%E8%A1%A8/"/>
      <url>/2020/03/01/finance/vnpy_notes/ib_insync%E9%80%9F%E6%9F%A5%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>此文为ib_insync需要下载历史数据用的一些操作. 目的是能迅速查到想要的code.<br>ib_insync是ib的 python api. 因为vnpy已经封装了ib的实盘模块, 所以我用ib_insync只是为了下载历史数据.</p><h1 id="ib基础"><a href="#ib基础" class="headerlink" title="ib基础"></a>ib基础</h1><h2 id="连接ib"><a href="#连接ib" class="headerlink" title="连接ib"></a>连接ib</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> ib_insync</span><br><span class="line">print(ib_insync.__all__)</span><br></pre></td></tr></table></figure></div><pre><code>[&#39;util&#39;, &#39;Event&#39;, &#39;SoftDollarTier&#39;, &#39;PriceIncrement&#39;, &#39;Execution&#39;, &#39;CommissionReport&#39;, &#39;BarList&#39;, &#39;BarDataList&#39;, &#39;RealTimeBarList&#39;, &#39;BarData&#39;, &#39;RealTimeBar&#39;, &#39;HistogramData&#39;, &#39;NewsProvider&#39;, &#39;DepthMktDataDescription&#39;, &#39;ScannerSubscription&#39;, &#39;ScanDataList&#39;, &#39;FundamentalRatios&#39;, &#39;ExecutionFilter&#39;, &#39;PnL&#39;, &#39;PnLSingle&#39;, &#39;AccountValue&#39;, &#39;TickData&#39;, &#39;TickByTickAllLast&#39;, &#39;TickByTickBidAsk&#39;, &#39;TickByTickMidPoint&#39;, &#39;HistoricalTick&#39;, &#39;HistoricalTickBidAsk&#39;, &#39;HistoricalTickLast&#39;, &#39;TickAttrib&#39;, &#39;TickAttribBidAsk&#39;, &#39;TickAttribLast&#39;, &#39;MktDepthData&#39;, &#39;DOMLevel&#39;, &#39;TradeLogEntry&#39;, &#39;TagValue&#39;, &#39;FamilyCode&#39;, &#39;SmartComponent&#39;, &#39;PortfolioItem&#39;, &#39;Position&#39;, &#39;Fill&#39;, &#39;OptionComputation&#39;, &#39;OptionChain&#39;, &#39;Dividends&#39;, &#39;NewsArticle&#39;, &#39;HistoricalNews&#39;, &#39;NewsTick&#39;, &#39;NewsBulletin&#39;, &#39;ConnectionStats&#39;, &#39;Contract&#39;, &#39;Stock&#39;, &#39;Option&#39;, &#39;Future&#39;, &#39;ContFuture&#39;, &#39;Forex&#39;, &#39;Index&#39;, &#39;CFD&#39;, &#39;Commodity&#39;, &#39;Bond&#39;, &#39;FuturesOption&#39;, &#39;MutualFund&#39;, &#39;Warrant&#39;, &#39;Bag&#39;, &#39;ComboLeg&#39;, &#39;DeltaNeutralContract&#39;, &#39;ContractDetails&#39;, &#39;ContractDescription&#39;, &#39;ScanData&#39;, &#39;Trade&#39;, &#39;Order&#39;, &#39;OrderStatus&#39;, &#39;OrderState&#39;, &#39;OrderComboLeg&#39;, &#39;LimitOrder&#39;, &#39;MarketOrder&#39;, &#39;StopOrder&#39;, &#39;StopLimitOrder&#39;, &#39;BracketOrder&#39;, &#39;OrderCondition&#39;, &#39;ExecutionCondition&#39;, &#39;MarginCondition&#39;, &#39;TimeCondition&#39;, &#39;PriceCondition&#39;, &#39;PercentChangeCondition&#39;, &#39;VolumeCondition&#39;, &#39;Ticker&#39;, &#39;IB&#39;, &#39;Client&#39;, &#39;Wrapper&#39;, &#39;FlexReport&#39;, &#39;FlexError&#39;, &#39;IBC&#39;, &#39;IBController&#39;, &#39;Watchdog&#39;]</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> ib_insync <span class="keyword">import</span> *</span><br><span class="line">util.startLoop()</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ib = IB()</span><br><span class="line">ib.connect(<span class="string">'127.0.0.1'</span>, <span class="number">7497</span>, clientId=<span class="number">37</span>)</span><br></pre></td></tr></table></figure></div><pre><code>&lt;IB connected to 127.0.0.1:7497 clientId=37&gt;</code></pre><h2 id="合约查询"><a href="#合约查询" class="headerlink" title="合约查询"></a>合约查询</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ib.reqPositions()</span><br></pre></td></tr></table></figure></div><pre><code>[Position(account=&#39;DU1331072&#39;, contract=Forex(&#39;EURUSD&#39;, conId=12087792, localSymbol=&#39;EUR.USD&#39;, tradingClass=&#39;EUR.USD&#39;), position=0.0, avgCost=0.0)]</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ib.positions()</span><br></pre></td></tr></table></figure></div><pre><code>[]</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[v <span class="keyword">for</span> v <span class="keyword">in</span> ib.accountValues() <span class="keyword">if</span> v.tag == <span class="string">'NetLiquidationByCurrency'</span> <span class="keyword">and</span> v.currency == <span class="string">'BASE'</span>]</span><br></pre></td></tr></table></figure></div><pre><code>[AccountValue(account=&#39;DU1331072&#39;, tag=&#39;NetLiquidationByCurrency&#39;, value=&#39;1016878.84&#39;, currency=&#39;BASE&#39;, modelCode=&#39;&#39;)]</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Contract(conId=<span class="number">270639</span>)</span><br><span class="line">Stock(<span class="string">'AMD'</span>, <span class="string">'SMART'</span>, <span class="string">'USD'</span>)</span><br><span class="line">Stock(<span class="string">'INTC'</span>, <span class="string">'SMART'</span>, <span class="string">'USD'</span>, primaryExchange=<span class="string">'NASDAQ'</span>)</span><br><span class="line">Forex(<span class="string">'EURUSD'</span>)</span><br><span class="line">CFD(<span class="string">'IBUS30'</span>)</span><br><span class="line">Future(<span class="string">'ES'</span>, <span class="string">'20180921'</span>, <span class="string">'GLOBEX'</span>)</span><br><span class="line">Option(<span class="string">'SPY'</span>, <span class="string">'20170721'</span>, <span class="number">240</span>, <span class="string">'C'</span>, <span class="string">'SMART'</span>)</span><br><span class="line">Bond(secIdType=<span class="string">'ISIN'</span>, secId=<span class="string">'US03076KAA60'</span>);</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">contract = Stock(<span class="string">'TSLA'</span>, <span class="string">'SMART'</span>, <span class="string">'USD'</span>)</span><br><span class="line">ib.reqContractDetails(contract)</span><br></pre></td></tr></table></figure></div><pre><code>[ContractDetails(contract=Contract(secType=&#39;STK&#39;, conId=76792991, symbol=&#39;TSLA&#39;, exchange=&#39;SMART&#39;, primaryExchange=&#39;NASDAQ&#39;, currency=&#39;USD&#39;, localSymbol=&#39;TSLA&#39;, tradingClass=&#39;NMS&#39;), marketName=&#39;NMS&#39;, minTick=0.01, orderTypes=&#39;ACTIVETIM,AD,ADJUST,ALERT,ALGO,ALLOC,AVGCOST,BASKET,BENCHPX,COND,CONDORDER,DARKONLY,DARKPOLL,DAY,DEACT,DEACTDIS,DEACTEOD,DIS,GAT,GTC,GTD,GTT,HID,IBKRATS,ICE,IMB,IOC,LIT,LMT,LOC,MIT,MKT,MOC,MTL,NGCOMB,NODARK,NONALGO,OCA,OPG,OPGREROUT,PEGBENCH,POSTONLY,PREOPGRTH,REL,RPI,RTH,SCALE,SCALEODD,SCALERST,SNAPMID,SNAPMKT,SNAPREL,STP,STPLMT,SWEEP,TRAIL,TRAILLIT,TRAILLMT,TRAILMIT,WHATIF&#39;, validExchanges=&#39;SMART,AMEX,NYSE,CBOE,PHLX,ISE,CHX,ARCA,ISLAND,DRCTEDGE,BEX,BATS,EDGEA,CSFBALGO,JEFFALGO,BYX,IEX,EDGX,FOXRIVER,NYSENAT,PSX&#39;, priceMagnifier=1, underConId=0, longName=&#39;TESLA INC&#39;, contractMonth=&#39;&#39;, industry=&#39;Consumer, Cyclical&#39;, category=&#39;Auto Manufacturers&#39;, subcategory=&#39;Auto-Cars/Light Trucks&#39;, timeZoneId=&#39;EST&#39;, tradingHours=&#39;20200301:CLOSED;20200302:0400-20200302:2000;20200303:0400-20200303:2000;20200304:0400-20200304:2000;20200305:0400-20200305:2000;20200306:0400-20200306:2000;20200307:CLOSED;20200308:CLOSED;20200309:0400-20200309:2000;20200310:0400-20200310:2000;20200311:0400-20200311:2000;20200312:0400-20200312:2000;20200313:0400-20200313:2000;20200314:CLOSED;20200315:CLOSED;20200316:0400-20200316:2000;20200317:0400-20200317:2000;20200318:0400-20200318:2000;20200319:0400-20200319:2000;20200320:0400-20200320:2000;20200321:CLOSED;20200322:CLOSED;20200323:0400-20200323:2000;20200324:0400-20200324:2000;20200325:0400-20200325:2000;20200326:0400-20200326:2000;20200327:0400-20200327:2000;20200328:CLOSED;20200329:CLOSED;20200330:0400-20200330:2000;20200331:0400-20200331:2000;20200401:0400-20200401:2000;20200402:0400-20200402:2000;20200403:0400-20200403:2000;20200404:CLOSED&#39;, liquidHours=&#39;20200301:CLOSED;20200302:0930-20200302:1600;20200303:0930-20200303:1600;20200304:0930-20200304:1600;20200305:0930-20200305:1600;20200306:0930-20200306:1600;20200307:CLOSED;20200308:CLOSED;20200309:0930-20200309:1600;20200310:0930-20200310:1600;20200311:0930-20200311:1600;20200312:0930-20200312:1600;20200313:0930-20200313:1600;20200314:CLOSED;20200315:CLOSED;20200316:0930-20200316:1600;20200317:0930-20200317:1600;20200318:0930-20200318:1600;20200319:0930-20200319:1600;20200320:0930-20200320:1600;20200321:CLOSED;20200322:CLOSED;20200323:0930-20200323:1600;20200324:0930-20200324:1600;20200325:0930-20200325:1600;20200326:0930-20200326:1600;20200327:0930-20200327:1600;20200328:CLOSED;20200329:CLOSED;20200330:0930-20200330:1600;20200331:0930-20200331:1600;20200401:0930-20200401:1600;20200402:0930-20200402:1600;20200403:0930-20200403:1600;20200404:CLOSED&#39;, evRule=&#39;&#39;, evMultiplier=0, mdSizeMultiplier=100, aggGroup=1, underSymbol=&#39;&#39;, underSecType=&#39;&#39;, marketRuleIds=&#39;26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26&#39;, secIdList=[], realExpirationDate=&#39;&#39;, lastTradeTime=&#39;&#39;, stockType=&#39;&#39;, cusip=&#39;&#39;, ratings=&#39;&#39;, descAppend=&#39;&#39;, bondType=&#39;&#39;, couponType=&#39;&#39;, callable=False, putable=False, coupon=0, convertible=False, maturity=&#39;&#39;, issueDate=&#39;&#39;, nextOptionDate=&#39;&#39;, nextOptionType=&#39;&#39;, nextOptionPartial=False, notes=&#39;&#39;)]</code></pre><h2 id="日志信息级别"><a href="#日志信息级别" class="headerlink" title="日志信息级别"></a>日志信息级别</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">util.logToConsole()</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> logging</span><br><span class="line">util.logToConsole(logging.ERROR)</span><br></pre></td></tr></table></figure></div><h2 id="断开ib"><a href="#断开ib" class="headerlink" title="断开ib"></a>断开ib</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ib.disconnect()</span><br></pre></td></tr></table></figure></div><h1 id="合约细节"><a href="#合约细节" class="headerlink" title="合约细节"></a>合约细节</h1><h2 id="合约基础信息"><a href="#合约基础信息" class="headerlink" title="合约基础信息"></a>合约基础信息</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> ib_insync <span class="keyword">import</span> *</span><br><span class="line">util.startLoop()</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="comment"># util.logToConsole(logging.DEBUG)</span></span><br><span class="line"></span><br><span class="line">ib = IB()</span><br><span class="line">ib.connect(<span class="string">'127.0.0.1'</span>, <span class="number">7497</span>, clientId=<span class="number">11</span>)</span><br></pre></td></tr></table></figure></div><pre><code>&lt;IB connected to 127.0.0.1:7497 clientId=11&gt;</code></pre><p>cds 包含了所有交易所对于这个合约的细节信息。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">amd = Stock(<span class="string">'AMD'</span>)</span><br><span class="line"></span><br><span class="line">cds = ib.reqContractDetails(amd)</span><br><span class="line"></span><br><span class="line">len(cds)</span><br></pre></td></tr></table></figure></div><pre><code>35</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cds[<span class="number">0</span>]</span><br></pre></td></tr></table></figure></div><pre><code>ContractDetails(contract=Contract(secType=&#39;STK&#39;, conId=4391, symbol=&#39;AMD&#39;, exchange=&#39;SMART&#39;, primaryExchange=&#39;NASDAQ&#39;, currency=&#39;USD&#39;, localSymbol=&#39;AMD&#39;, tradingClass=&#39;NMS&#39;), marketName=&#39;NMS&#39;, minTick=0.01, orderTypes=&#39;ACTIVETIM,AD,ADJUST,ALERT,ALGO,ALLOC,AVGCOST,BASKET,BENCHPX,COND,CONDORDER,DARKONLY,DARKPOLL,DAY,DEACT,DEACTDIS,DEACTEOD,DIS,GAT,GTC,GTD,GTT,HID,IBKRATS,ICE,IMB,IOC,LIT,LMT,LOC,MIT,MKT,MOC,MTL,NGCOMB,NODARK,NONALGO,OCA,OPG,OPGREROUT,PEGBENCH,POSTONLY,PREOPGRTH,REL,RPI,RTH,SCALE,SCALEODD,SCALERST,SNAPMID,SNAPMKT,SNAPREL,STP,STPLMT,SWEEP,TRAIL,TRAILLIT,TRAILLMT,TRAILMIT,WHATIF&#39;, validExchanges=&#39;SMART,AMEX,NYSE,CBOE,PHLX,ISE,CHX,ARCA,ISLAND,DRCTEDGE,BEX,BATS,EDGEA,CSFBALGO,JEFFALGO,BYX,IEX,EDGX,FOXRIVER,NYSENAT,PSX&#39;, priceMagnifier=1, underConId=0, longName=&#39;ADVANCED MICRO DEVICES&#39;, contractMonth=&#39;&#39;, industry=&#39;Technology&#39;, category=&#39;Semiconductors&#39;, subcategory=&#39;Electronic Compo-Semicon&#39;, timeZoneId=&#39;EST&#39;, tradingHours=&#39;20200301:CLOSED;20200302:0400-20200302:2000;20200303:0400-20200303:2000;20200304:0400-20200304:2000;20200305:0400-20200305:2000;20200306:0400-20200306:2000;20200307:CLOSED;20200308:CLOSED;20200309:0400-20200309:2000;20200310:0400-20200310:2000;20200311:0400-20200311:2000;20200312:0400-20200312:2000;20200313:0400-20200313:2000;20200314:CLOSED;20200315:CLOSED;20200316:0400-20200316:2000;20200317:0400-20200317:2000;20200318:0400-20200318:2000;20200319:0400-20200319:2000;20200320:0400-20200320:2000;20200321:CLOSED;20200322:CLOSED;20200323:0400-20200323:2000;20200324:0400-20200324:2000;20200325:0400-20200325:2000;20200326:0400-20200326:2000;20200327:0400-20200327:2000;20200328:CLOSED;20200329:CLOSED;20200330:0400-20200330:2000;20200331:0400-20200331:2000;20200401:0400-20200401:2000;20200402:0400-20200402:2000;20200403:0400-20200403:2000;20200404:CLOSED&#39;, liquidHours=&#39;20200301:CLOSED;20200302:0930-20200302:1600;20200303:0930-20200303:1600;20200304:0930-20200304:1600;20200305:0930-20200305:1600;20200306:0930-20200306:1600;20200307:CLOSED;20200308:CLOSED;20200309:0930-20200309:1600;20200310:0930-20200310:1600;20200311:0930-20200311:1600;20200312:0930-20200312:1600;20200313:0930-20200313:1600;20200314:CLOSED;20200315:CLOSED;20200316:0930-20200316:1600;20200317:0930-20200317:1600;20200318:0930-20200318:1600;20200319:0930-20200319:1600;20200320:0930-20200320:1600;20200321:CLOSED;20200322:CLOSED;20200323:0930-20200323:1600;20200324:0930-20200324:1600;20200325:0930-20200325:1600;20200326:0930-20200326:1600;20200327:0930-20200327:1600;20200328:CLOSED;20200329:CLOSED;20200330:0930-20200330:1600;20200331:0930-20200331:1600;20200401:0930-20200401:1600;20200402:0930-20200402:1600;20200403:0930-20200403:1600;20200404:CLOSED&#39;, evRule=&#39;&#39;, evMultiplier=0, mdSizeMultiplier=100, aggGroup=1, underSymbol=&#39;&#39;, underSecType=&#39;&#39;, marketRuleIds=&#39;26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26&#39;, secIdList=[], realExpirationDate=&#39;&#39;, lastTradeTime=&#39;&#39;, stockType=&#39;&#39;, cusip=&#39;&#39;, ratings=&#39;&#39;, descAppend=&#39;&#39;, bondType=&#39;&#39;, couponType=&#39;&#39;, callable=False, putable=False, coupon=0, convertible=False, maturity=&#39;&#39;, issueDate=&#39;&#39;, nextOptionDate=&#39;&#39;, nextOptionType=&#39;&#39;, nextOptionPartial=False, notes=&#39;&#39;)</code></pre><p>查看合约最基础信息</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">contracts = [cd.contract <span class="keyword">for</span> cd <span class="keyword">in</span> cds]</span><br><span class="line"></span><br><span class="line">contracts[<span class="number">0</span>]</span><br></pre></td></tr></table></figure></div><pre><code>Contract(secType=&#39;STK&#39;, conId=4391, symbol=&#39;AMD&#39;, exchange=&#39;SMART&#39;, primaryExchange=&#39;NASDAQ&#39;, currency=&#39;USD&#39;, localSymbol=&#39;AMD&#39;, tradingClass=&#39;NMS&#39;)</code></pre><h2 id="合约查看和filter"><a href="#合约查看和filter" class="headerlink" title="合约查看和filter"></a>合约查看和filter</h2><p>股票’AMD’的当前所以可以交易的合约信息</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">util.df(contracts).head()</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>secType</th>      <th>conId</th>      <th>symbol</th>      <th>lastTradeDateOrContractMonth</th>      <th>strike</th>      <th>right</th>      <th>multiplier</th>      <th>exchange</th>      <th>primaryExchange</th>      <th>currency</th>      <th>localSymbol</th>      <th>tradingClass</th>      <th>includeExpired</th>      <th>secIdType</th>      <th>secId</th>      <th>comboLegsDescrip</th>      <th>comboLegs</th>      <th>deltaNeutralContract</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>STK</td>      <td>4391</td>      <td>AMD</td>      <td></td>      <td>0.0</td>      <td></td>      <td></td>      <td>SMART</td>      <td>NASDAQ</td>      <td>USD</td>      <td>AMD</td>      <td>NMS</td>      <td>False</td>      <td></td>      <td></td>      <td></td>      <td>[]</td>      <td>None</td>    </tr>    <tr>      <th>1</th>      <td>STK</td>      <td>32596680</td>      <td>AMD</td>      <td></td>      <td>0.0</td>      <td></td>      <td></td>      <td>SMART</td>      <td>IBIS</td>      <td>EUR</td>      <td>AMD</td>      <td>XETRA</td>      <td>False</td>      <td></td>      <td></td>      <td></td>      <td>[]</td>      <td>None</td>    </tr>    <tr>      <th>2</th>      <td>STK</td>      <td>172603743</td>      <td>AMD</td>      <td></td>      <td>0.0</td>      <td></td>      <td></td>      <td>SMART</td>      <td>EBS</td>      <td>CHF</td>      <td>AMD</td>      <td>AMD</td>      <td>False</td>      <td></td>      <td></td>      <td></td>      <td>[]</td>      <td>None</td>    </tr>    <tr>      <th>3</th>      <td>STK</td>      <td>298633607</td>      <td>AMD</td>      <td></td>      <td>0.0</td>      <td></td>      <td></td>      <td>SMART</td>      <td>ASX</td>      <td>AUD</td>      <td>AMD</td>      <td>AMD</td>      <td>False</td>      <td></td>      <td></td>      <td></td>      <td>[]</td>      <td>None</td>    </tr>    <tr>      <th>4</th>      <td>STK</td>      <td>4391</td>      <td>AMD</td>      <td></td>      <td>0.0</td>      <td></td>      <td></td>      <td>AMEX</td>      <td>NASDAQ</td>      <td>USD</td>      <td>AMD</td>      <td>NMS</td>      <td>False</td>      <td></td>      <td></td>      <td></td>      <td>[]</td>      <td>None</td>    </tr>  </tbody></table></div><p>查询期货gc的当前所有合约</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">gc = ib.reqContractDetails(Future(<span class="string">'GC'</span>))</span><br><span class="line">gc_contracts_df = util.df([cd.contract <span class="keyword">for</span> cd <span class="keyword">in</span> gc])</span><br><span class="line">gc_contracts_df.head(<span class="number">5</span>)</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>secType</th>      <th>conId</th>      <th>symbol</th>      <th>lastTradeDateOrContractMonth</th>      <th>strike</th>      <th>right</th>      <th>multiplier</th>      <th>exchange</th>      <th>primaryExchange</th>      <th>currency</th>      <th>localSymbol</th>      <th>tradingClass</th>      <th>includeExpired</th>      <th>secIdType</th>      <th>secId</th>      <th>comboLegsDescrip</th>      <th>comboLegs</th>      <th>deltaNeutralContract</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>FUT</td>      <td>158708412</td>      <td>GC</td>      <td>20200626</td>      <td>0.0</td>      <td></td>      <td>100</td>      <td>NYMEX</td>      <td></td>      <td>USD</td>      <td>GCM0</td>      <td>GC</td>      <td>False</td>      <td></td>      <td></td>      <td></td>      <td>[]</td>      <td>None</td>    </tr>    <tr>      <th>1</th>      <td>FUT</td>      <td>178747429</td>      <td>GC</td>      <td>20201229</td>      <td>0.0</td>      <td></td>      <td>100</td>      <td>NYMEX</td>      <td></td>      <td>USD</td>      <td>GCZ0</td>      <td>GC</td>      <td>False</td>      <td></td>      <td></td>      <td></td>      <td>[]</td>      <td>None</td>    </tr>    <tr>      <th>2</th>      <td>FUT</td>      <td>198577650</td>      <td>GC</td>      <td>20210628</td>      <td>0.0</td>      <td></td>      <td>100</td>      <td>NYMEX</td>      <td></td>      <td>USD</td>      <td>GCM1</td>      <td>GC</td>      <td>False</td>      <td></td>      <td></td>      <td></td>      <td>[]</td>      <td>None</td>    </tr>    <tr>      <th>3</th>      <td>FUT</td>      <td>217648791</td>      <td>GC</td>      <td>20211229</td>      <td>0.0</td>      <td></td>      <td>100</td>      <td>NYMEX</td>      <td></td>      <td>USD</td>      <td>GCZ1</td>      <td>GC</td>      <td>False</td>      <td></td>      <td></td>      <td></td>      <td>[]</td>      <td>None</td>    </tr>    <tr>      <th>4</th>      <td>FUT</td>      <td>238666255</td>      <td>GC</td>      <td>20220628</td>      <td>0.0</td>      <td></td>      <td>100</td>      <td>NYMEX</td>      <td></td>      <td>USD</td>      <td>GCM2</td>      <td>GC</td>      <td>False</td>      <td></td>      <td></td>      <td></td>      <td>[]</td>      <td>None</td>    </tr>  </tbody></table></div><p>当前所有NYMEX的GC的期货合约</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gc_contracts_df[gc_contracts_df[<span class="string">"exchange"</span>] == <span class="string">"NYMEX"</span>].sort_values(<span class="string">"lastTradeDateOrContractMonth"</span>)</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>secType</th>      <th>conId</th>      <th>symbol</th>      <th>lastTradeDateOrContractMonth</th>      <th>strike</th>      <th>right</th>      <th>multiplier</th>      <th>exchange</th>      <th>primaryExchange</th>      <th>currency</th>      <th>localSymbol</th>      <th>tradingClass</th>      <th>includeExpired</th>      <th>secIdType</th>      <th>secId</th>      <th>comboLegsDescrip</th>      <th>comboLegs</th>      <th>deltaNeutralContract</th>    </tr>  </thead>  <tbody>    <tr>      <th>18</th>      <td>FUT</td>      <td>397594943</td>      <td>GC</td>      <td>20200327</td>      <td>0.0</td>      <td></td>      <td>100</td>      <td>NYMEX</td>      <td></td>      <td>USD</td>      <td>GCH0</td>      <td>GC</td>      <td>False</td>      <td></td>      <td></td>      <td></td>      <td>[]</td>      <td>None</td>    </tr>    <tr>      <th>8</th>      <td>FUT</td>      <td>319684499</td>      <td>GC</td>      <td>20200428</td>      <td>0.0</td>      <td></td>      <td>100</td>      <td>NYMEX</td>      <td></td>      <td>USD</td>      <td>GCJ0</td>      <td>GC</td>      <td>False</td>      <td></td>      <td></td>      <td></td>      <td>[]</td>      <td>None</td>    </tr>    <tr>      <th>20</th>      <td>FUT</td>      <td>405978966</td>      <td>GC</td>      <td>20200527</td>      <td>0.0</td>      <td></td>      <td>100</td>      <td>NYMEX</td>      <td></td>      <td>USD</td>      <td>GCK0</td>      <td>GC</td>      <td>False</td>      <td></td>      <td></td>      <td></td>      <td>[]</td>      <td>None</td>    </tr>    <tr>      <th>0</th>      <td>FUT</td>      <td>158708412</td>      <td>GC</td>      <td>20200626</td>      <td>0.0</td>      <td></td>      <td>100</td>      <td>NYMEX</td>      <td></td>      <td>USD</td>      <td>GCM0</td>      <td>GC</td>      <td>False</td>      <td></td>      <td></td>      <td></td>      <td>[]</td>      <td>None</td>    </tr>    <tr>      <th>10</th>      <td>FUT</td>      <td>335154396</td>      <td>GC</td>      <td>20200827</td>      <td>0.0</td>      <td></td>      <td>100</td>      <td>NYMEX</td>      <td></td>      <td>USD</td>      <td>GCQ0</td>      <td>GC</td>      <td>False</td>      <td></td>      <td></td>      <td></td>      <td>[]</td>      <td>None</td>    </tr>    <tr>      <th>11</th>      <td>FUT</td>      <td>343699127</td>      <td>GC</td>      <td>20201028</td>      <td>0.0</td>      <td></td>      <td>100</td>      <td>NYMEX</td>      <td></td>      <td>USD</td>      <td>GCV0</td>      <td>GC</td>      <td>False</td>      <td></td>      <td></td>      <td></td>      <td>[]</td>      <td>None</td>    </tr>    <tr>      <th>1</th>      <td>FUT</td>      <td>178747429</td>      <td>GC</td>      <td>20201229</td>      <td>0.0</td>      <td></td>      <td>100</td>      <td>NYMEX</td>      <td></td>      <td>USD</td>      <td>GCZ0</td>      <td>GC</td>      <td>False</td>      <td></td>      <td></td>      <td></td>      <td>[]</td>      <td>None</td>    </tr>    <tr>      <th>13</th>      <td>FUT</td>      <td>358917044</td>      <td>GC</td>      <td>20210224</td>      <td>0.0</td>      <td></td>      <td>100</td>      <td>NYMEX</td>      <td></td>      <td>USD</td>      <td>GCG1</td>      <td>GC</td>      <td>False</td>      <td></td>      <td></td>      <td></td>      <td>[]</td>      <td>None</td>    </tr>    <tr>      <th>14</th>      <td>FUT</td>      <td>368776104</td>      <td>GC</td>      <td>20210428</td>      <td>0.0</td>      <td></td>      <td>100</td>      <td>NYMEX</td>      <td></td>      <td>USD</td>      <td>GCJ1</td>      <td>GC</td>      <td>False</td>      <td></td>      <td></td>      <td></td>      <td>[]</td>      <td>None</td>    </tr>    <tr>      <th>2</th>      <td>FUT</td>      <td>198577650</td>      <td>GC</td>      <td>20210628</td>      <td>0.0</td>      <td></td>      <td>100</td>      <td>NYMEX</td>      <td></td>      <td>USD</td>      <td>GCM1</td>      <td>GC</td>      <td>False</td>      <td></td>      <td></td>      <td></td>      <td>[]</td>      <td>None</td>    </tr>    <tr>      <th>16</th>      <td>FUT</td>      <td>385426871</td>      <td>GC</td>      <td>20210827</td>      <td>0.0</td>      <td></td>      <td>100</td>      <td>NYMEX</td>      <td></td>      <td>USD</td>      <td>GCQ1</td>      <td>GC</td>      <td>False</td>      <td></td>      <td></td>      <td></td>      <td>[]</td>      <td>None</td>    </tr>    <tr>      <th>17</th>      <td>FUT</td>      <td>393223512</td>      <td>GC</td>      <td>20211027</td>      <td>0.0</td>      <td></td>      <td>100</td>      <td>NYMEX</td>      <td></td>      <td>USD</td>      <td>GCV1</td>      <td>GC</td>      <td>False</td>      <td></td>      <td></td>      <td></td>      <td>[]</td>      <td>None</td>    </tr>    <tr>      <th>3</th>      <td>FUT</td>      <td>217648791</td>      <td>GC</td>      <td>20211229</td>      <td>0.0</td>      <td></td>      <td>100</td>      <td>NYMEX</td>      <td></td>      <td>USD</td>      <td>GCZ1</td>      <td>GC</td>      <td>False</td>      <td></td>      <td></td>      <td></td>      <td>[]</td>      <td>None</td>    </tr>    <tr>      <th>4</th>      <td>FUT</td>      <td>238666255</td>      <td>GC</td>      <td>20220628</td>      <td>0.0</td>      <td></td>      <td>100</td>      <td>NYMEX</td>      <td></td>      <td>USD</td>      <td>GCM2</td>      <td>GC</td>      <td>False</td>      <td></td>      <td></td>      <td></td>      <td>[]</td>      <td>None</td>    </tr>    <tr>      <th>5</th>      <td>FUT</td>      <td>260862601</td>      <td>GC</td>      <td>20221228</td>      <td>0.0</td>      <td></td>      <td>100</td>      <td>NYMEX</td>      <td></td>      <td>USD</td>      <td>GCZ2</td>      <td>GC</td>      <td>False</td>      <td></td>      <td></td>      <td></td>      <td>[]</td>      <td>None</td>    </tr>    <tr>      <th>6</th>      <td>FUT</td>      <td>280949060</td>      <td>GC</td>      <td>20230628</td>      <td>0.0</td>      <td></td>      <td>100</td>      <td>NYMEX</td>      <td></td>      <td>USD</td>      <td>GCM3</td>      <td>GC</td>      <td>False</td>      <td></td>      <td></td>      <td></td>      <td>[]</td>      <td>None</td>    </tr>    <tr>      <th>7</th>      <td>FUT</td>      <td>301051213</td>      <td>GC</td>      <td>20231227</td>      <td>0.0</td>      <td></td>      <td>100</td>      <td>NYMEX</td>      <td></td>      <td>USD</td>      <td>GCZ3</td>      <td>GC</td>      <td>False</td>      <td></td>      <td></td>      <td></td>      <td>[]</td>      <td>None</td>    </tr>    <tr>      <th>9</th>      <td>FUT</td>      <td>324078607</td>      <td>GC</td>      <td>20240626</td>      <td>0.0</td>      <td></td>      <td>100</td>      <td>NYMEX</td>      <td></td>      <td>USD</td>      <td>GCM4</td>      <td>GC</td>      <td>False</td>      <td></td>      <td></td>      <td></td>      <td>[]</td>      <td>None</td>    </tr>    <tr>      <th>12</th>      <td>FUT</td>      <td>347896248</td>      <td>GC</td>      <td>20241227</td>      <td>0.0</td>      <td></td>      <td>100</td>      <td>NYMEX</td>      <td></td>      <td>USD</td>      <td>GCZ4</td>      <td>GC</td>      <td>False</td>      <td></td>      <td></td>      <td></td>      <td>[]</td>      <td>None</td>    </tr>    <tr>      <th>15</th>      <td>FUT</td>      <td>372852975</td>      <td>GC</td>      <td>20250626</td>      <td>0.0</td>      <td></td>      <td>100</td>      <td>NYMEX</td>      <td></td>      <td>USD</td>      <td>GCM5</td>      <td>GC</td>      <td>False</td>      <td></td>      <td></td>      <td></td>      <td>[]</td>      <td>None</td>    </tr>    <tr>      <th>19</th>      <td>FUT</td>      <td>397594951</td>      <td>GC</td>      <td>20251229</td>      <td>0.0</td>      <td></td>      <td>100</td>      <td>NYMEX</td>      <td></td>      <td>USD</td>      <td>GCZ5</td>      <td>GC</td>      <td>False</td>      <td></td>      <td></td>      <td></td>      <td>[]</td>      <td>None</td>    </tr>  </tbody></table></div><p>SMART交易所的唯一AMD合约</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">amd = Stock(<span class="string">'AMD'</span>, <span class="string">'SMART'</span>, <span class="string">'USD'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span> len(ib.reqContractDetails(amd)) == <span class="number">1</span></span><br></pre></td></tr></table></figure></div><p>SMART交易所的唯一INTC合约</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">intc = Stock(<span class="string">'INTC'</span>, <span class="string">'SMART'</span>, <span class="string">'USD'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span> len(ib.reqContractDetails(intc)) == <span class="number">1</span></span><br></pre></td></tr></table></figure></div><p>不存在的合约</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">xxx = Stock(<span class="string">'XXX'</span>, <span class="string">'SMART'</span>, <span class="string">'USD'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span> len(ib.reqContractDetails(xxx)) == <span class="number">0</span></span><br></pre></td></tr></table></figure></div><pre><code>2020-03-01 18:01:03,946 ib_insync.wrapper ERROR Error 200, reqId 7: No security definition has been found for the request, contract: Stock(symbol=&#39;XXX&#39;, exchange=&#39;SMART&#39;, currency=&#39;USD&#39;)</code></pre><p>EURUSD forex合约</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">eurusd = Forex(<span class="string">'EURUSD'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span> len(ib.reqContractDetails(eurusd)) == <span class="number">1</span></span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">amd</span><br></pre></td></tr></table></figure></div><pre><code>Stock(symbol=&#39;AMD&#39;, exchange=&#39;SMART&#39;, currency=&#39;USD&#39;)</code></pre><p>填充contrat missing的信息</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ib.qualifyContracts(amd)</span><br><span class="line">amd</span><br></pre></td></tr></table></figure></div><pre><code>Stock(conId=4391, symbol=&#39;AMD&#39;, exchange=&#39;SMART&#39;, primaryExchange=&#39;NASDAQ&#39;, currency=&#39;USD&#39;, localSymbol=&#39;AMD&#39;, tradingClass=&#39;NMS&#39;)</code></pre><p>填充一个contracts的list</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">qualContracts = ib.qualifyContracts(amd, intc, xxx, eurusd)</span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span> intc <span class="keyword">in</span> qualContracts</span><br><span class="line"><span class="keyword">assert</span> xxx <span class="keyword">not</span> <span class="keyword">in</span> qualContracts</span><br></pre></td></tr></table></figure></div><pre><code>2020-03-01 18:54:48,242 ib_insync.wrapper ERROR Error 200, reqId 13: No security definition has been found for the request, contract: Stock(symbol=&#39;XXX&#39;, exchange=&#39;SMART&#39;, currency=&#39;USD&#39;)2020-03-01 18:54:48,244 ib_insync.ib ERROR Unknown contract: Stock(symbol=&#39;XXX&#39;, exchange=&#39;SMART&#39;, currency=&#39;USD&#39;)</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qualContracts</span><br></pre></td></tr></table></figure></div><pre><code>[Stock(conId=4391, symbol=&#39;AMD&#39;, exchange=&#39;SMART&#39;, primaryExchange=&#39;NASDAQ&#39;, currency=&#39;USD&#39;, localSymbol=&#39;AMD&#39;, tradingClass=&#39;NMS&#39;), Stock(conId=270639, symbol=&#39;INTC&#39;, exchange=&#39;SMART&#39;, primaryExchange=&#39;NASDAQ&#39;, currency=&#39;USD&#39;, localSymbol=&#39;INTC&#39;, tradingClass=&#39;NMS&#39;), Forex(&#39;EURUSD&#39;, conId=12087792, exchange=&#39;IDEALPRO&#39;, localSymbol=&#39;EUR.USD&#39;, tradingClass=&#39;EUR.USD&#39;)]</code></pre><p>股票专用查询合约。查询包含intc的所有合约</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">matches = ib.reqMatchingSymbols(<span class="string">'intc'</span>)</span><br><span class="line">matchContracts = [m.contract <span class="keyword">for</span> m <span class="keyword">in</span> matches]</span><br><span class="line"></span><br><span class="line">matches</span><br></pre></td></tr></table></figure></div><pre><code>[ContractDescription(contract=Contract(secType=&#39;STK&#39;, conId=270639, symbol=&#39;INTC&#39;, primaryExchange=&#39;NASDAQ.NMS&#39;, currency=&#39;USD&#39;), derivativeSecTypes=[&#39;CFD&#39;, &#39;OPT&#39;, &#39;IOPT&#39;, &#39;WAR&#39;, &#39;FUT&#39;, &#39;BAG&#39;]), ContractDescription(contract=Contract(secType=&#39;STK&#39;, conId=38709539, symbol=&#39;INTC&#39;, primaryExchange=&#39;MEXI&#39;, currency=&#39;MXN&#39;), derivativeSecTypes=[]), ContractDescription(contract=Contract(secType=&#39;STK&#39;, conId=12178234, symbol=&#39;INTC&#39;, primaryExchange=&#39;EBS&#39;, currency=&#39;CHF&#39;), derivativeSecTypes=[]), ContractDescription(contract=Contract(secType=&#39;STK&#39;, conId=11463493, symbol=&#39;INTCUSD&#39;, primaryExchange=&#39;EBS&#39;, currency=&#39;USD&#39;), derivativeSecTypes=[]), ContractDescription(contract=Contract(secType=&#39;STK&#39;, conId=130861844, symbol=&#39;S&#39;, primaryExchange=&#39;MEXI&#39;, currency=&#39;MXN&#39;), derivativeSecTypes=[]), ContractDescription(contract=Contract(secType=&#39;STK&#39;, conId=130861851, symbol=&#39;2S7&#39;, primaryExchange=&#39;FWB&#39;, currency=&#39;EUR&#39;), derivativeSecTypes=[]), ContractDescription(contract=Contract(secType=&#39;STK&#39;, conId=130651996, symbol=&#39;S&#39;, primaryExchange=&#39;NYSE&#39;, currency=&#39;USD&#39;), derivativeSecTypes=[&#39;CFD&#39;, &#39;OPT&#39;, &#39;FUT&#39;, &#39;BAG&#39;]), ContractDescription(contract=Contract(secType=&#39;STK&#39;, conId=14015710, symbol=&#39;4613&#39;, primaryExchange=&#39;TSEJ&#39;, currency=&#39;JPY&#39;), derivativeSecTypes=[&#39;CFD&#39;]), ContractDescription(contract=Contract(secType=&#39;STK&#39;, conId=257310905, symbol=&#39;002436&#39;, primaryExchange=&#39;SEHKSZSE&#39;, currency=&#39;CNH&#39;), derivativeSecTypes=[]), ContractDescription(contract=Contract(secType=&#39;STK&#39;, conId=257765562, symbol=&#39;603737&#39;, primaryExchange=&#39;SEHKNTL&#39;, currency=&#39;CNH&#39;), derivativeSecTypes=[]), ContractDescription(contract=Contract(secType=&#39;STK&#39;, conId=234809384, symbol=&#39;FPQ1&#39;, primaryExchange=&#39;FWB2&#39;, currency=&#39;EUR&#39;), derivativeSecTypes=[&#39;IOPT&#39;]), ContractDescription(contract=Contract(secType=&#39;STK&#39;, conId=234809383, symbol=&#39;FING.B&#39;, primaryExchange=&#39;SFB&#39;, currency=&#39;SEK&#39;), derivativeSecTypes=[&#39;CFD&#39;, &#39;OPT&#39;, &#39;IOPT&#39;, &#39;BAG&#39;]), ContractDescription(contract=Contract(secType=&#39;STK&#39;, conId=83364054, symbol=&#39;FRP&#39;, primaryExchange=&#39;VALUE&#39;, currency=&#39;USD&#39;), derivativeSecTypes=[]), ContractDescription(contract=Contract(secType=&#39;STK&#39;, conId=169544707, symbol=&#39;ECC&#39;, primaryExchange=&#39;NYSE&#39;, currency=&#39;USD&#39;), derivativeSecTypes=[]), ContractDescription(contract=Contract(secType=&#39;STK&#39;, conId=90691307, symbol=&#39;1151&#39;, primaryExchange=&#39;SEHK&#39;, currency=&#39;HKD&#39;), derivativeSecTypes=[]), ContractDescription(contract=Contract(secType=&#39;STK&#39;, conId=96816938, symbol=&#39;E16&#39;, primaryExchange=&#39;SGX&#39;, currency=&#39;USD&#39;), derivativeSecTypes=[]), ContractDescription(contract=Contract(secType=&#39;STK&#39;, conId=392988575, symbol=&#39;1JO&#39;, primaryExchange=&#39;FWB2&#39;, currency=&#39;EUR&#39;), derivativeSecTypes=[]), ContractDescription(contract=Contract(secType=&#39;STK&#39;, conId=173148149, symbol=&#39;JYNT&#39;, primaryExchange=&#39;NASDAQ.SCM&#39;, currency=&#39;USD&#39;), derivativeSecTypes=[&#39;OPT&#39;, &#39;BAG&#39;]), ContractDescription(contract=Contract(secType=&#39;STK&#39;, conId=131085231, symbol=&#39;4621&#39;, primaryExchange=&#39;TSEJ&#39;, currency=&#39;JPY&#39;), derivativeSecTypes=[])]</code></pre><h1 id="期权链"><a href="#期权链" class="headerlink" title="期权链"></a>期权链</h1><p>spx合约</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">spx = Index(<span class="string">'SPX'</span>, <span class="string">'CBOE'</span>)</span><br><span class="line">ib.qualifyContracts(spx)</span><br></pre></td></tr></table></figure></div><pre><code>[Index(conId=416904, symbol=&#39;SPX&#39;, exchange=&#39;CBOE&#39;, currency=&#39;USD&#39;, localSymbol=&#39;SPX&#39;)]</code></pre><p>这里使用delayed data.</p><p>marketDataType: One of:</p><pre><code>* 1 = Live* 2 = Frozen* 3 = Delayed* 4 = Delayed frozen</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ib.reqMarketDataType(<span class="number">4</span>)</span><br></pre></td></tr></table></figure></div><p>当前tick信息</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[ticker] = ib.reqTickers(spx)</span><br><span class="line">ticker</span><br></pre></td></tr></table></figure></div><pre><code>Ticker(contract=Index(conId=416904, symbol=&#39;SPX&#39;, exchange=&#39;CBOE&#39;, currency=&#39;USD&#39;, localSymbol=&#39;SPX&#39;), time=datetime.datetime(2020, 3, 2, 0, 1, 57, 930587, tzinfo=datetime.timezone.utc), bid=-1.0, bidSize=0, ask=-1.0, askSize=0, last=-1.0, lastSize=0)</code></pre><p>当前市场价格。因为是非交易时间所以是nan</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">spxValue = ticker.marketPrice()</span><br><span class="line">spxValue</span><br></pre></td></tr></table></figure></div><pre><code>nan</code></pre><p>查看option链</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">chains = ib.reqSecDefOptParams(spx.symbol, <span class="string">''</span>, spx.secType, spx.conId)</span><br><span class="line"></span><br><span class="line">util.df(chains)</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>exchange</th>      <th>underlyingConId</th>      <th>tradingClass</th>      <th>multiplier</th>      <th>expirations</th>      <th>strikes</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>SMART</td>      <td>416904</td>      <td>SPX</td>      <td>100</td>      <td>[20200319, 20200416, 20200514, 20200618, 20200...</td>      <td>[100.0, 200.0, 300.0, 400.0, 500.0, 600.0, 650...</td>    </tr>    <tr>      <th>1</th>      <td>CBOE</td>      <td>416904</td>      <td>SPXW</td>      <td>100</td>      <td>[20200302, 20200304, 20200306, 20200309, 20200...</td>      <td>[800.0, 900.0, 1000.0, 1100.0, 1150.0, 1200.0,...</td>    </tr>    <tr>      <th>2</th>      <td>SMART</td>      <td>416904</td>      <td>SPXW</td>      <td>100</td>      <td>[20200302, 20200304, 20200306, 20200309, 20200...</td>      <td>[800.0, 900.0, 1000.0, 1100.0, 1150.0, 1200.0,...</td>    </tr>    <tr>      <th>3</th>      <td>CBOE</td>      <td>416904</td>      <td>SPX</td>      <td>100</td>      <td>[20200319, 20200416, 20200514, 20200618, 20200...</td>      <td>[100.0, 200.0, 300.0, 400.0, 500.0, 600.0, 650...</td>    </tr>  </tbody></table></div><p>选择tradingclass 是spx, exchange是smart的那个合约， 查看这个合约的option chain</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chain = next(c <span class="keyword">for</span> c <span class="keyword">in</span> chains <span class="keyword">if</span> c.tradingClass == <span class="string">'SPX'</span> <span class="keyword">and</span> c.exchange == <span class="string">'SMART'</span>)</span><br><span class="line">chain</span><br></pre></td></tr></table></figure></div><pre><code>OptionChain(exchange=&#39;SMART&#39;, underlyingConId=&#39;416904&#39;, tradingClass=&#39;SPX&#39;, multiplier=&#39;100&#39;, expirations=[&#39;20200319&#39;, &#39;20200416&#39;, &#39;20200514&#39;, &#39;20200618&#39;, &#39;20200716&#39;, &#39;20200820&#39;, &#39;20200917&#39;, &#39;20201015&#39;, &#39;20201119&#39;, &#39;20201217&#39;, &#39;20210114&#39;, &#39;20210318&#39;, &#39;20210617&#39;, &#39;20211216&#39;, &#39;20221215&#39;], strikes=[100.0, 200.0, 300.0, 400.0, 500.0, 600.0, 650.0, 700.0, 750.0, 800.0, 850.0, 900.0, 950.0, 1000.0, 1050.0, 1100.0, 1150.0, 1200.0, 1225.0, 1250.0, 1275.0, 1300.0, 1325.0, 1350.0, 1375.0, 1400.0, 1425.0, 1450.0, 1475.0, 1500.0, 1525.0, 1550.0, 1575.0, 1600.0, 1625.0, 1650.0, 1675.0, 1700.0, 1725.0, 1750.0, 1775.0, 1800.0, 1825.0, 1850.0, 1875.0, 1900.0, 1925.0, 1950.0, 1975.0, 2000.0, 2025.0, 2050.0, 2075.0, 2090.0, 2100.0, 2110.0, 2120.0, 2125.0, 2130.0, 2140.0, 2150.0, 2160.0, 2170.0, 2175.0, 2180.0, 2190.0, 2200.0, 2210.0, 2220.0, 2225.0, 2230.0, 2240.0, 2250.0, 2260.0, 2270.0, 2275.0, 2280.0, 2290.0, 2300.0, 2310.0, 2320.0, 2325.0, 2330.0, 2340.0, 2350.0, 2360.0, 2370.0, 2375.0, 2380.0, 2385.0, 2390.0, 2395.0, 2400.0, 2405.0, 2410.0, 2415.0, 2420.0, 2425.0, 2430.0, 2435.0, 2440.0, 2445.0, 2450.0, 2455.0, 2460.0, 2465.0, 2470.0, 2475.0, 2480.0, 2485.0, 2490.0, 2495.0, 2500.0, 2505.0, 2510.0, 2515.0, 2520.0, 2525.0, 2530.0, 2535.0, 2540.0, 2545.0, 2550.0, 2555.0, 2560.0, 2565.0, 2570.0, 2575.0, 2580.0, 2585.0, 2590.0, 2595.0, 2600.0, 2605.0, 2610.0, 2615.0, 2620.0, 2625.0, 2630.0, 2635.0, 2640.0, 2645.0, 2650.0, 2655.0, 2660.0, 2665.0, 2670.0, 2675.0, 2680.0, 2685.0, 2690.0, 2695.0, 2700.0, 2705.0, 2710.0, 2715.0, 2720.0, 2725.0, 2730.0, 2735.0, 2740.0, 2745.0, 2750.0, 2755.0, 2760.0, 2765.0, 2770.0, 2775.0, 2780.0, 2785.0, 2790.0, 2795.0, 2800.0, 2805.0, 2810.0, 2815.0, 2820.0, 2825.0, 2830.0, 2835.0, 2840.0, 2845.0, 2850.0, 2855.0, 2860.0, 2865.0, 2870.0, 2875.0, 2880.0, 2885.0, 2890.0, 2895.0, 2900.0, 2905.0, 2910.0, 2915.0, 2920.0, 2925.0, 2930.0, 2935.0, 2940.0, 2945.0, 2950.0, 2955.0, 2960.0, 2965.0, 2970.0, 2975.0, 2980.0, 2985.0, 2990.0, 2995.0, 3000.0, 3005.0, 3010.0, 3015.0, 3020.0, 3025.0, 3030.0, 3035.0, 3040.0, 3045.0, 3050.0, 3055.0, 3060.0, 3065.0, 3070.0, 3075.0, 3080.0, 3085.0, 3090.0, 3095.0, 3100.0, 3105.0, 3110.0, 3115.0, 3120.0, 3125.0, 3130.0, 3135.0, 3140.0, 3145.0, 3150.0, 3155.0, 3160.0, 3165.0, 3170.0, 3175.0, 3180.0, 3185.0, 3190.0, 3195.0, 3200.0, 3205.0, 3210.0, 3215.0, 3220.0, 3225.0, 3230.0, 3235.0, 3240.0, 3245.0, 3250.0, 3255.0, 3260.0, 3265.0, 3270.0, 3275.0, 3280.0, 3285.0, 3290.0, 3295.0, 3300.0, 3305.0, 3310.0, 3315.0, 3320.0, 3325.0, 3330.0, 3335.0, 3340.0, 3345.0, 3350.0, 3355.0, 3360.0, 3365.0, 3370.0, 3375.0, 3380.0, 3385.0, 3390.0, 3395.0, 3400.0, 3405.0, 3410.0, 3415.0, 3420.0, 3425.0, 3430.0, 3435.0, 3440.0, 3445.0, 3450.0, 3455.0, 3460.0, 3465.0, 3470.0, 3475.0, 3480.0, 3485.0, 3490.0, 3495.0, 3500.0, 3505.0, 3510.0, 3515.0, 3520.0, 3525.0, 3530.0, 3535.0, 3540.0, 3545.0, 3550.0, 3555.0, 3560.0, 3565.0, 3570.0, 3575.0, 3580.0, 3585.0, 3590.0, 3595.0, 3600.0, 3605.0, 3610.0, 3615.0, 3620.0, 3625.0, 3630.0, 3635.0, 3640.0, 3650.0, 3660.0, 3670.0, 3675.0, 3680.0, 3690.0, 3700.0, 3710.0, 3720.0, 3725.0, 3750.0, 3775.0, 3800.0, 3850.0, 3900.0, 3950.0, 4000.0, 4050.0, 4100.0, 4200.0, 4300.0, 4400.0, 4500.0, 4600.0, 4700.0, 4800.0, 4900.0])</code></pre><h1 id="Bar数据"><a href="#Bar数据" class="headerlink" title="Bar数据"></a>Bar数据</h1><p>GC future合约 2020年4月28日到期</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">contract_319684499 = Contract(conId=<span class="number">319684499</span>)</span><br><span class="line">ib.qualifyContracts(contract_319684499)</span><br></pre></td></tr></table></figure></div><pre><code>[Contract(secType=&#39;FUT&#39;, conId=319684499, symbol=&#39;GC&#39;, lastTradeDateOrContractMonth=&#39;20200428&#39;, multiplier=&#39;100&#39;, exchange=&#39;NYMEX&#39;, currency=&#39;USD&#39;, localSymbol=&#39;GCJ0&#39;, tradingClass=&#39;GC&#39;)]</code></pre><p>合约开始时间</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ib.reqHeadTimeStamp(contract_319684499, whatToShow=<span class="string">'MIDPOINT'</span>, useRTH=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure></div><pre><code>datetime.datetime(2018, 5, 30, 22, 0)</code></pre><p>10天的1分钟数据。一次下太多ib就要搞你，10天的够了。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">bars = ib.reqHistoricalData(</span><br><span class="line">        contract_319684499,</span><br><span class="line">        endDateTime=<span class="string">''</span>,</span><br><span class="line">        durationStr=<span class="string">'10 D'</span>,</span><br><span class="line">        barSizeSetting=<span class="string">'1 min'</span>,</span><br><span class="line">        whatToShow=<span class="string">'TRADES'</span>,</span><br><span class="line">        useRTH=<span class="literal">True</span>,</span><br><span class="line">        formatDate=<span class="number">1</span>)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bars[<span class="number">0</span>]</span><br></pre></td></tr></table></figure></div><pre><code>BarData(date=datetime.datetime(2020, 2, 14, 9, 30), open=1583.3, high=1583.8, low=1583.0, close=1583.4, volume=922, average=1583.43, barCount=347)</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">df = util.df(bars)</span><br><span class="line">display(df.head())</span><br><span class="line">display(df.tail())</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>date</th>      <th>open</th>      <th>high</th>      <th>low</th>      <th>close</th>      <th>volume</th>      <th>average</th>      <th>barCount</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>2020-02-14 09:30:00</td>      <td>1583.3</td>      <td>1583.8</td>      <td>1583.0</td>      <td>1583.4</td>      <td>922</td>      <td>1583.43</td>      <td>347</td>    </tr>    <tr>      <th>1</th>      <td>2020-02-14 09:31:00</td>      <td>1583.5</td>      <td>1583.6</td>      <td>1583.2</td>      <td>1583.4</td>      <td>547</td>      <td>1583.45</td>      <td>240</td>    </tr>    <tr>      <th>2</th>      <td>2020-02-14 09:32:00</td>      <td>1583.4</td>      <td>1583.4</td>      <td>1582.6</td>      <td>1582.7</td>      <td>786</td>      <td>1582.95</td>      <td>299</td>    </tr>    <tr>      <th>3</th>      <td>2020-02-14 09:33:00</td>      <td>1582.8</td>      <td>1582.9</td>      <td>1582.1</td>      <td>1582.6</td>      <td>710</td>      <td>1582.43</td>      <td>293</td>    </tr>    <tr>      <th>4</th>      <td>2020-02-14 09:34:00</td>      <td>1582.7</td>      <td>1582.8</td>      <td>1582.4</td>      <td>1582.6</td>      <td>230</td>      <td>1582.58</td>      <td>127</td>    </tr>  </tbody></table></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>date</th>      <th>open</th>      <th>high</th>      <th>low</th>      <th>close</th>      <th>volume</th>      <th>average</th>      <th>barCount</th>    </tr>  </thead>  <tbody>    <tr>      <th>4495</th>      <td>2020-02-28 16:55:00</td>      <td>1586.6</td>      <td>1589.0</td>      <td>1586.2</td>      <td>1586.8</td>      <td>82</td>      <td>1587.33</td>      <td>50</td>    </tr>    <tr>      <th>4496</th>      <td>2020-02-28 16:56:00</td>      <td>1586.9</td>      <td>1588.6</td>      <td>1586.2</td>      <td>1587.0</td>      <td>42</td>      <td>1587.39</td>      <td>32</td>    </tr>    <tr>      <th>4497</th>      <td>2020-02-28 16:57:00</td>      <td>1587.0</td>      <td>1588.7</td>      <td>1587.0</td>      <td>1587.4</td>      <td>104</td>      <td>1587.74</td>      <td>40</td>    </tr>    <tr>      <th>4498</th>      <td>2020-02-28 16:58:00</td>      <td>1587.7</td>      <td>1588.1</td>      <td>1587.4</td>      <td>1587.7</td>      <td>29</td>      <td>1587.71</td>      <td>20</td>    </tr>    <tr>      <th>4499</th>      <td>2020-02-28 16:59:00</td>      <td>1587.3</td>      <td>1587.5</td>      <td>1586.5</td>      <td>1587.3</td>      <td>43</td>      <td>1587.00</td>      <td>26</td>    </tr>  </tbody></table></div><p>下面的code通过循环把一个合约所有数据都下载下来</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">contract_319684499 = Contract(conId=<span class="number">319684499</span>)</span><br><span class="line">ib.qualifyContracts(contract_319684499)</span><br><span class="line"></span><br><span class="line">dt = <span class="string">''</span></span><br><span class="line">barsList = []</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    bars = ib.reqHistoricalData(</span><br><span class="line">        contract_319684499,</span><br><span class="line">        endDateTime=dt,</span><br><span class="line">        durationStr=<span class="string">'10 D'</span>,</span><br><span class="line">        barSizeSetting=<span class="string">'1 min'</span>,</span><br><span class="line">        whatToShow=<span class="string">'TRADES'</span>,</span><br><span class="line">        useRTH=<span class="literal">True</span>,</span><br><span class="line">        formatDate=<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> bars:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    barsList.append(bars)</span><br><span class="line">    dt = bars[<span class="number">0</span>].date</span><br><span class="line">    print(dt)</span><br><span class="line"></span><br><span class="line">allBars = [b <span class="keyword">for</span> bars <span class="keyword">in</span> reversed(barsList) <span class="keyword">for</span> b <span class="keyword">in</span> bars]</span><br><span class="line">df = util.df(allBars)</span><br></pre></td></tr></table></figure></div><pre><code>2020-02-14 09:30:002020-01-31 09:30:002020-01-16 09:30:002020-01-02 09:30:002019-12-17 09:30:002019-12-03 09:30:002019-11-18 09:30:002019-11-04 09:30:002019-10-21 09:30:002019-10-07 09:30:002019-09-23 09:30:002019-09-09 09:30:002019-08-23 09:30:002019-08-09 09:30:002019-07-26 09:30:002019-07-12 09:30:002019-06-27 09:30:002019-06-13 09:30:002019-05-30 09:30:002019-05-15 09:30:002019-05-01 10:21:002019-04-17 09:30:002019-04-03 10:53:002019-03-21 09:30:002019-03-07 09:30:002019-02-21 09:30:002019-02-06 09:45:002019-01-24 09:55:002019-01-11 09:30:002019-01-02 09:30:002018-12-20 14:43:002018-12-07 10:01:002018-11-29 09:42:002018-11-23 11:44:00Error 162, reqId 39: Historical Market Data Service error message:HMDS query returned no data: GCJ0@NYMEX Trades, contract: Contract(secType=&#39;FUT&#39;, conId=319684499, symbol=&#39;GC&#39;, lastTradeDateOrContractMonth=&#39;20200428&#39;, multiplier=&#39;100&#39;, exchange=&#39;NYMEX&#39;, currency=&#39;USD&#39;, localSymbol=&#39;GCJ0&#39;, tradingClass=&#39;GC&#39;)</code></pre><p>上面的报错原因猜测是因为20181123之前，成交量太低了,选择whattoshow == “TRADE”的话就返回不了数据. 选择whattoshow == “MIDPOINT” 还是可以返回数据， 但是我们不需要了,到这就够了.</p><p>下面的数可以看出，20181123的时候这个合约还不是主力合约，没有人交易。而当前最新的交易量显示它是主力合约</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>date</th>      <th>open</th>      <th>high</th>      <th>low</th>      <th>close</th>      <th>volume</th>      <th>average</th>      <th>barCount</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>2018-11-23 11:44:00</td>      <td>1272.7</td>      <td>1272.7</td>      <td>1272.7</td>      <td>1272.7</td>      <td>11</td>      <td>1272.7</td>      <td>5</td>    </tr>    <tr>      <th>1</th>      <td>2018-11-23 11:45:00</td>      <td>1272.7</td>      <td>1272.7</td>      <td>1272.7</td>      <td>1272.7</td>      <td>0</td>      <td>1272.7</td>      <td>0</td>    </tr>    <tr>      <th>2</th>      <td>2018-11-23 11:46:00</td>      <td>1272.7</td>      <td>1272.7</td>      <td>1272.7</td>      <td>1272.7</td>      <td>0</td>      <td>1272.7</td>      <td>0</td>    </tr>    <tr>      <th>3</th>      <td>2018-11-23 11:47:00</td>      <td>1272.7</td>      <td>1272.7</td>      <td>1272.7</td>      <td>1272.7</td>      <td>0</td>      <td>1272.7</td>      <td>0</td>    </tr>    <tr>      <th>4</th>      <td>2018-11-23 11:48:00</td>      <td>1272.7</td>      <td>1272.7</td>      <td>1272.7</td>      <td>1272.7</td>      <td>0</td>      <td>1272.7</td>      <td>0</td>    </tr>  </tbody></table></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.tail()</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>date</th>      <th>open</th>      <th>high</th>      <th>low</th>      <th>close</th>      <th>volume</th>      <th>average</th>      <th>barCount</th>    </tr>  </thead>  <tbody>    <tr>      <th>119254</th>      <td>2020-02-28 16:55:00</td>      <td>1586.6</td>      <td>1589.0</td>      <td>1586.2</td>      <td>1586.8</td>      <td>82</td>      <td>1587.33</td>      <td>50</td>    </tr>    <tr>      <th>119255</th>      <td>2020-02-28 16:56:00</td>      <td>1586.9</td>      <td>1588.6</td>      <td>1586.2</td>      <td>1587.0</td>      <td>42</td>      <td>1587.39</td>      <td>32</td>    </tr>    <tr>      <th>119256</th>      <td>2020-02-28 16:57:00</td>      <td>1587.0</td>      <td>1588.7</td>      <td>1587.0</td>      <td>1587.4</td>      <td>104</td>      <td>1587.74</td>      <td>40</td>    </tr>    <tr>      <th>119257</th>      <td>2020-02-28 16:58:00</td>      <td>1587.7</td>      <td>1588.1</td>      <td>1587.4</td>      <td>1587.7</td>      <td>29</td>      <td>1587.71</td>      <td>20</td>    </tr>    <tr>      <th>119258</th>      <td>2020-02-28 16:59:00</td>      <td>1587.3</td>      <td>1587.5</td>      <td>1586.5</td>      <td>1587.3</td>      <td>43</td>      <td>1587.00</td>      <td>26</td>    </tr>  </tbody></table></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.describe()</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>open</th>      <th>high</th>      <th>low</th>      <th>close</th>      <th>volume</th>      <th>average</th>      <th>barCount</th>    </tr>  </thead>  <tbody>    <tr>      <th>count</th>      <td>119259.000000</td>      <td>119259.000000</td>      <td>119259.000000</td>      <td>119259.000000</td>      <td>119259.000000</td>      <td>119259.000000</td>      <td>119259.000000</td>    </tr>    <tr>      <th>mean</th>      <td>1452.039395</td>      <td>1452.075496</td>      <td>1452.000574</td>      <td>1452.037914</td>      <td>31.230398</td>      <td>1452.038183</td>      <td>13.755918</td>    </tr>    <tr>      <th>std</th>      <td>95.843262</td>      <td>95.894540</td>      <td>95.788182</td>      <td>95.841548</td>      <td>167.720980</td>      <td>95.841501</td>      <td>71.451877</td>    </tr>    <tr>      <th>min</th>      <td>1272.700000</td>      <td>1272.700000</td>      <td>1272.700000</td>      <td>1272.700000</td>      <td>0.000000</td>      <td>1272.700000</td>      <td>0.000000</td>    </tr>    <tr>      <th>25%</th>      <td>1352.000000</td>      <td>1352.000000</td>      <td>1352.000000</td>      <td>1352.000000</td>      <td>0.000000</td>      <td>1352.000000</td>      <td>0.000000</td>    </tr>    <tr>      <th>50%</th>      <td>1475.600000</td>      <td>1475.600000</td>      <td>1475.600000</td>      <td>1475.600000</td>      <td>0.000000</td>      <td>1475.600000</td>      <td>0.000000</td>    </tr>    <tr>      <th>75%</th>      <td>1524.600000</td>      <td>1524.600000</td>      <td>1524.600000</td>      <td>1524.600000</td>      <td>0.000000</td>      <td>1524.600000</td>      <td>0.000000</td>    </tr>    <tr>      <th>max</th>      <td>1684.800000</td>      <td>1686.600000</td>      <td>1683.800000</td>      <td>1684.300000</td>      <td>9591.000000</td>      <td>1685.380000</td>      <td>3716.000000</td>    </tr>  </tbody></table></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.to_csv(contract_319684499.symbol + <span class="string">'.csv'</span>)</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> finance </category>
          
          <category> vnpy_notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> finance </tag>
            
            <tag> IB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>class_instances_to_dataframe</title>
      <link href="/2020/02/16/python/advanced/class_instances_to_dataframe/"/>
      <url>/2020/02/16/python/advanced/class_instances_to_dataframe/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>介绍一下如何把多个class instances 的值存成一个dataframe.</p><h1 id="defaultdict"><a href="#defaultdict" class="headerlink" title="defaultdict"></a>defaultdict</h1><p>先介绍一个defaultdict.这个是collections的一个骚东西.你建好了以后,每次新建一个Key的时候,value会自动建立一个自定义类型的初始化值.</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> collections</span><br></pre></td></tr></table></figure></div><p>例如 自定义value为list</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">list_dict = collections.defaultdict(list)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">list_dict</span><br></pre></td></tr></table></figure></div><pre><code>defaultdict(list, {})</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">list_dict[<span class="string">"a"</span>].append(<span class="number">1</span>)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">list_dict[<span class="string">"b"</span>].append(<span class="number">2</span>)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">list_dict</span><br></pre></td></tr></table></figure></div><pre><code>defaultdict(list, {&#39;a&#39;: [1], &#39;b&#39;: [2]})</code></pre><p>够骚吧!</p><h1 id="多个class-instance-转换为defaultdict"><a href="#多个class-instance-转换为defaultdict" class="headerlink" title="多个class instance 转换为defaultdict"></a>多个class instance 转换为defaultdict</h1><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">my_class</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,a,b,c)</span>:</span></span><br><span class="line">        self.a = a</span><br><span class="line">        self.b = b</span><br><span class="line">        self.c = c</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">class1 = my_class(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">class2 = my_class(<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">class3 = my_class(<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>)</span><br></pre></td></tr></table></figure></div><p>首先把这些classes全部添加到list</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">class_list = [class1, class2, class3]</span><br></pre></td></tr></table></figure></div><p>创建一个defaultdict</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">class_dict = collections.defaultdict(list)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> class_instance <span class="keyword">in</span> class_list:</span><br><span class="line">    <span class="keyword">for</span> key, value <span class="keyword">in</span> class_instance.__dict__.items():</span><br><span class="line">        class_dict[key].append(value)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">class_dict</span><br></pre></td></tr></table></figure></div><pre><code>defaultdict(list, {&#39;a&#39;: [1, 1, 3], &#39;b&#39;: [2, 2, 4], &#39;c&#39;: [3, 3, 5]})</code></pre><p>创建dataframe</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">frame = pd.DataFrame.from_dict(class_dict)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">frame</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>a</th>      <th>b</th>      <th>c</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>1</td>      <td>2</td>      <td>3</td>    </tr>    <tr>      <th>1</th>      <td>1</td>      <td>2</td>      <td>3</td>    </tr>    <tr>      <th>2</th>      <td>3</td>      <td>4</td>      <td>5</td>    </tr>  </tbody></table></div><p>大功告成!!骚吧!!</p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
          <category> advanced </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> pandas </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTA summary notes</title>
      <link href="/2020/02/10/finance/vnpy_notes/cta_summary/"/>
      <url>/2020/02/10/finance/vnpy_notes/cta_summary/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="hmm,that's ♂ not good" data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容."><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="本宝宝姓啥?(拼音)." /><label>本宝宝姓啥?(拼音).</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="ec53975a2f713ede4abd962ea0f7fd14564e08beb340cc918581d9fca2762257">a416ac94f95e52c73bc08329ea1be644d5f43bf1a7485b20c73e3ce8c38cc3191ab891f2c1ec817306d62f409452f1064461ef6215393080b67d993c1f272a081fca1fafb9030284d46146d12daaae1622bc1d3bdf3181ccff6fc882cfc6b13e815a87723f5588d618d7db4c820a228eec8ad3f49e44a0d6527d0c027667381a513ca064e662b8ad9fbaf94f41d798b93923fcc4963d71c05c2911ddbb1670519c7c0c1ea837f3f6d96369471e896768558d102a3e7fed1054de02030ad14bd36e29c44dd9f6801b4553c0f086d3e5f54fae45ca9ff45876ec1feb7448ad4a530597a6d43836422072cb92ba543128ebcf6c2dc1120a2a5bb3a11568f7379d6dd51555fdcb7aa79b6cb8fed3f73f52825894c3a5bba8890bbe9d077ab64a41082456a2e83f9d958ddf5b97799209e77c52aa17b9ec6bc0b3c430ffdc42a6b23f65b2e400bf83fcfa1b5cca610ae91434044aed2f158deb33d6fc15d6498661ffe39474bb0992c3d1784a349c09926a90a511a904e4a69ba5b9f512f38e82326b511e40410b4dcb4bfb4fbc2acd125468d13f950c782a303d518a866b1ed09defa978cda6d4db7313b83b9324f4787a5029938f753228e64dfad860cd5cd43419fd3f0cd8e89b8eb700600447ba77124360bc0c3f0c49cbed9ea4afeb8495cab267777e61a564230fd6df0cba631eee8b5e15d194ac176ff8a54c731bb7a9251f46cad6a6f27961cb9d645fe8eca0a6e49607d5eeb80d10b5e4609a34f40d6b1866ce8fe57a966cafd57d218bbcc5a0e338ebfcdb80728a1eab94fde99ec0d655a5100010f8633480011ce755c57e74065968b66bbe739551b15b75852d6ea42e1a1c90da64f8992a9041fd06036dfe7e27ede8e8b1c25e5ff946e97bcc482a14a22662f61fc702a6e5dd90302fff06e3b55ea0e5a26de50b6061d8d631c32d679d024e658b1cfa146d7a3a7aead221e9f982c4b44bc074b3ec82189a8ab2b1e2722b4c98d95199e70fbf0a63a9f4d863cf4858aa387729be1c60f27cb6f36fe1c45aacd948c03eeb0461955128d4fe405e689819b3a1f6118612fe4ba34a05ee577c7a9e1ebe81c15c719468d5b7ed13f62fd7e4fa2ff402b1d2ef7d9813209fa89c21be167c0ce18efa7c087aeaf92885d0837b40880d155a753d3ce4808d7e5cd83b7e72d6a4a26448109ddb4b4e95d105a432129db3632ccc3ea78b8deb311e0f3ae4353fa905338405b2be467d60ed0ccb9a014e308e3390081c6a419f986236bcd598d5a1640161f4d4f369c24eb2837310732108a03aeedaf3329312632fc73226f00737b538ac0d82cc518d7386601fcbc7b543ab11f6bef1152bfc5dedf1cf19426fdcc99e1332f5b988455a395bb62474e542e734c8b204fec6dd9918e9a9d5ec5fb1800b13c82f22196d8c25999216edd9195802a765cb07b60f3a3742dfadd73c1b48c6fe4bee773b1db780aaf4e624868114897111e1ce510f5a18450ba1aabd7f9d3a803a15de7e91a41e4dc4eca29ad3b255a5ad2d344493fb06d7f34aba6b3944200cae2f2e8c882e160527db898b087756f2d38454a1120aa6d0e522da48bb7ec481bb509228cb9b78f1271af370f8a395dc1ee2dc051d86d663866bff5fdd1a1f7e45c3d9401b6594037e92c918e1c47fa868382e5c14ddca5c98c29be12e5449e62bc13121a81af1c54a3260cd32b941530b810726f947830bcd893de62a5ff05df8f61749f169f777196419c831e48b2f8f1a9ee18c107924e621d0563414862abafde8353c97fed2d53892c0d73c47420a1ebf61db99e8721b583607d6d746c14074e68513e7c48a1ff077ae121ecb6c5228a72223d06d8d9b30932e13a057596c51bd7adae9dab14acc0366471b769fac1743ffad7d19c857b2151fa13f74030c2e49d412d99e66fc07982e7a41bd79cd08682b4c865709384ff9be14ecd0110d3f4d9b581ba8a7c0e721f941d7190219d2f11056a4e305addd052cb368dfb26179cdc2ff1309275137b0007ecdf993e1567957dafeff9c1c5acbdf6a10a9563e01e643e3f90e27c144a5bcf3c83da61f7153cad0f794e09ebd652bb048591126dd69dc60187d5d6e542d4d93c14b5f8cc7ba367413584422fdf8ebb7d0abd6c1bc2227a41f0de72eae5aecd3839419feb545ac2e96948ed06a9b1fba3a89eb8477c77dfcbb81613b29243b8ccc29e8e3bbd9f1acbf8fdb17c91d3bac352e869b9ffe871870b89eb4e8186faadcf43d1c1b1eedc799d4e7a8b5bbe2d227e67d0a0291d727ee3c1a9834c201c507df4fd04b7111d3fce440cd166876857cff51ff537ab03737fb715e9c157d2785db3b64d7b63e7ed337ead4af0d9e178d7c174c386b274efacb19f2cdc4bfd50e389afc858c1ea280c4f8a7ab3eb74b6ab6a73df7395c7415a8ec7756cc61934db3ac9adfc25447fd40c6b5b3ab9d3767942cdf81e380fbb17fd2a39dd4b39a1156fb1ad0cf6226f5b87b8824caa8fb973e0c06166239720947c6f2d53cdaa2d1f2ee3528f61c08158db49039353642536f5da0692fb61212f5fa585349b588e2b326c3bc2c2afe7daa7736befbbc8e4be99a81dc579fb1fcceeb4d7698579765bb675d13e13e5c31e7252ffd8e03fc1d0a7e73bc1ea81311917f4d2273a257375818b1f1702a2092fa133aa0a124d095f3f684ef26c013db12c2395e43fe19c721db5ed252e6f5d60360814d938271d105878343ccee87b2a4bdb1110e3588dc9c4d79ee1b7dfc0f3ecfe28a11dc522d0fbfa2f05cc513fe403746d61b2546f9d34147ddab6c287fdca45cf06dc6f15e91f42bb2501ca8931ffd8f103b25736ccb3cb9bfac1fc0b951462b0e5ca878f2b1e2177f65d0f9641123a94a37d15b46458cbf095154ac110ad12a9fef78fff3a6d8a00295ef21b0b0a82a276319bc1374a0785f50252bd10ac8a0c9d8da623f07f1084db550fe1222955c09582cb5ced3eb631bfe32908a54742b559fcfca85c2a1b73cef36ba5a484214df554d4065e6a2a658691a824fc295494f2ce6c641ea6767be30c5b00566b42efc39878fec5b463555edd4c2cbe80adcbbd7d770ce923f1408064c2addd9a4e19724d18e5a8673c2c6ee8e98bb0e1dfc25b3359fc41280c6a524c3b9d19425714bd16b9373c2aefbcc7fda21603db7e64afc5c99df419f3532a69e38972df72f5df0018fa9050a8bda977335477010092bd92ee9b22de6fd405ea3336dbabe21ad87a654140d1972d623aa3bfd5baeb3b9ebb244fea7d3004065aba5bf3f8a2e0cabc7da9288b2dbae7735d8ccc909a044ac603ecf8a517a174507b0698f2a32225cea73013d044e844a84fd68</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> finance </category>
          
          <category> vnpy_notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> finance </tag>
            
            <tag> CTA </tag>
            
            <tag> VNPY </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>option trade small summary.md</title>
      <link href="/2020/02/07/random_notes/option_trade_small_summary/"/>
      <url>/2020/02/07/random_notes/option_trade_small_summary/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="期权操作总结"><a href="#期权操作总结" class="headerlink" title="期权操作总结"></a>期权操作总结</h1><p>今日尝试期权入坑. 之前都在模拟盘交易,第一次体验实盘,小量尝试了一下操作,总结:</p><ul><li>模拟盘中没有意识到小市值股票期权的流动性问题. 事实上越是虚值的期权的流动性越是非常的差.应该尽量避免小市值虚值期权的交易.特别是比较虚值的即将到期的短期期权, 简直就是坑爹,谁买谁接盘侠.</li><li>流动性低的期权报价不一定有参考价值. 最高的ask和最低的bid差的远的要死.看价格可以进去看ask和bid的具体值.</li><li>我发现波动率高的大市值股票的期权价格都是虚高的要死. 根本没有机会去做铁鹰或者蝶式这种操作. 而且大市值股票每一单位的期权都巨贵.目前不准备再碰大市值股票的期权了.</li><li><p>我尝试了裸买期权,感觉稍微有点人气的股票,那价格根本就非常离谱. 就算是赌单边的操作,比较合理的操作应该还是要用价差来买,不要裸买期权.</p></li><li><p>赌单边的情况下, 目前没有特别好的方法去找怎么买价格最合理. 用ib的价差模板配出来的组合,最大盈亏比,胜率,盈亏平衡点可以差距特别大…配出来的吧,有时候满意,有时候又不满意. 以后做精细量化得想法子怎么计算出最优选择. </p></li><li>不知道是不是我错觉,总觉得买期权比买股票本身风险小, 最大盈亏比大, 胜率还差不了多少… 可能是错觉吧. 今后再研究.</li></ul>]]></content>
      
      
      <categories>
          
          <category> random_notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> option </tag>
            
            <tag> finance </tag>
            
            <tag> trade </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>visualization widgets libraries</title>
      <link href="/2020/02/01/python/advanced/visualization_widgets_library/"/>
      <url>/2020/02/01/python/advanced/visualization_widgets_library/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>There are multiple different interactive visualization tools for python, which can help visualize data in interactive ways.</p><h1 id="ipywidget"><a href="#ipywidget" class="headerlink" title="ipywidget"></a>ipywidget</h1><p>This library is only able to be used in jupyter notebook.<br>However, it provides tremendous functions.<br>The most advantage of this library is that you can link widgets together.<br>Here is the official documentation:</p><p><a href="https://ipywidgets.readthedocs.io/en/latest/user_guide.html" target="_blank" rel="external nofollow noopener noreferrer">https://ipywidgets.readthedocs.io/en/latest/user_guide.html</a></p><h1 id="streamlit"><a href="#streamlit" class="headerlink" title="streamlit"></a>streamlit</h1><p>This library is super easy to use, and able to be run with a simple cmd command.<br>It is a very strong tool for data visualization or for making a simple app to use.<br>However, it can not link widgets together compared to ipywidget.<br>Here is the official documentation:<br><a href="https://docs.streamlit.io/" target="_blank" rel="external nofollow noopener noreferrer">https://docs.streamlit.io/</a></p><p>github repo:<br><a href="https://github.com/streamlit/streamlit" target="_blank" rel="external nofollow noopener noreferrer">https://github.com/streamlit/streamlit</a></p><p>Good examples:<br><a href="https://github.com/MarcSkovMadsen/awesome-streamlit" target="_blank" rel="external nofollow noopener noreferrer">https://github.com/MarcSkovMadsen/awesome-streamlit</a></p><h1 id="Other-libraris"><a href="#Other-libraris" class="headerlink" title="Other libraris"></a>Other libraris</h1><p>I have not tried other libraries but here is the list that can be tried:</p><ul><li><a href="https://bokeh.pydata.org/en/latest/index.html" target="_blank" rel="external nofollow noopener noreferrer">Bokeh</a> </li><li><a href="https://blog.jupyter.org/and-voil%C3%A0-f6a2c08a4a93" target="_blank" rel="external nofollow noopener noreferrer">Jupyter Voila</a> </li><li><a href="http://panel.pyviz.org/" target="_blank" rel="external nofollow noopener noreferrer">Panel</a> </li><li><a href="https://plot.ly/dash/" target="_blank" rel="external nofollow noopener noreferrer">Plotly Dash</a> </li></ul>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
          <category> advanced </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> ipywidget </tag>
            
            <tag> streamlit </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>matplotlib 基础绘图速查表</title>
      <link href="/2020/01/26/python/kesci_notes/matplotlib%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE%E9%80%9F%E6%9F%A5%E8%A1%A8/"/>
      <url>/2020/01/26/python/kesci_notes/matplotlib%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BE%E9%80%9F%E6%9F%A5%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>This notebook is a summary of python plots. The purpose is to able to quickly get examples for plots in the future usage.<br>The source is coming from mutiple places as shown below.<br>kesic.com is the original source of matplotlib examples:<br><br><a href="https://www.kesci.com/home/project/59ed8d7418ec724555a9b4c0" target="_blank" rel="external nofollow noopener noreferrer">从零开始学Python【1】—matplotlib(条形图)</a><br><br><a href="https://www.kesci.com/home/project/59f6de30c5f3f511952c1211" target="_blank" rel="external nofollow noopener noreferrer">从零开始学Python【2】—matplotlib(饼图)</a><br><br><a href="https://www.kesci.com/home/project/59f6ec6dc5f3f511952c228e" target="_blank" rel="external nofollow noopener noreferrer">从零开始学Python【3】—matplotlib(箱线图) </a><br><br><a href="https://www.kesci.com/home/project/59f6f21bc5f3f511952c2966" target="_blank" rel="external nofollow noopener noreferrer">从零开始学Python【4】—matplotlib(直方图) </a><br><br><a href="https://www.kesci.com/home/project/59f6f45ac5f3f511952c2bf8" target="_blank" rel="external nofollow noopener noreferrer">从零开始学Python【5】—matplotlib(折线图)</a><br><br><a href="https://blog.csdn.net/lsxxx2011/article/details/98764524" target="_blank" rel="external nofollow noopener noreferrer">从零开始学Python【15】—matplotlib(散点图)</a><br><br><a href="https://www.kesci.com/home/project/59f6f88fc5f3f511952c30c9" target="_blank" rel="external nofollow noopener noreferrer">从零开始学Python【7】—matplotlib(雷达图)</a></p><p>jupyter widget example is coming from:<br><br><a href="https://www.youtube.com/watch?v=6SHnmho7zCs" target="_blank" rel="external nofollow noopener noreferrer">Interactive Python with Widgets</a></p><p>The data set in this blog can be found in github page:<br><a href="https://github.com/supersheepbear/notebooks/tree/master/python" target="_blank" rel="external nofollow noopener noreferrer">https://github.com/supersheepbear/notebooks/tree/master/python</a></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> matplotlib.mlab <span class="keyword">as</span> mlab</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> scipy.stats <span class="keyword">as</span> scs</span><br></pre></td></tr></table></figure></div><h1 id="plot-styles"><a href="#plot-styles" class="headerlink" title="plot styles"></a>plot styles</h1><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plt.style.use(<span class="string">'ggplot'</span>)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plt.style.available</span><br></pre></td></tr></table></figure></div><pre><code>[&#39;bmh&#39;, &#39;classic&#39;, &#39;dark_background&#39;, &#39;fast&#39;, &#39;fivethirtyeight&#39;, &#39;ggplot&#39;, &#39;grayscale&#39;, &#39;seaborn-bright&#39;, &#39;seaborn-colorblind&#39;, &#39;seaborn-dark-palette&#39;, &#39;seaborn-dark&#39;, &#39;seaborn-darkgrid&#39;, &#39;seaborn-deep&#39;, &#39;seaborn-muted&#39;, &#39;seaborn-notebook&#39;, &#39;seaborn-paper&#39;, &#39;seaborn-pastel&#39;, &#39;seaborn-poster&#39;, &#39;seaborn-talk&#39;, &#39;seaborn-ticks&#39;, &#39;seaborn-white&#39;, &#39;seaborn-whitegrid&#39;, &#39;seaborn&#39;, &#39;Solarize_Light2&#39;, &#39;tableau-colorblind10&#39;, &#39;_classic_test&#39;]</code></pre><h1 id="bar-plot"><a href="#bar-plot" class="headerlink" title="bar plot"></a>bar plot</h1><h2 id="vertical"><a href="#vertical" class="headerlink" title="vertical"></a>vertical</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入绘图模块</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#  data</span></span><br><span class="line">x = range(<span class="number">4</span>)</span><br><span class="line">GDP = [<span class="number">12406.8</span>,<span class="number">13908.57</span>,<span class="number">9386.87</span>,<span class="number">9143.64</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 中文乱码的处理</span></span><br><span class="line">plt.rcParams[<span class="string">'font.sans-serif'</span>] =[<span class="string">'Microsoft YaHei'</span>]</span><br><span class="line">plt.rcParams[<span class="string">'axes.unicode_minus'</span>] = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># bar plot</span></span><br><span class="line">plt.bar(x, GDP, align = <span class="string">'center'</span>,color=<span class="string">'steelblue'</span>, alpha = <span class="number">0.8</span>, width=<span class="number">0.6</span>)</span><br><span class="line"><span class="comment"># ylabel title</span></span><br><span class="line">plt.ylabel(<span class="string">'GDP'</span>)</span><br><span class="line"><span class="comment"># title</span></span><br><span class="line">plt.title(<span class="string">'四个直辖市GDP大比拼'</span>)</span><br><span class="line"><span class="comment"># xticks and their label</span></span><br><span class="line">plt.xticks(range(<span class="number">4</span>),[<span class="string">'北京市'</span>,<span class="string">'上海市'</span>,<span class="string">'天津市'</span>,<span class="string">'重庆市'</span>])</span><br><span class="line"><span class="comment"># ylim</span></span><br><span class="line">plt.ylim([<span class="number">5000</span>,<span class="number">15000</span>])</span><br><span class="line"><span class="comment"># yticks</span></span><br><span class="line">plt.yticks(np.linspace(<span class="number">5000</span>,<span class="number">15000</span>,<span class="number">5</span>))</span><br><span class="line"><span class="comment"># grid</span></span><br><span class="line">plt.grid(alpha=<span class="number">0.5</span>, linestyle=<span class="string">"--"</span>, axis=<span class="string">"y"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 为每个条形图添加数值标签</span></span><br><span class="line"><span class="keyword">for</span> x,y <span class="keyword">in</span> zip(x, GDP):</span><br><span class="line">    plt.text(x,y+<span class="number">100</span>,<span class="string">'%s'</span> %round(y,<span class="number">1</span>),ha=<span class="string">'center'</span>)</span><br><span class="line">    </span><br><span class="line"><span class="comment"># 显示图形</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/output_8_0.png" data-fancybox="group" data-caption="png" class="fancybox"><img alt="png" data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/output_8_0.png" class="lazyload" title="png"></a></p><h2 id="horizontal"><a href="#horizontal" class="headerlink" title="horizontal"></a>horizontal</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># data</span></span><br><span class="line">x = range(<span class="number">5</span>)</span><br><span class="line">price = [<span class="number">39.5</span>,<span class="number">39.9</span>,<span class="number">45.4</span>,<span class="number">38.9</span>,<span class="number">33.34</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 中文乱码的处理</span></span><br><span class="line">plt.rcParams[<span class="string">'font.sans-serif'</span>] =[<span class="string">'Microsoft YaHei'</span>]</span><br><span class="line">plt.rcParams[<span class="string">'axes.unicode_minus'</span>] = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># draw</span></span><br><span class="line">plt.barh(x, price, align = <span class="string">'center'</span>,color=<span class="string">'steelblue'</span>, alpha = <span class="number">0.8</span>, height=<span class="number">0.5</span>)</span><br><span class="line"><span class="comment"># xlabel</span></span><br><span class="line">plt.xlabel(<span class="string">'价格'</span>)</span><br><span class="line"><span class="comment"># title</span></span><br><span class="line">plt.title(<span class="string">'不同平台书的最低价比较'</span>)</span><br><span class="line"><span class="comment"># y ticks and label</span></span><br><span class="line">plt.yticks(range(<span class="number">5</span>),[<span class="string">'亚马逊'</span>,<span class="string">'当当网'</span>,<span class="string">'中国图书网'</span>,<span class="string">'京东'</span>,<span class="string">'天猫'</span>])</span><br><span class="line"><span class="comment"># x limit</span></span><br><span class="line">plt.xlim([<span class="number">32</span>,<span class="number">47</span>])</span><br><span class="line"><span class="comment"># grid</span></span><br><span class="line">plt.grid(alpha=<span class="number">0.5</span>, linestyle=<span class="string">"--"</span>, axis=<span class="string">"x"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#  label for bars</span></span><br><span class="line"><span class="keyword">for</span> x,y <span class="keyword">in</span> zip(x, price):</span><br><span class="line">    plt.text(y+<span class="number">0.1</span>,x,<span class="string">'%s'</span> %y,va=<span class="string">'center'</span>)</span><br><span class="line"><span class="comment"># show pic    </span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/output_10_0.png" data-fancybox="group" data-caption="png" class="fancybox"><img alt="png" data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/output_10_0.png" class="lazyload" title="png"></a></p><h2 id="compare-plot"><a href="#compare-plot" class="headerlink" title="compare plot"></a>compare plot</h2><h3 id="lateral-stack"><a href="#lateral-stack" class="headerlink" title="lateral stack"></a>lateral stack</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入绘图模块</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="comment"># data</span></span><br><span class="line">bar_width = <span class="number">0.35</span></span><br><span class="line">x1 = np.arange(<span class="number">5</span>)</span><br><span class="line">Y2016 = [<span class="number">15600</span>,<span class="number">12700</span>,<span class="number">11300</span>,<span class="number">4270</span>,<span class="number">3620</span>]</span><br><span class="line">x2 = np.arange(<span class="number">5</span>)+bar_width</span><br><span class="line">Y2017 = [<span class="number">17400</span>,<span class="number">14800</span>,<span class="number">12000</span>,<span class="number">5200</span>,<span class="number">4020</span>]</span><br><span class="line">labels = [<span class="string">'北京'</span>,<span class="string">'上海'</span>,<span class="string">'香港'</span>,<span class="string">'深圳'</span>,<span class="string">'广州'</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 中文乱码的处理</span></span><br><span class="line">plt.rcParams[<span class="string">'font.sans-serif'</span>] =[<span class="string">'Microsoft YaHei'</span>]</span><br><span class="line">plt.rcParams[<span class="string">'axes.unicode_minus'</span>] = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># plot</span></span><br><span class="line">plt.bar(x1, Y2016, label = <span class="string">'2016'</span>, color = <span class="string">'steelblue'</span>, alpha = <span class="number">0.8</span>, width = bar_width)</span><br><span class="line">plt.bar(x2, Y2017, label = <span class="string">'2017'</span>, color = <span class="string">'indianred'</span>, alpha = <span class="number">0.8</span>, width = bar_width)</span><br><span class="line"><span class="comment"># labels</span></span><br><span class="line">plt.xlabel(<span class="string">'Top5城市'</span>)</span><br><span class="line">plt.ylabel(<span class="string">'家庭数量'</span>)</span><br><span class="line"><span class="comment"># title</span></span><br><span class="line">plt.title(<span class="string">'亿万财富家庭数Top5城市分布'</span>)</span><br><span class="line"><span class="comment"># xticks</span></span><br><span class="line">plt.xticks(np.arange(<span class="number">5</span>)+bar_width,labels)</span><br><span class="line"><span class="comment"># ylimits</span></span><br><span class="line">plt.ylim([<span class="number">2500</span>, <span class="number">19000</span>])</span><br><span class="line"><span class="comment"># grid</span></span><br><span class="line">plt.grid(alpha=<span class="number">0.5</span>, linestyle=<span class="string">"--"</span>, axis=<span class="string">"y"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># data labels</span></span><br><span class="line"><span class="keyword">for</span> x2016,y2016 <span class="keyword">in</span> zip(x1, Y2016):</span><br><span class="line">    plt.text(x2016-bar_width/<span class="number">2</span>, y2016+<span class="number">100</span>, <span class="string">'%s'</span> %y2016)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> x2017,y2017 <span class="keyword">in</span> zip(x2, Y2017):</span><br><span class="line">    plt.text(x2017-bar_width/<span class="number">2</span>, y2017+<span class="number">100</span>, <span class="string">'%s'</span> %y2017)</span><br><span class="line"><span class="comment"># legend</span></span><br><span class="line">plt.legend(loc=<span class="string">'best'</span>)</span><br><span class="line"><span class="comment"># show plot</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/output_13_0.png" data-fancybox="group" data-caption="png" class="fancybox"><img alt="png" data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/output_13_0.png" class="lazyload" title="png"></a></p><h3 id="vertical-stack"><a href="#vertical-stack" class="headerlink" title="vertical stack"></a>vertical stack</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入绘图模块</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="comment"># data</span></span><br><span class="line">bar_width = <span class="number">0.35</span></span><br><span class="line">x = np.arange(<span class="number">5</span>)</span><br><span class="line">Y2016 = [<span class="number">15600</span>,<span class="number">12700</span>,<span class="number">11300</span>,<span class="number">4270</span>,<span class="number">3620</span>]</span><br><span class="line">Y2017 = [<span class="number">17400</span>,<span class="number">14800</span>,<span class="number">12000</span>,<span class="number">5200</span>,<span class="number">4020</span>]</span><br><span class="line">labels = [<span class="string">'北京'</span>,<span class="string">'上海'</span>,<span class="string">'香港'</span>,<span class="string">'深圳'</span>,<span class="string">'广州'</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 中文乱码的处理</span></span><br><span class="line">plt.rcParams[<span class="string">'font.sans-serif'</span>] =[<span class="string">'Microsoft YaHei'</span>]</span><br><span class="line">plt.rcParams[<span class="string">'axes.unicode_minus'</span>] = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># plot</span></span><br><span class="line">plt.bar(x, Y2017, label = <span class="string">'2017'</span>, color = <span class="string">'red'</span>, alpha = <span class="number">0.8</span>, width = bar_width, bottom=y2016)</span><br><span class="line">plt.bar(x, Y2016, label = <span class="string">'2016'</span>, color = <span class="string">'blue'</span>, alpha = <span class="number">0.8</span>, width = bar_width)</span><br><span class="line"><span class="comment"># labels</span></span><br><span class="line">plt.xlabel(<span class="string">'Top5城市'</span>)</span><br><span class="line">plt.ylabel(<span class="string">'家庭数量'</span>)</span><br><span class="line"><span class="comment"># title</span></span><br><span class="line">plt.title(<span class="string">'亿万财富家庭数Top5城市分布'</span>)</span><br><span class="line"><span class="comment"># xticks</span></span><br><span class="line">plt.xticks(np.arange(<span class="number">5</span>),labels)</span><br><span class="line"></span><br><span class="line"><span class="comment"># grid</span></span><br><span class="line">plt.grid(alpha=<span class="number">0.5</span>, linestyle=<span class="string">"--"</span>, axis=<span class="string">"y"</span>)</span><br><span class="line"><span class="comment"># ylimits</span></span><br><span class="line">plt.ylim([<span class="number">0</span>, <span class="number">22500</span>])</span><br><span class="line"><span class="comment"># legend</span></span><br><span class="line">plt.legend(loc=<span class="string">'best'</span>)</span><br><span class="line"><span class="comment"># show plot</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/output_15_0.png" data-fancybox="group" data-caption="png" class="fancybox"><img alt="png" data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/output_15_0.png" class="lazyload" title="png"></a></p><h3 id="top-down-stack"><a href="#top-down-stack" class="headerlink" title="top down stack"></a>top down stack</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入绘图模块</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="comment"># data</span></span><br><span class="line">bar_width = <span class="number">0.35</span></span><br><span class="line">x = np.arange(<span class="number">5</span>)</span><br><span class="line">Y2016 = [<span class="number">15600</span>,<span class="number">12700</span>,<span class="number">11300</span>,<span class="number">4270</span>,<span class="number">3620</span>]</span><br><span class="line">Y2017 = <span class="number">-1</span>*np.array([<span class="number">17400</span>,<span class="number">14800</span>,<span class="number">12000</span>,<span class="number">5200</span>,<span class="number">4020</span>])</span><br><span class="line">labels = [<span class="string">'北京'</span>,<span class="string">'上海'</span>,<span class="string">'香港'</span>,<span class="string">'深圳'</span>,<span class="string">'广州'</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 中文乱码的处理</span></span><br><span class="line">plt.rcParams[<span class="string">'font.sans-serif'</span>] =[<span class="string">'Microsoft YaHei'</span>]</span><br><span class="line">plt.rcParams[<span class="string">'axes.unicode_minus'</span>] = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># plot</span></span><br><span class="line">plt.bar(x, Y2017, label = <span class="string">'2017'</span>, color = <span class="string">'red'</span>, alpha = <span class="number">0.8</span>, width = bar_width)</span><br><span class="line">plt.bar(x, Y2016, label = <span class="string">'2016'</span>, color = <span class="string">'blue'</span>, alpha = <span class="number">0.8</span>, width = bar_width)</span><br><span class="line"><span class="comment"># labels</span></span><br><span class="line">plt.xlabel(<span class="string">'Top5城市'</span>)</span><br><span class="line">plt.ylabel(<span class="string">'家庭数量'</span>)</span><br><span class="line"><span class="comment"># title</span></span><br><span class="line">plt.title(<span class="string">'亿万财富家庭数Top5城市分布'</span>)</span><br><span class="line"><span class="comment"># xticks</span></span><br><span class="line">plt.xticks(np.arange(<span class="number">5</span>),labels)</span><br><span class="line"></span><br><span class="line"><span class="comment"># grid</span></span><br><span class="line">plt.grid(alpha=<span class="number">0.5</span>, linestyle=<span class="string">"--"</span>, axis=<span class="string">"y"</span>)</span><br><span class="line"><span class="comment"># ylimits</span></span><br><span class="line">plt.ylim([<span class="number">-20000</span>, <span class="number">20000</span>])</span><br><span class="line"><span class="comment"># legend</span></span><br><span class="line">plt.legend(loc=<span class="string">'best'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># data labels</span></span><br><span class="line"><span class="keyword">for</span> x2016,y2016 <span class="keyword">in</span> zip(x, Y2016):</span><br><span class="line">    plt.text(x2016-bar_width/<span class="number">2</span>, y2016+<span class="number">100</span>, <span class="string">'%s'</span> %y2016)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> x2017,y2017 <span class="keyword">in</span> zip(x, Y2017):</span><br><span class="line">    plt.text(x2017-bar_width/<span class="number">2</span>, y2017<span class="number">-1500</span>, <span class="string">'%s'</span> %-y2017)</span><br><span class="line"><span class="comment"># show plot</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/output_17_0.png" data-fancybox="group" data-caption="png" class="fancybox"><img alt="png" data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/output_17_0.png" class="lazyload" title="png"></a></p><h1 id="pie-plot"><a href="#pie-plot" class="headerlink" title="pie plot"></a>pie plot</h1><p>pie函数参数解读<br>plt.pie(x, explode=None, labels=None, colors=None, autopct=None, pctdistance=0.6, shadow=False, labeldistance=1.1, startangle=None, radius=None, counterclock=True, wedgeprops=None, textprops=None, center=(0, 0), frame=False)</p><p>x：指定绘图的数据；</p><p>explode：指定饼图某些部分的突出显示，即呈现爆炸式；</p><p>labels：为饼图添加标签说明，类似于图例说明；</p><p>colors：指定饼图的填充色；</p><p>autopct：自动添加百分比显示，可以采用格式化的方法显示；</p><p>pctdistance：设置百分比标签与圆心的距离；</p><p>shadow：是否添加饼图的阴影效果；</p><p>labeldistance：设置各扇形标签（图例）与圆心的距离；</p><p>startangle：设置饼图的初始摆放角度；</p><p>radius：设置饼图的半径大小；</p><p>counterclock：是否让饼图按逆时针顺序呈现；</p><p>wedgeprops：设置饼图内外边界的属性，如边界线的粗细、颜色等；</p><p>textprops：设置饼图中文本的属性，如字体大小、颜色等；</p><p>center：指定饼图的中心点位置，默认为原点</p><p>frame：是否要显示饼图背后的图框，如果设置为True的话，需要同时控制图框x轴、y轴的范围和饼图的中心位置；</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入第三方模块</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="comment"># style</span></span><br><span class="line">plt.style.use(<span class="string">'ggplot'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># data</span></span><br><span class="line">edu = [<span class="number">0.2515</span>,<span class="number">0.3724</span>,<span class="number">0.3336</span>,<span class="number">0.0368</span>,<span class="number">0.0057</span>]</span><br><span class="line">labels = [<span class="string">'中专'</span>,<span class="string">'大专'</span>,<span class="string">'本科'</span>,<span class="string">'硕士'</span>,<span class="string">'其他'</span>]</span><br><span class="line"></span><br><span class="line">explode = [<span class="number">0</span>,<span class="number">0.1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>]</span><br><span class="line">colors=[<span class="string">'#9999ff'</span>,<span class="string">'#ff9999'</span>,<span class="string">'#7777aa'</span>,<span class="string">'#2442aa'</span>,<span class="string">'#dd5555'</span>] <span class="comment"># 自定义颜色</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 中文乱码和坐标轴负号的处理</span></span><br><span class="line">plt.rcParams[<span class="string">'font.sans-serif'</span>] = [<span class="string">'Microsoft YaHei'</span>]</span><br><span class="line">plt.rcParams[<span class="string">'axes.unicode_minus'</span>] = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># standarlize plot to be a circle instead of oval</span></span><br><span class="line">plt.axes(aspect=<span class="string">'equal'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># limits</span></span><br><span class="line">plt.xlim(<span class="number">0</span>,<span class="number">4</span>)</span><br><span class="line">plt.ylim(<span class="number">0</span>,<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制饼图</span></span><br><span class="line">plt.pie(x = edu, <span class="comment"># data</span></span><br><span class="line">        explode=explode, <span class="comment"># explot</span></span><br><span class="line">        labels=labels, <span class="comment"># label</span></span><br><span class="line">        colors=colors, <span class="comment"># colors</span></span><br><span class="line">        autopct=<span class="string">'%.1f%%'</span>, <span class="comment"># percent style</span></span><br><span class="line">        pctdistance=<span class="number">0.8</span>,  <span class="comment"># percent dist to center</span></span><br><span class="line">        labeldistance = <span class="number">1.15</span>, <span class="comment"># label distance to center</span></span><br><span class="line">        startangle = <span class="number">180</span>, <span class="comment"># start angle</span></span><br><span class="line">        radius = <span class="number">1.5</span>, <span class="comment"># radius</span></span><br><span class="line">        counterclock = <span class="literal">False</span>, <span class="comment"># couter clock or not</span></span><br><span class="line">        wedgeprops = &#123;<span class="string">'linewidth'</span>: <span class="number">1.5</span>, <span class="string">'edgecolor'</span>:<span class="string">'green'</span>&#125;,<span class="comment"># outer edge style</span></span><br><span class="line">        textprops = &#123;<span class="string">'fontsize'</span>:<span class="number">12</span>, <span class="string">'color'</span>:<span class="string">'k'</span>&#125;, <span class="comment"># text style</span></span><br><span class="line">        center = (<span class="number">1.8</span>,<span class="number">1.8</span>), <span class="comment"># origin point</span></span><br><span class="line">        frame = <span class="number">1</span>)<span class="comment"># show frame or not</span></span><br><span class="line"><span class="comment"># 删除x轴和y轴的刻度</span></span><br><span class="line">plt.xticks(())</span><br><span class="line">plt.yticks(())</span><br><span class="line"><span class="comment"># 添加图标题</span></span><br><span class="line">plt.title(<span class="string">'芝麻信用失信用户教育水平分布'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示图形</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/output_20_0.png" data-fancybox="group" data-caption="png" class="fancybox"><img alt="png" data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/output_20_0.png" class="lazyload" title="png"></a></p><h1 id="histogram"><a href="#histogram" class="headerlink" title="histogram"></a>histogram</h1><p>hist函数的参数解读<br>   绘图之前，我们先来讲解一下matplotlib包中hist函数的参数含义及使用方法：<br>plt.hist(x, bins=10, range=None, normed=False, weights=None, cumulative=False, bottom=None, histtype=’bar’, align=’mid’, orientation=’vertical’, rwidth=None, log=False, color=None, label=None, stacked=False)</p><p>x：指定要绘制直方图的数据；</p><p>bins：指定直方图条形的个数；</p><p>range：指定直方图数据的上下界，默认包含绘图数据的最大值和最小值；</p><p>normed：是否将直方图的频数转换成频率；</p><p>weights：该参数可为每一个数据点设置权重；</p><p>cumulative：是否需要计算累计频数或频率；</p><p>bottom：可以为直方图的每个条形添加基准线，默认为0；</p><p>histtype：指定直方图的类型，默认为bar，除此还有’barstacked’, ‘step’, ‘stepfilled’；</p><p>align：设置条形边界值的对其方式，默认为mid，除此还有’left’和’right’；</p><p>orientation：设置直方图的摆放方向，默认为垂直方向；</p><p>rwidth：设置直方图条形宽度的百分比；</p><p>log：是否需要对绘图数据进行log变换；</p><p>color：设置直方图的填充色；</p><p>label：设置直方图的标签，可通过legend展示其图例；</p><p>stacked：当有多个数据时，是否需要将直方图呈堆叠摆放，默认水平摆放；</p><h2 id="data-cleaning"><a href="#data-cleaning" class="headerlink" title="data cleaning"></a>data cleaning</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">titanic = pd.read_csv(<span class="string">'train.csv'</span>)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">titanic.head()</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>PassengerId</th>      <th>Survived</th>      <th>Pclass</th>      <th>Name</th>      <th>Sex</th>      <th>Age</th>      <th>SibSp</th>      <th>Parch</th>      <th>Ticket</th>      <th>Fare</th>      <th>Cabin</th>      <th>Embarked</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>1</td>      <td>0</td>      <td>3</td>      <td>Braund, Mr. Owen Harris</td>      <td>male</td>      <td>22.0</td>      <td>1</td>      <td>0</td>      <td>A/5 21171</td>      <td>7.2500</td>      <td>NaN</td>      <td>S</td>    </tr>    <tr>      <th>1</th>      <td>2</td>      <td>1</td>      <td>1</td>      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>      <td>female</td>      <td>38.0</td>      <td>1</td>      <td>0</td>      <td>PC 17599</td>      <td>71.2833</td>      <td>C85</td>      <td>C</td>    </tr>    <tr>      <th>2</th>      <td>3</td>      <td>1</td>      <td>3</td>      <td>Heikkinen, Miss. Laina</td>      <td>female</td>      <td>26.0</td>      <td>0</td>      <td>0</td>      <td>STON/O2. 3101282</td>      <td>7.9250</td>      <td>NaN</td>      <td>S</td>    </tr>    <tr>      <th>3</th>      <td>4</td>      <td>1</td>      <td>1</td>      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>      <td>female</td>      <td>35.0</td>      <td>1</td>      <td>0</td>      <td>113803</td>      <td>53.1000</td>      <td>C123</td>      <td>S</td>    </tr>    <tr>      <th>4</th>      <td>5</td>      <td>0</td>      <td>3</td>      <td>Allen, Mr. William Henry</td>      <td>male</td>      <td>35.0</td>      <td>0</td>      <td>0</td>      <td>373450</td>      <td>8.0500</td>      <td>NaN</td>      <td>S</td>    </tr>  </tbody></table></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">titanic.info()</span><br></pre></td></tr></table></figure></div><pre><code>&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;RangeIndex: 891 entries, 0 to 890Data columns (total 12 columns):PassengerId    891 non-null int64Survived       891 non-null int64Pclass         891 non-null int64Name           891 non-null objectSex            891 non-null objectAge            714 non-null float64SibSp          891 non-null int64Parch          891 non-null int64Ticket         891 non-null objectFare           891 non-null float64Cabin          204 non-null objectEmbarked       889 non-null objectdtypes: float64(2), int64(5), object(5)memory usage: 83.7+ KB</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">titanic.describe()</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>PassengerId</th>      <th>Survived</th>      <th>Pclass</th>      <th>Age</th>      <th>SibSp</th>      <th>Parch</th>      <th>Fare</th>    </tr>  </thead>  <tbody>    <tr>      <th>count</th>      <td>891.000000</td>      <td>891.000000</td>      <td>891.000000</td>      <td>714.000000</td>      <td>891.000000</td>      <td>891.000000</td>      <td>891.000000</td>    </tr>    <tr>      <th>mean</th>      <td>446.000000</td>      <td>0.383838</td>      <td>2.308642</td>      <td>29.699118</td>      <td>0.523008</td>      <td>0.381594</td>      <td>32.204208</td>    </tr>    <tr>      <th>std</th>      <td>257.353842</td>      <td>0.486592</td>      <td>0.836071</td>      <td>14.526497</td>      <td>1.102743</td>      <td>0.806057</td>      <td>49.693429</td>    </tr>    <tr>      <th>min</th>      <td>1.000000</td>      <td>0.000000</td>      <td>1.000000</td>      <td>0.420000</td>      <td>0.000000</td>      <td>0.000000</td>      <td>0.000000</td>    </tr>    <tr>      <th>25%</th>      <td>223.500000</td>      <td>0.000000</td>      <td>2.000000</td>      <td>20.125000</td>      <td>0.000000</td>      <td>0.000000</td>      <td>7.910400</td>    </tr>    <tr>      <th>50%</th>      <td>446.000000</td>      <td>0.000000</td>      <td>3.000000</td>      <td>28.000000</td>      <td>0.000000</td>      <td>0.000000</td>      <td>14.454200</td>    </tr>    <tr>      <th>75%</th>      <td>668.500000</td>      <td>1.000000</td>      <td>3.000000</td>      <td>38.000000</td>      <td>1.000000</td>      <td>0.000000</td>      <td>31.000000</td>    </tr>    <tr>      <th>max</th>      <td>891.000000</td>      <td>1.000000</td>      <td>3.000000</td>      <td>80.000000</td>      <td>8.000000</td>      <td>6.000000</td>      <td>512.329200</td>    </tr>  </tbody></table></div><p>We want to plot age data, therefore check null values</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">titanic.isnull().any()</span><br></pre></td></tr></table></figure></div><pre><code>PassengerId    FalseSurvived       FalsePclass         FalseName           FalseSex            FalseAge            FalseSibSp          FalseParch          FalseTicket         FalseFare           FalseCabin           TrueEmbarked        Truedtype: bool</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">titanic.dropna(subset=[<span class="string">'Age'</span>], inplace=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">titanic.isnull().any()</span><br></pre></td></tr></table></figure></div><pre><code>PassengerId    FalseSurvived       FalsePclass         FalseName           FalseSex            FalseAge            FalseSibSp          FalseParch          FalseTicket         FalseFare           FalseCabin           TrueEmbarked        Truedtype: bool</code></pre><h2 id="typical-plot"><a href="#typical-plot" class="headerlink" title="typical plot"></a>typical plot</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入第三方包</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> matplotlib.mlab <span class="keyword">as</span> mlab</span><br><span class="line"></span><br><span class="line"><span class="comment"># 中文和负号的正常显示</span></span><br><span class="line">plt.rcParams[<span class="string">'font.sans-serif'</span>] = [<span class="string">'Microsoft YaHei'</span>]</span><br><span class="line">plt.rcParams[<span class="string">'axes.unicode_minus'</span>] = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># style</span></span><br><span class="line">plt.style.use(<span class="string">'ggplot'</span>)</span><br><span class="line"><span class="comment"># plot</span></span><br><span class="line">arr=plt.hist(titanic.Age, <span class="comment"># data</span></span><br><span class="line">            bins = <span class="number">20</span>, <span class="comment"># bins</span></span><br><span class="line">            color = <span class="string">'steelblue'</span>, <span class="comment"># color</span></span><br><span class="line">            edgecolor = <span class="string">'k'</span>, <span class="comment"># edge color</span></span><br><span class="line">            label = <span class="string">'直方图'</span> )<span class="comment"># label</span></span><br><span class="line"><span class="comment"># removes ticks on top and right</span></span><br><span class="line">plt.tick_params(top=<span class="string">'off'</span>, right=<span class="string">'off'</span>)</span><br><span class="line"><span class="comment"># title</span></span><br><span class="line">plt.title(<span class="string">"age distribution"</span>)</span><br><span class="line"><span class="comment"># label</span></span><br><span class="line">plt.xlabel(<span class="string">"ages"</span>)</span><br><span class="line">plt.ylabel(<span class="string">"number"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># legend</span></span><br><span class="line">plt.legend()</span><br><span class="line"></span><br><span class="line"><span class="comment"># show numbers on top</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">20</span>):</span><br><span class="line">    plt.text(arr[<span class="number">1</span>][i],arr[<span class="number">0</span>][i],str(arr[<span class="number">0</span>][i].astype(int)))</span><br><span class="line"></span><br><span class="line"><span class="comment"># show plot</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/output_33_0.png" data-fancybox="group" data-caption="png" class="fancybox"><img alt="png" data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/output_33_0.png" class="lazyload" title="png"></a></p><h2 id="accumulative-plot"><a href="#accumulative-plot" class="headerlink" title="accumulative plot"></a>accumulative plot</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># accumulative plot</span></span><br><span class="line">bins = np.arange(titanic.Age.min(),titanic.Age.max(),<span class="number">5</span>)</span><br><span class="line">arr = plt.hist(titanic.Age, <span class="comment"># data</span></span><br><span class="line">        bins = bins, <span class="comment"># bins</span></span><br><span class="line">        density = <span class="literal">True</span>, <span class="comment"># density or not</span></span><br><span class="line">        cumulative = <span class="literal">True</span>, <span class="comment"># accumulative or not</span></span><br><span class="line">        color = <span class="string">'steelblue'</span>, <span class="comment"># color</span></span><br><span class="line">        edgecolor = <span class="string">'k'</span>, <span class="comment"># edge color</span></span><br><span class="line">        label = <span class="string">'histogram'</span> )<span class="comment"># label</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># title and labels</span></span><br><span class="line">plt.title(<span class="string">'乘客年龄的频率累计直方图'</span>)</span><br><span class="line">plt.xlabel(<span class="string">'年龄'</span>)</span><br><span class="line">plt.ylabel(<span class="string">'累计频率'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># remove ticks on top and right</span></span><br><span class="line">plt.tick_params(top=<span class="string">'off'</span>, right=<span class="string">'off'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># legend</span></span><br><span class="line">plt.legend(loc = <span class="string">'best'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># show numbers on top</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(bins)<span class="number">-1</span>):</span><br><span class="line">    plt.text(arr[<span class="number">1</span>][i],arr[<span class="number">0</span>][i],str(round(arr[<span class="number">0</span>][i],<span class="number">2</span>)))</span><br><span class="line"></span><br><span class="line"><span class="comment"># show plot</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/output_35_0.png" data-fancybox="group" data-caption="png" class="fancybox"><img alt="png" data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/output_35_0.png" class="lazyload" title="png"></a></p><h2 id="plot-with-normal-distribution"><a href="#plot-with-normal-distribution" class="headerlink" title="plot with normal distribution"></a>plot with normal distribution</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># normal distrubition</span></span><br><span class="line">bins = np.arange(titanic.Age.min(),titanic.Age.max(),<span class="number">5</span>)</span><br><span class="line">arr = plt.hist(titanic.Age, <span class="comment"># 绘图数据</span></span><br><span class="line">               bins = bins, <span class="comment"># 指定直方图的组距</span></span><br><span class="line">               density = <span class="literal">True</span>, <span class="comment"># density plot</span></span><br><span class="line">               color = <span class="string">'steelblue'</span>, <span class="comment"># color</span></span><br><span class="line">               edgecolor = <span class="string">'k'</span>) <span class="comment"># edge color</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># title and label</span></span><br><span class="line">plt.title(<span class="string">'乘客年龄直方图'</span>)</span><br><span class="line">plt.xlabel(<span class="string">'年龄'</span>)</span><br><span class="line">plt.ylabel(<span class="string">'频率'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># normal distrubition</span></span><br><span class="line">x1 = np.linspace(titanic.Age.min(), titanic.Age.max(), <span class="number">1000</span>)</span><br><span class="line">normal = scs.norm.pdf(x1, titanic.Age.mean(), titanic.Age.std())</span><br><span class="line"><span class="comment"># plot normal distribution</span></span><br><span class="line">line1, = plt.plot(x1,normal,<span class="string">'r-'</span>, linewidth = <span class="number">2</span>) </span><br><span class="line"></span><br><span class="line"><span class="comment"># gaussianKDE distrubution</span></span><br><span class="line">kde = mlab.GaussianKDE(titanic.Age)</span><br><span class="line">x2 = np.linspace(titanic.Age.min(), titanic.Age.max(), <span class="number">1000</span>)</span><br><span class="line"><span class="comment"># plot gaussianKDE distrubution</span></span><br><span class="line">line2, = plt.plot(x2,kde(x2),<span class="string">'g-'</span>, linewidth = <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># remove ticks on top and right</span></span><br><span class="line">plt.tick_params(top=<span class="string">'off'</span>, right=<span class="string">'off'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># show numbers on top</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(bins)<span class="number">-1</span>):</span><br><span class="line">    plt.text(arr[<span class="number">1</span>][i],arr[<span class="number">0</span>][i],str(round(arr[<span class="number">0</span>][i],<span class="number">2</span>)))</span><br><span class="line"></span><br><span class="line"><span class="comment"># show legend</span></span><br><span class="line">plt.legend([line1, line2],[<span class="string">'正态分布曲线'</span>,<span class="string">'核密度曲线'</span>],loc=<span class="string">'best'</span>)</span><br><span class="line"><span class="comment"># show plot</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/output_37_0.png" data-fancybox="group" data-caption="png" class="fancybox"><img alt="png" data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/output_37_0.png" class="lazyload" title="png"></a></p><h2 id="stack-plot"><a href="#stack-plot" class="headerlink" title="stack plot"></a>stack plot</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># data</span></span><br><span class="line">age_female = titanic.Age[titanic.Sex == <span class="string">'female'</span>]</span><br><span class="line">age_male = titanic.Age[titanic.Sex == <span class="string">'male'</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># bins</span></span><br><span class="line">bins = np.arange(titanic.Age.min(), titanic.Age.max(), <span class="number">2</span>)</span><br><span class="line"><span class="comment"># male</span></span><br><span class="line">arr1 = plt.hist(age_male,</span><br><span class="line">         bins = bins,</span><br><span class="line">         label = <span class="string">'男性'</span>,</span><br><span class="line">         color = <span class="string">'steelblue'</span>,</span><br><span class="line">         alpha = <span class="number">0.7</span>,</span><br><span class="line">         edgecolor = <span class="string">'k'</span>) <span class="comment"># edge color)</span></span><br><span class="line"><span class="comment"># female</span></span><br><span class="line">arr2 = plt.hist(age_female,</span><br><span class="line">         bins = bins,</span><br><span class="line">         label = <span class="string">'女性'</span>,</span><br><span class="line">         alpha = <span class="number">0.6</span>,</span><br><span class="line">         edgecolor = <span class="string">'k'</span>) <span class="comment"># edge color)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># title and label</span></span><br><span class="line">plt.title(<span class="string">'乘客年龄直方图'</span>)</span><br><span class="line">plt.xlabel(<span class="string">'年龄'</span>)</span><br><span class="line">plt.ylabel(<span class="string">'人数'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># remove ticks on top and right</span></span><br><span class="line">plt.tick_params(top=<span class="string">'off'</span>, right=<span class="string">'off'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># show numbers on top</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(bins)<span class="number">-1</span>):</span><br><span class="line">    plt.text(arr1[<span class="number">1</span>][i],arr1[<span class="number">0</span>][i],str(arr1[<span class="number">0</span>][i].astype(int)))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># show numbers on top</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(bins)<span class="number">-1</span>):</span><br><span class="line">    plt.text(arr2[<span class="number">1</span>][i],arr2[<span class="number">0</span>][i],str(arr2[<span class="number">0</span>][i].astype(int)))</span><br><span class="line"></span><br><span class="line"><span class="comment"># shown legend</span></span><br><span class="line">plt.legend()</span><br><span class="line"><span class="comment"># show plot</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/output_39_0.png" data-fancybox="group" data-caption="png" class="fancybox"><img alt="png" data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/output_39_0.png" class="lazyload" title="png"></a></p><h1 id="box-plot"><a href="#box-plot" class="headerlink" title="box plot"></a>box plot</h1><p>boxplot函数的参数解读<br>   绘图之前，我们先来讲解一下matplotlib包中boxplot函数的参数含义及使用方法：<br>plt.boxplot(x, notch=None, sym=None, vert=None, whis=None, positions=None, widths=None, patch_artist=None, meanline=None, showmeans=None, showcaps=None, showbox=None, showfliers=None, boxprops=None, labels=None, flierprops=None, medianprops=None, meanprops=None, capprops=None, whiskerprops=None)</p><p>x：指定要绘制箱线图的数据；</p><p>notch：是否是凹口的形式展现箱线图，默认非凹口；</p><p>sym：指定异常点的形状，默认为+号显示；</p><p>vert：是否需要将箱线图垂直摆放，默认垂直摆放；</p><p>whis：指定上下须与上下四分位的距离，默认为1.5倍的四分位差；</p><p>positions：指定箱线图的位置，默认为[0,1,2…]；</p><p>widths：指定箱线图的宽度，默认为0.5；</p><p>patch_artist：是否填充箱体的颜色；</p><p>meanline：是否用线的形式表示均值，默认用点来表示；</p><p>showmeans：是否显示均值，默认不显示；</p><p>showcaps：是否显示箱线图顶端和末端的两条线，默认显示；</p><p>showbox：是否显示箱线图的箱体，默认显示；</p><p>showfliers：是否显示异常值，默认显示；</p><p>boxprops：设置箱体的属性，如边框色，填充色等；</p><p>labels：为箱线图添加标签，类似于图例的作用；</p><p>filerprops：设置异常值的属性，如异常点的形状、大小、填充色等；</p><p>medianprops：设置中位数的属性，如线的类型、粗细等；</p><p>meanprops：设置均值的属性，如点的大小、颜色等；</p><p>capprops：设置箱线图顶端和末端线条的属性，如颜色、粗细等；</p><p>whiskerprops：设置须的属性，如颜色、粗细、线的类型等；</p><h2 id="data-preparation"><a href="#data-preparation" class="headerlink" title="data preparation"></a>data preparation</h2><p>see histogram data preparation for details</p><h2 id="single-box-plot"><a href="#single-box-plot" class="headerlink" title="single box plot"></a>single box plot</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置中文和负号正常显示</span></span><br><span class="line">plt.rcParams[<span class="string">'font.sans-serif'</span>] = <span class="string">'Microsoft YaHei'</span></span><br><span class="line">plt.rcParams[<span class="string">'axes.unicode_minus'</span>] = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># box plot</span></span><br><span class="line">arr = plt.boxplot(x = titanic.Age, <span class="comment"># data</span></span><br><span class="line">            patch_artist=<span class="literal">True</span>, <span class="comment"># custom color</span></span><br><span class="line">            showmeans=<span class="literal">True</span>, <span class="comment"># show means or not</span></span><br><span class="line">            boxprops = &#123;<span class="string">'color'</span>:<span class="string">'black'</span>,<span class="string">'facecolor'</span>:<span class="string">'#9999ff'</span>&#125;, <span class="comment"># color</span></span><br><span class="line">            flierprops = &#123;<span class="string">'marker'</span>:<span class="string">'o'</span>,<span class="string">'markerfacecolor'</span>:<span class="string">'red'</span>,<span class="string">'color'</span>:<span class="string">'black'</span>&#125;, <span class="comment"># outlier points colors</span></span><br><span class="line">            meanprops = &#123;<span class="string">'marker'</span>:<span class="string">'D'</span>,<span class="string">'markerfacecolor'</span>:<span class="string">'indianred'</span>&#125;, <span class="comment"># mean point colors</span></span><br><span class="line">            medianprops = &#123;<span class="string">'linestyle'</span>:<span class="string">'--'</span>,<span class="string">'color'</span>:<span class="string">'orange'</span>&#125;) <span class="comment"># median point colors</span></span><br><span class="line"><span class="comment"># y limits</span></span><br><span class="line">plt.ylim(<span class="number">0</span>,<span class="number">85</span>)</span><br><span class="line"><span class="comment"># legend</span></span><br><span class="line">plt.legend([arr[<span class="string">"boxes"</span>][<span class="number">0</span>]], [<span class="string">'A'</span>], loc=<span class="string">'upper right'</span>)</span><br><span class="line"><span class="comment"># remove ticks on top and right</span></span><br><span class="line">plt.tick_params(top=<span class="string">'off'</span>, right=<span class="string">'off'</span>)</span><br><span class="line"><span class="comment"># show plot</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/output_45_0.png" data-fancybox="group" data-caption="png" class="fancybox"><img alt="png" data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/output_45_0.png" class="lazyload" title="png"></a></p><h2 id="multiple-boxes-plot"><a href="#multiple-boxes-plot" class="headerlink" title="multiple boxes plot"></a>multiple boxes plot</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># sort values</span></span><br><span class="line">titanic.sort_values(by = <span class="string">'Pclass'</span>, inplace=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">age = []</span><br><span class="line">levels = titanic.Pclass.unique()</span><br><span class="line"><span class="keyword">for</span> pclass <span class="keyword">in</span> levels:</span><br><span class="line">    age.append(titanic.loc[titanic.Pclass==pclass,<span class="string">'Age'</span>])</span><br><span class="line"></span><br><span class="line">arr = plt.boxplot(x = age, </span><br><span class="line">            patch_artist=<span class="literal">True</span>,</span><br><span class="line">            labels = [<span class="string">'一等舱'</span>,<span class="string">'二等舱'</span>,<span class="string">'三等舱'</span>],</span><br><span class="line">            showmeans=<span class="literal">True</span>, </span><br><span class="line">            boxprops = &#123;<span class="string">'color'</span>:<span class="string">'black'</span>,<span class="string">'facecolor'</span>:<span class="string">'#9999ff'</span>&#125;, </span><br><span class="line">            flierprops = &#123;<span class="string">'marker'</span>:<span class="string">'o'</span>,<span class="string">'markerfacecolor'</span>:<span class="string">'red'</span>,<span class="string">'color'</span>:<span class="string">'black'</span>&#125;,</span><br><span class="line">            meanprops = &#123;<span class="string">'marker'</span>:<span class="string">'D'</span>,<span class="string">'markerfacecolor'</span>:<span class="string">'indianred'</span>&#125;,</span><br><span class="line">            medianprops = &#123;<span class="string">'linestyle'</span>:<span class="string">'--'</span>,<span class="string">'color'</span>:<span class="string">'orange'</span>&#125;)</span><br><span class="line"></span><br><span class="line">plt.legend([arr[<span class="string">"boxes"</span>][<span class="number">0</span>], arr[<span class="string">"boxes"</span>][<span class="number">1</span>], arr[<span class="string">"boxes"</span>][<span class="number">2</span>]], [<span class="string">'一等舱'</span>,<span class="string">'二等舱'</span>,<span class="string">'三等舱'</span>], loc=<span class="string">'upper left'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># x limits</span></span><br><span class="line">plt.xlim(<span class="number">-0.5</span>,<span class="number">4</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/output_47_0.png" data-fancybox="group" data-caption="png" class="fancybox"><img alt="png" data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/output_47_0.png" class="lazyload" title="png"></a></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">age<span class="comment"># sort values</span></span><br><span class="line">titanic.sort_values(by = <span class="string">'Pclass'</span>, inplace=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">age = []</span><br><span class="line">levels = titanic.Pclass.unique()</span><br><span class="line"><span class="keyword">for</span> pclass <span class="keyword">in</span> levels:</span><br><span class="line">    age.append(titanic.loc[titanic.Pclass==pclass,<span class="string">'Age'</span>])</span><br><span class="line"></span><br><span class="line">arr0 = plt.boxplot(x = age[<span class="number">0</span>], </span><br><span class="line">            patch_artist=<span class="literal">True</span>,</span><br><span class="line">            labels = [<span class="string">'一等舱'</span>],</span><br><span class="line">            showmeans=<span class="literal">True</span>, </span><br><span class="line">            boxprops = &#123;<span class="string">'color'</span>:<span class="string">'black'</span>,<span class="string">'facecolor'</span>:<span class="string">'green'</span>&#125;, </span><br><span class="line">            flierprops = &#123;<span class="string">'marker'</span>:<span class="string">'o'</span>,<span class="string">'markerfacecolor'</span>:<span class="string">'red'</span>,<span class="string">'color'</span>:<span class="string">'black'</span>&#125;,</span><br><span class="line">            meanprops = &#123;<span class="string">'marker'</span>:<span class="string">'D'</span>,<span class="string">'markerfacecolor'</span>:<span class="string">'indianred'</span>&#125;,</span><br><span class="line">            medianprops = &#123;<span class="string">'linestyle'</span>:<span class="string">'--'</span>,<span class="string">'color'</span>:<span class="string">'orange'</span>&#125;,</span><br><span class="line">            positions = [<span class="number">0</span>])</span><br><span class="line">arr1 = plt.boxplot(x = age[<span class="number">1</span>],</span><br><span class="line">            patch_artist=<span class="literal">True</span>,</span><br><span class="line">            labels = [<span class="string">'二等舱'</span>],</span><br><span class="line">            showmeans=<span class="literal">True</span>, </span><br><span class="line">            boxprops = &#123;<span class="string">'color'</span>:<span class="string">'black'</span>,<span class="string">'facecolor'</span>:<span class="string">'blue'</span>&#125;, </span><br><span class="line">            flierprops = &#123;<span class="string">'marker'</span>:<span class="string">'o'</span>,<span class="string">'markerfacecolor'</span>:<span class="string">'red'</span>,<span class="string">'color'</span>:<span class="string">'black'</span>&#125;,</span><br><span class="line">            meanprops = &#123;<span class="string">'marker'</span>:<span class="string">'D'</span>,<span class="string">'markerfacecolor'</span>:<span class="string">'indianred'</span>&#125;,</span><br><span class="line">            medianprops = &#123;<span class="string">'linestyle'</span>:<span class="string">'--'</span>,<span class="string">'color'</span>:<span class="string">'orange'</span>&#125;,</span><br><span class="line">            positions = [<span class="number">1</span>])</span><br><span class="line">arr2 = plt.boxplot(x = age[<span class="number">2</span>], </span><br><span class="line">            patch_artist=<span class="literal">True</span>,</span><br><span class="line">            labels = [<span class="string">'三等舱'</span>],</span><br><span class="line">            showmeans=<span class="literal">True</span>, </span><br><span class="line">            boxprops = &#123;<span class="string">'color'</span>:<span class="string">'black'</span>,<span class="string">'facecolor'</span>:<span class="string">'orange'</span>&#125;, </span><br><span class="line">            flierprops = &#123;<span class="string">'marker'</span>:<span class="string">'o'</span>,<span class="string">'markerfacecolor'</span>:<span class="string">'red'</span>,<span class="string">'color'</span>:<span class="string">'black'</span>&#125;,</span><br><span class="line">            meanprops = &#123;<span class="string">'marker'</span>:<span class="string">'D'</span>,<span class="string">'markerfacecolor'</span>:<span class="string">'indianred'</span>&#125;,</span><br><span class="line">            medianprops = &#123;<span class="string">'linestyle'</span>:<span class="string">'--'</span>,<span class="string">'color'</span>:<span class="string">'orange'</span>&#125;,</span><br><span class="line">            positions = [<span class="number">2</span>])</span><br><span class="line"></span><br><span class="line">plt.legend([arr0[<span class="string">"boxes"</span>][<span class="number">0</span>], arr1[<span class="string">"boxes"</span>][<span class="number">0</span>], arr2[<span class="string">"boxes"</span>][<span class="number">0</span>]], [<span class="string">'一等舱'</span>,<span class="string">'二等舱'</span>,<span class="string">'三等舱'</span>], loc=<span class="string">'upper left'</span>)</span><br><span class="line"><span class="comment"># x limits</span></span><br><span class="line">plt.xlim(<span class="number">-1</span>,<span class="number">2.5</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/output_48_0.png" data-fancybox="group" data-caption="png" class="fancybox"><img alt="png" data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/output_48_0.png" class="lazyload" title="png"></a></p><h1 id="line-chart"><a href="#line-chart" class="headerlink" title="line chart"></a>line chart</h1><p>   matplotlib模块中plot函数语法及参数含义：<br>   plt.hist(x,y,linestyle,<br>    linewidth,color,marker,<br>    markersize,markeredgecolor,<br>    markerfactcolor,label,alpha)</p><p>x：指定折线图的x轴数据；</p><p>y：指定折线图的y轴数据；</p><p>linestyle：指定折线的类型，可以是实线、虚线、点虚线、点点线等，默认文实线；</p><p>linewidth：指定折线的宽度</p><p>marker：可以为折线图添加点，该参数是设置点的形状；</p><p>markersize：设置点的大小；</p><p>markeredgecolor：设置点的边框色；</p><p>markerfactcolor：设置点的填充色；</p><p>label：为折线图添加标签，类似于图例的作用；</p><h2 id="one-dimension-plot"><a href="#one-dimension-plot" class="headerlink" title="one dimension plot"></a>one dimension plot</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># data</span></span><br><span class="line">article_reading = pd.read_csv(<span class="string">'wechart.csv'</span>)</span><br><span class="line">article_reading.date = pd.to_datetime(article_reading.date)</span><br><span class="line">sub_data = article_reading.loc[article_reading.date &gt;= <span class="string">'2017-08-01'</span> ,:]</span><br><span class="line">sub_data.head()</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>date</th>      <th>article_reading_cnts</th>      <th>article_reading_times</th>      <th>collect_times</th>    </tr>  </thead>  <tbody>    <tr>      <th>212</th>      <td>2017-08-01</td>      <td>116</td>      <td>313</td>      <td>11</td>    </tr>    <tr>      <th>213</th>      <td>2017-08-02</td>      <td>91</td>      <td>248</td>      <td>15</td>    </tr>    <tr>      <th>214</th>      <td>2017-08-03</td>      <td>62</td>      <td>220</td>      <td>7</td>    </tr>    <tr>      <th>215</th>      <td>2017-08-04</td>      <td>52</td>      <td>162</td>      <td>2</td>    </tr>    <tr>      <th>216</th>      <td>2017-08-05</td>      <td>45</td>      <td>134</td>      <td>8</td>    </tr>  </tbody></table></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">plt.style.use(<span class="string">'ggplot'</span>)</span><br><span class="line">pd.plotting.register_matplotlib_converters()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置中文编码和负号的正常显示</span></span><br><span class="line">plt.rcParams[<span class="string">'font.sans-serif'</span>] = <span class="string">'Microsoft YaHei'</span></span><br><span class="line">plt.rcParams[<span class="string">'axes.unicode_minus'</span>] = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># fig size</span></span><br><span class="line">fig = plt.figure(figsize=(<span class="number">10</span>,<span class="number">6</span>))</span><br><span class="line"><span class="comment"># plot</span></span><br><span class="line">plt.plot(sub_data.date, <span class="comment"># x data</span></span><br><span class="line">         sub_data.article_reading_cnts, <span class="comment"># y data</span></span><br><span class="line">         linestyle = <span class="string">'-'</span>, <span class="comment"># line style</span></span><br><span class="line">         linewidth = <span class="number">2</span>, <span class="comment"># line width</span></span><br><span class="line">         color = <span class="string">'steelblue'</span>, <span class="comment"># color</span></span><br><span class="line">         marker = <span class="string">'o'</span>, <span class="comment"># shape of points</span></span><br><span class="line">         markersize = <span class="number">6</span>, <span class="comment"># size of points</span></span><br><span class="line">         markeredgecolor=<span class="string">'black'</span>, <span class="comment"># points edge color</span></span><br><span class="line">         markerfacecolor=<span class="string">'brown'</span>) <span class="comment"># points filled color</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># title and label</span></span><br><span class="line">plt.title(<span class="string">'公众号每天阅读人数趋势图'</span>)</span><br><span class="line">plt.xlabel(<span class="string">'日期'</span>)</span><br><span class="line">plt.ylabel(<span class="string">'人数'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># remove ticks on top and right</span></span><br><span class="line">plt.tick_params(top = <span class="string">'off'</span>, right = <span class="string">'off'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># set 45 degree display for x</span></span><br><span class="line">fig.autofmt_xdate(rotation = <span class="number">45</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># show plot</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/output_53_0.png" data-fancybox="group" data-caption="png" class="fancybox"><img alt="png" data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/output_53_0.png" class="lazyload" title="png"></a></p><h2 id="optimized-one-dimension-plot"><a href="#optimized-one-dimension-plot" class="headerlink" title="optimized one dimension plot"></a>optimized one dimension plot</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> matplotlib <span class="keyword">as</span> mpl</span><br><span class="line">plt.style.use(<span class="string">'ggplot'</span>)</span><br><span class="line">pd.plotting.register_matplotlib_converters()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置中文编码和负号的正常显示</span></span><br><span class="line">plt.rcParams[<span class="string">'font.sans-serif'</span>] = <span class="string">'Microsoft YaHei'</span></span><br><span class="line">plt.rcParams[<span class="string">'axes.unicode_minus'</span>] = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># fig size</span></span><br><span class="line">fig = plt.figure(figsize=(<span class="number">10</span>,<span class="number">6</span>))</span><br><span class="line"><span class="comment"># plot</span></span><br><span class="line">plt.plot(sub_data.date, <span class="comment"># x data</span></span><br><span class="line">         sub_data.article_reading_cnts, <span class="comment"># y data</span></span><br><span class="line">         linestyle = <span class="string">'-'</span>, <span class="comment"># line style</span></span><br><span class="line">         linewidth = <span class="number">2</span>, <span class="comment"># line width</span></span><br><span class="line">         color = <span class="string">'steelblue'</span>, <span class="comment"># color</span></span><br><span class="line">         marker = <span class="string">'o'</span>, <span class="comment"># shape of points</span></span><br><span class="line">         markersize = <span class="number">6</span>, <span class="comment"># size of points</span></span><br><span class="line">         markeredgecolor=<span class="string">'black'</span>, <span class="comment"># points edge color</span></span><br><span class="line">         markerfacecolor=<span class="string">'brown'</span>) <span class="comment"># points filled color</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># title and label</span></span><br><span class="line">plt.title(<span class="string">'公众号每天阅读人数趋势图'</span>)</span><br><span class="line">plt.xlabel(<span class="string">'日期'</span>)</span><br><span class="line">plt.ylabel(<span class="string">'人数'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># remove ticks on top and right</span></span><br><span class="line">plt.tick_params(top = <span class="string">'off'</span>, right = <span class="string">'off'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># set 45 degree display for x</span></span><br><span class="line">fig.autofmt_xdate(rotation = <span class="number">45</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># axis info</span></span><br><span class="line">ax = plt.gca()</span><br><span class="line"><span class="comment"># date format</span></span><br><span class="line">date_format = mpl.dates.DateFormatter(<span class="string">"%Y-%m-%d"</span>)  </span><br><span class="line">ax.xaxis.set_major_formatter(date_format) </span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置x轴显示多少个日期刻度</span></span><br><span class="line"><span class="comment">#xlocator = mpl.ticker.LinearLocator(10)</span></span><br><span class="line"><span class="comment"># 设置x轴每个刻度的间隔天数</span></span><br><span class="line">xlocator = mpl.ticker.MultipleLocator(<span class="number">5</span>)</span><br><span class="line">ax.xaxis.set_major_locator(xlocator)</span><br><span class="line"></span><br><span class="line"><span class="comment"># show plot</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/output_55_0.png" data-fancybox="group" data-caption="png" class="fancybox"><img alt="png" data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/output_55_0.png" class="lazyload" title="png"></a></p><h2 id="multiple-dimension-plot"><a href="#multiple-dimension-plot" class="headerlink" title="multiple dimension plot"></a>multiple dimension plot</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> matplotlib <span class="keyword">as</span> mpl</span><br><span class="line">plt.style.use(<span class="string">'ggplot'</span>)</span><br><span class="line">pd.plotting.register_matplotlib_converters()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置中文编码和负号的正常显示</span></span><br><span class="line">plt.rcParams[<span class="string">'font.sans-serif'</span>] = <span class="string">'Microsoft YaHei'</span></span><br><span class="line">plt.rcParams[<span class="string">'axes.unicode_minus'</span>] = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># fig size</span></span><br><span class="line">fig = plt.figure(figsize=(<span class="number">10</span>,<span class="number">6</span>))</span><br><span class="line"><span class="comment"># plot</span></span><br><span class="line">plt.plot(sub_data.date, <span class="comment"># x data</span></span><br><span class="line">         sub_data.article_reading_cnts, <span class="comment"># y data</span></span><br><span class="line">         linestyle = <span class="string">'-'</span>, <span class="comment"># line style</span></span><br><span class="line">         linewidth = <span class="number">2</span>, <span class="comment"># line width</span></span><br><span class="line">         color = <span class="string">'steelblue'</span>, <span class="comment"># color</span></span><br><span class="line">         marker = <span class="string">'o'</span>, <span class="comment"># shape of points</span></span><br><span class="line">         markersize = <span class="number">6</span>, <span class="comment"># size of points</span></span><br><span class="line">         markeredgecolor=<span class="string">'black'</span>, <span class="comment"># points edge color</span></span><br><span class="line">         markerfacecolor=<span class="string">'brown'</span>, <span class="comment"># points filled color</span></span><br><span class="line">         label = <span class="string">'阅读人数'</span>) <span class="comment"># label</span></span><br><span class="line"></span><br><span class="line">plt.plot(sub_data.date, <span class="comment"># x data</span></span><br><span class="line">         sub_data.article_reading_times, <span class="comment"># y data</span></span><br><span class="line">         linestyle = <span class="string">'-'</span>, <span class="comment"># line style</span></span><br><span class="line">         linewidth = <span class="number">2</span>, <span class="comment"># line width</span></span><br><span class="line">         color = <span class="string">'#ff9999'</span>, <span class="comment"># color</span></span><br><span class="line">         marker = <span class="string">'o'</span>, <span class="comment"># shape of points</span></span><br><span class="line">         markersize = <span class="number">6</span>, <span class="comment"># size of points</span></span><br><span class="line">         markeredgecolor=<span class="string">'black'</span>, <span class="comment"># points edge color</span></span><br><span class="line">         markerfacecolor=<span class="string">'#ff9999'</span>, <span class="comment"># points filled color</span></span><br><span class="line">         label = <span class="string">'阅读人次'</span>) <span class="comment"># label</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># title and label</span></span><br><span class="line">plt.title(<span class="string">'公众号每天阅读人数趋势图'</span>)</span><br><span class="line">plt.xlabel(<span class="string">'日期'</span>)</span><br><span class="line">plt.ylabel(<span class="string">'人数'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># remove ticks on top and right</span></span><br><span class="line">plt.tick_params(top = <span class="string">'off'</span>, right = <span class="string">'off'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># set 45 degree display for x</span></span><br><span class="line">fig.autofmt_xdate(rotation = <span class="number">45</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># axis info</span></span><br><span class="line">ax = plt.gca()</span><br><span class="line"><span class="comment"># date format</span></span><br><span class="line">date_format = mpl.dates.DateFormatter(<span class="string">"%Y-%m-%d"</span>)  </span><br><span class="line">ax.xaxis.set_major_formatter(date_format) </span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置x轴显示多少个日期刻度</span></span><br><span class="line"><span class="comment">#xlocator = mpl.ticker.LinearLocator(10)</span></span><br><span class="line"><span class="comment"># 设置x轴每个刻度的间隔天数</span></span><br><span class="line">xlocator = mpl.ticker.MultipleLocator(<span class="number">5</span>)</span><br><span class="line">ax.xaxis.set_major_locator(xlocator)</span><br><span class="line"></span><br><span class="line"><span class="comment"># show legend</span></span><br><span class="line">plt.legend()</span><br><span class="line"></span><br><span class="line"><span class="comment"># show plot</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/output_57_0.png" data-fancybox="group" data-caption="png" class="fancybox"><img alt="png" data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/output_57_0.png" class="lazyload" title="png"></a></p><h1 id="scatter-plot"><a href="#scatter-plot" class="headerlink" title="scatter plot"></a>scatter plot</h1><p>matplotlib模块中scatter函数语法及参数含义：</p><p>plt.scatter(x, y, s=20,<br>            c=None, marker=’o’,<br>            cmap=None, norm=None,<br>            vmin=None, vmax=None,<br>            alpha=None, linewidths=None,<br>            edgecolors=None)<br>x：指定散点图的x轴数据；</p><p>y：指定散点图的y轴数据；</p><p>s：指定散点图点的大小，默认为20，通过传入新的变量，实现气泡图的绘制；</p><p>c：指定散点图点的颜色，默认为蓝色；</p><p>marker：指定散点图点的形状，默认为圆形；</p><p>cmap：指定色图，只有当c参数是一个浮点型的数组的时候才起作用；</p><p>norm：设置数据亮度，标准化到0~1之间，使用该参数仍需要c为浮点型的数组；</p><p>vmin、vmax：亮度设置，与norm类似，如果使用了norm则该参数无效；</p><p>alpha：设置散点的透明度；</p><p>linewidths：设置散点边界线的宽度；</p><p>edgecolors：设置散点边界线的颜色；</p><h2 id="one-dimension-scatter-plot"><a href="#one-dimension-scatter-plot" class="headerlink" title="one dimension scatter plot"></a>one dimension scatter plot</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># data</span></span><br><span class="line">cars = pd.read_csv(<span class="string">'cars.csv'</span>)</span><br><span class="line">cars.head()</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>speed</th>      <th>dist</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>4</td>      <td>2</td>    </tr>    <tr>      <th>1</th>      <td>4</td>      <td>10</td>    </tr>    <tr>      <th>2</th>      <td>7</td>      <td>4</td>    </tr>    <tr>      <th>3</th>      <td>7</td>      <td>22</td>    </tr>    <tr>      <th>4</th>      <td>8</td>      <td>16</td>    </tr>  </tbody></table></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">plt.style.use(<span class="string">'ggplot'</span>)</span><br><span class="line"><span class="comment"># 设置中文编码和负号的正常显示</span></span><br><span class="line">plt.rcParams[<span class="string">'font.sans-serif'</span>] = <span class="string">'Microsoft YaHei'</span></span><br><span class="line">plt.rcParams[<span class="string">'axes.unicode_minus'</span>] = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">plt.scatter(</span><br><span class="line">    x=cars[<span class="string">"speed"</span>],</span><br><span class="line">    y=cars[<span class="string">"dist"</span>],</span><br><span class="line">    c=<span class="string">"steelblue"</span>,</span><br><span class="line">    marker=<span class="string">"s"</span>, <span class="comment"># marker</span></span><br><span class="line">    alpha=<span class="number">0.9</span>, <span class="comment"># alpha</span></span><br><span class="line">    linewidths = <span class="number">0.3</span>, <span class="comment"># width</span></span><br><span class="line">    edgecolors = <span class="string">'red'</span>) <span class="comment"># edge color</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># title and labels</span></span><br><span class="line">plt.title(<span class="string">'汽车速度与刹车距离的关系'</span>)</span><br><span class="line">plt.xlabel(<span class="string">'汽车速度'</span>)</span><br><span class="line">plt.ylabel(<span class="string">'刹车距离'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Remove ticks on top and right</span></span><br><span class="line">plt.tick_params(top = <span class="string">'off'</span>, right = <span class="string">'off'</span>)</span><br><span class="line"><span class="comment"># show plot</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/output_62_0.png" data-fancybox="group" data-caption="png" class="fancybox"><img alt="png" data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/output_62_0.png" class="lazyload" title="png"></a></p><h2 id="one-dimension-plot-with-linear-regression"><a href="#one-dimension-plot-with-linear-regression" class="headerlink" title="one dimension plot with linear regression"></a>one dimension plot with linear regression</h2><p>linear regression</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> LinearRegression</span><br><span class="line">reg = LinearRegression().fit(cars.speed.values.reshape(<span class="number">-1</span>,<span class="number">1</span>), cars.dist.values.reshape(<span class="number">-1</span>,<span class="number">1</span>))</span><br><span class="line">pred = reg.predict(cars.speed.values.reshape(<span class="number">-1</span>,<span class="number">1</span>))</span><br></pre></td></tr></table></figure></div><p>intercept</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reg.intercept_</span><br></pre></td></tr></table></figure></div><pre><code>array([-17.57909489])</code></pre><p>slope</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reg.coef_</span><br></pre></td></tr></table></figure></div><pre><code>array([[3.93240876]])</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reg.coef_[<span class="number">0</span>][<span class="number">0</span>], reg.intercept_[<span class="number">0</span>]</span><br></pre></td></tr></table></figure></div><pre><code>(3.9324087591240873, -17.57909489051095)</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">plt.style.use(<span class="string">'ggplot'</span>)</span><br><span class="line"><span class="comment"># 设置中文编码和负号的正常显示</span></span><br><span class="line">plt.rcParams[<span class="string">'font.sans-serif'</span>] = <span class="string">'Microsoft YaHei'</span></span><br><span class="line">plt.rcParams[<span class="string">'axes.unicode_minus'</span>] = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">plt.scatter(</span><br><span class="line">    x=cars[<span class="string">"speed"</span>],</span><br><span class="line">    y=cars[<span class="string">"dist"</span>],</span><br><span class="line">    c=<span class="string">"steelblue"</span>,</span><br><span class="line">    marker=<span class="string">"s"</span>, <span class="comment"># marker</span></span><br><span class="line">    alpha=<span class="number">0.9</span>, <span class="comment"># alpha</span></span><br><span class="line">    linewidths = <span class="number">0.3</span>, <span class="comment"># width</span></span><br><span class="line">    edgecolors = <span class="string">'red'</span>) <span class="comment"># edge color</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># regression line</span></span><br><span class="line">plt.plot(cars.speed,</span><br><span class="line">         pred,</span><br><span class="line">         linewidth = <span class="number">2</span>,</span><br><span class="line">         label = <span class="string">'回归线'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># text</span></span><br><span class="line">plt.text(<span class="number">5</span>,<span class="number">100</span>,<span class="string">"y=&#123;:.2f&#125;x + &#123;:.2f&#125;"</span>.format(reg.coef_[<span class="number">0</span>][<span class="number">0</span>], reg.intercept_[<span class="number">0</span>]))</span><br><span class="line"></span><br><span class="line"><span class="comment"># title and labels</span></span><br><span class="line">plt.title(<span class="string">'汽车速度与刹车距离的关系'</span>)</span><br><span class="line">plt.xlabel(<span class="string">'汽车速度'</span>)</span><br><span class="line">plt.ylabel(<span class="string">'刹车距离'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Remove ticks on top and right</span></span><br><span class="line">plt.tick_params(top = <span class="string">'off'</span>, right = <span class="string">'off'</span>)</span><br><span class="line"><span class="comment"># show plot</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/output_71_0.png" data-fancybox="group" data-caption="png" class="fancybox"><img alt="png" data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/output_71_0.png" class="lazyload" title="png"></a></p><h2 id="multiple-dimensions-plot"><a href="#multiple-dimensions-plot" class="headerlink" title="multiple dimensions plot"></a>multiple dimensions plot</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># data</span></span><br><span class="line">iris = pd.read_csv(<span class="string">"iris.csv"</span>,header=<span class="literal">None</span>)</span><br><span class="line">iris.columns=([<span class="string">'sepal_length'</span>,<span class="string">'sepal_width'</span>, <span class="string">'petal_length'</span>, <span class="string">'petal_width'</span>, <span class="string">'class'</span>])</span><br><span class="line">iris.head()</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>sepal_length</th>      <th>sepal_width</th>      <th>petal_length</th>      <th>petal_width</th>      <th>class</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>5.1</td>      <td>3.5</td>      <td>1.4</td>      <td>0.2</td>      <td>Iris-setosa</td>    </tr>    <tr>      <th>1</th>      <td>4.9</td>      <td>3.0</td>      <td>1.4</td>      <td>0.2</td>      <td>Iris-setosa</td>    </tr>    <tr>      <th>2</th>      <td>4.7</td>      <td>3.2</td>      <td>1.3</td>      <td>0.2</td>      <td>Iris-setosa</td>    </tr>    <tr>      <th>3</th>      <td>4.6</td>      <td>3.1</td>      <td>1.5</td>      <td>0.2</td>      <td>Iris-setosa</td>    </tr>    <tr>      <th>4</th>      <td>5.0</td>      <td>3.6</td>      <td>1.4</td>      <td>0.2</td>      <td>Iris-setosa</td>    </tr>  </tbody></table></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">classes = iris[<span class="string">"class"</span>].unique()</span><br><span class="line">classes</span><br></pre></td></tr></table></figure></div><pre><code>array([&#39;Iris-setosa&#39;, &#39;Iris-versicolor&#39;, &#39;Iris-virginica&#39;], dtype=object)</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># colors</span></span><br><span class="line">colors = [<span class="string">'steelblue'</span>, <span class="string">'#9999ff'</span>, <span class="string">'#ff9999'</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># plot</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(classes)):</span><br><span class="line">    plt.scatter(iris.loc[iris[<span class="string">"class"</span>]==classes[i],<span class="string">"petal_length"</span>],</span><br><span class="line">                iris.loc[iris[<span class="string">"class"</span>]==classes[i],<span class="string">'petal_width'</span>],</span><br><span class="line">                label=classes[i],</span><br><span class="line">                color=colors[i])</span><br><span class="line"><span class="comment"># title and label</span></span><br><span class="line">plt.title(<span class="string">'花瓣长度与宽度的关系'</span>)</span><br><span class="line">plt.xlabel(<span class="string">'花瓣长度'</span>)</span><br><span class="line">plt.ylabel(<span class="string">'花瓣宽度'</span>)</span><br><span class="line"><span class="comment"># remove ticks on top and right</span></span><br><span class="line">plt.tick_params(top = <span class="string">'off'</span>, right = <span class="string">'off'</span>)</span><br><span class="line"><span class="comment"># legend</span></span><br><span class="line">plt.legend(loc = <span class="string">'upper left'</span>)</span><br><span class="line"><span class="comment"># show plot</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/output_75_0.png" data-fancybox="group" data-caption="png" class="fancybox"><img alt="png" data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/output_75_0.png" class="lazyload" title="png"></a></p><h2 id="bubble-plot"><a href="#bubble-plot" class="headerlink" title="bubble plot"></a>bubble plot</h2><p>Show another dimension by size of scatter marker.</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># colors</span></span><br><span class="line">colors = [<span class="string">'steelblue'</span>, <span class="string">'#9999ff'</span>, <span class="string">'#ff9999'</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># normalized sepal_width</span></span><br><span class="line">sepal_width = iris.loc[iris[<span class="string">"class"</span>]==classes[i],<span class="string">'sepal_width'</span>]</span><br><span class="line">sepal_width_scaled = (sepal_width_positive-sepal_width_positive.mean())/sepal_width_positive.std()</span><br><span class="line"><span class="comment"># Make all data positive</span></span><br><span class="line">sepal_width_scaled_positive = sepal_width_scaled - sepal_width_scaled.min()</span><br><span class="line"></span><br><span class="line"><span class="comment"># plot</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(classes)):</span><br><span class="line">    plt.scatter(iris.loc[iris[<span class="string">"class"</span>]==classes[i],<span class="string">"petal_length"</span>],</span><br><span class="line">                iris.loc[iris[<span class="string">"class"</span>]==classes[i],<span class="string">'petal_width'</span>],</span><br><span class="line">                label=classes[i],</span><br><span class="line">                color=colors[i],</span><br><span class="line">                s=(sepal_width_scaled_positive * <span class="number">50</span>))</span><br><span class="line"><span class="comment"># title and label</span></span><br><span class="line">plt.title(<span class="string">'花瓣长度与宽度的关系'</span>)</span><br><span class="line">plt.xlabel(<span class="string">'花瓣长度'</span>)</span><br><span class="line">plt.ylabel(<span class="string">'花瓣宽度'</span>)</span><br><span class="line"><span class="comment"># remove ticks on top and right</span></span><br><span class="line">plt.tick_params(top = <span class="string">'off'</span>, right = <span class="string">'off'</span>)</span><br><span class="line"><span class="comment"># legend</span></span><br><span class="line">plt.legend(loc = <span class="string">'upper left'</span>)</span><br><span class="line"><span class="comment"># text</span></span><br><span class="line">plt.text(<span class="number">1</span>,<span class="number">1.5</span>,<span class="string">"size: sepal_width"</span>,)</span><br><span class="line"><span class="comment"># show plot</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/output_79_0.png" data-fancybox="group" data-caption="png" class="fancybox"><img alt="png" data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/output_79_0.png" class="lazyload" title="png"></a></p><h1 id="radar-plot"><a href="#radar-plot" class="headerlink" title="radar plot"></a>radar plot</h1><h2 id="one-dimension-radar-plot"><a href="#one-dimension-radar-plot" class="headerlink" title="one dimension radar plot"></a>one dimension radar plot</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 中文和负号的正常显示</span></span><br><span class="line">plt.rcParams[<span class="string">'font.sans-serif'</span>] = <span class="string">'Microsoft YaHei'</span></span><br><span class="line">plt.rcParams[<span class="string">'axes.unicode_minus'</span>] = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># style</span></span><br><span class="line">plt.style.use(<span class="string">'ggplot'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># data</span></span><br><span class="line">values = [<span class="number">3.2</span>,<span class="number">2.1</span>,<span class="number">3.5</span>,<span class="number">2.8</span>,<span class="number">3</span>]</span><br><span class="line">feature = [<span class="string">'个人能力'</span>,<span class="string">'QC知识'</span>,<span class="string">'解决问题能力'</span>,<span class="string">'服务质量意识'</span>,<span class="string">'团队精神'</span>]</span><br><span class="line"></span><br><span class="line">N = len(values)</span><br><span class="line"><span class="comment"># angles</span></span><br><span class="line">angles=np.linspace(<span class="number">0</span>, <span class="number">2</span>*np.pi, N, endpoint=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># values need to be a close loop to fill color</span></span><br><span class="line">values=np.concatenate((values,[values[<span class="number">0</span>]]))</span><br><span class="line">angles=np.concatenate((angles,[angles[<span class="number">0</span>]]))</span><br><span class="line"></span><br><span class="line"><span class="comment"># plot</span></span><br><span class="line">fig=plt.figure()</span><br><span class="line">ax = fig.add_subplot(<span class="number">111</span>, polar=<span class="literal">True</span>)</span><br><span class="line">ax.plot(angles, values, <span class="string">'o-'</span>, linewidth=<span class="number">2</span>)</span><br><span class="line">ax.fill(angles, values, alpha=<span class="number">0.25</span>)</span><br><span class="line"><span class="comment"># labels</span></span><br><span class="line">ax.set_thetagrids(angles * <span class="number">180</span>/np.pi, feature)</span><br><span class="line"><span class="comment"># y limits</span></span><br><span class="line">ax.set_ylim(<span class="number">0</span>,<span class="number">5</span>)</span><br><span class="line"><span class="comment"># title</span></span><br><span class="line">plt.title(<span class="string">'活动前后员工状态表现'</span>)</span><br><span class="line"><span class="comment"># grid</span></span><br><span class="line">ax.grid(<span class="literal">True</span>)</span><br><span class="line"><span class="comment"># show plot</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/output_82_0.png" data-fancybox="group" data-caption="png" class="fancybox"><img alt="png" data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/output_82_0.png" class="lazyload" title="png"></a></p><h2 id="multiple-dimension-radar-plot"><a href="#multiple-dimension-radar-plot" class="headerlink" title="multiple dimension radar plot"></a>multiple dimension radar plot</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 中文和负号的正常显示</span></span><br><span class="line">plt.rcParams[<span class="string">'font.sans-serif'</span>] = <span class="string">'Microsoft YaHei'</span></span><br><span class="line">plt.rcParams[<span class="string">'axes.unicode_minus'</span>] = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># style</span></span><br><span class="line">plt.style.use(<span class="string">'ggplot'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># data</span></span><br><span class="line">values = [<span class="number">3.2</span>,<span class="number">2.1</span>,<span class="number">3.5</span>,<span class="number">2.8</span>,<span class="number">3</span>]</span><br><span class="line">values2 = [<span class="number">4</span>,<span class="number">4.1</span>,<span class="number">4.5</span>,<span class="number">4</span>,<span class="number">4.1</span>]</span><br><span class="line">feature = [<span class="string">'个人能力'</span>,<span class="string">'QC知识'</span>,<span class="string">'解决问题能力'</span>,<span class="string">'服务质量意识'</span>,<span class="string">'团队精神'</span>]</span><br><span class="line"></span><br><span class="line">N = len(values)</span><br><span class="line"><span class="comment"># angles</span></span><br><span class="line">angles=np.linspace(<span class="number">0</span>, <span class="number">2</span>*np.pi, N, endpoint=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># values need to be a close loop to fill color</span></span><br><span class="line">values=np.concatenate((values,[values[<span class="number">0</span>]]))</span><br><span class="line">values2=np.concatenate((values2,[values2[<span class="number">0</span>]]))</span><br><span class="line">angles=np.concatenate((angles,[angles[<span class="number">0</span>]]))</span><br><span class="line"></span><br><span class="line"><span class="comment"># plot</span></span><br><span class="line">fig=plt.figure()</span><br><span class="line">ax = fig.add_subplot(<span class="number">111</span>, polar=<span class="literal">True</span>)</span><br><span class="line">ax.plot(angles, values, <span class="string">'o-'</span>, linewidth=<span class="number">2</span>)</span><br><span class="line">ax.fill(angles, values, alpha=<span class="number">0.25</span>)</span><br><span class="line"></span><br><span class="line">ax.plot(angles, values2, <span class="string">'o-'</span>, linewidth=<span class="number">2</span>, label = <span class="string">'活动后'</span>)</span><br><span class="line">ax.fill(angles, values2, alpha=<span class="number">0.25</span>)</span><br><span class="line"><span class="comment"># labels</span></span><br><span class="line">ax.set_thetagrids(angles * <span class="number">180</span>/np.pi, feature)</span><br><span class="line"><span class="comment"># y limits</span></span><br><span class="line">ax.set_ylim(<span class="number">0</span>,<span class="number">5</span>)</span><br><span class="line"><span class="comment"># title</span></span><br><span class="line">plt.title(<span class="string">'活动前后员工状态表现'</span>)</span><br><span class="line"><span class="comment"># grid</span></span><br><span class="line">ax.grid(<span class="literal">True</span>)</span><br><span class="line"><span class="comment"># show plot</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/output_84_0.png" data-fancybox="group" data-caption="png" class="fancybox"><img alt="png" data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/output_84_0.png" class="lazyload" title="png"></a></p><h1 id="interactive-widget-plot"><a href="#interactive-widget-plot" class="headerlink" title="interactive widget plot"></a>interactive widget plot</h1><h2 id="simple-example"><a href="#simple-example" class="headerlink" title="simple example"></a>simple example</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> ipywidgets <span class="keyword">as</span> wg</span><br><span class="line"><span class="keyword">from</span> IPython.display <span class="keyword">import</span> display</span><br><span class="line">%matplotlib inline</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">name = wg.Text(value=<span class="string">'Name'</span>)</span><br><span class="line">age = wg.IntSlider(description=<span class="string">"Age:"</span>)</span><br><span class="line">display(name,age)</span><br></pre></td></tr></table></figure></div><pre><code>Text(value=&#39;Name&#39;)IntSlider(value=0, description=&#39;Age:&#39;)</code></pre><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20200126150449.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20200126150449.png" class="lazyload" title></a></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a = wg.FloatText()</span><br><span class="line">b = wg.FloatSlider()</span><br><span class="line">display(a,b)</span><br><span class="line">mylink = wg.jslink((a,<span class="string">'value'</span>), (b,<span class="string">'value'</span>))</span><br></pre></td></tr></table></figure></div><pre><code>FloatText(value=0.0)FloatSlider(value=0.0)</code></pre><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20200126150625.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20200126150625.png" class="lazyload" title></a></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">%matplotlib inline</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">myPlot</span><span class="params">(c)</span>:</span></span><br><span class="line">    x = np.linspace(<span class="number">-5</span>,<span class="number">5</span>,<span class="number">20</span>)</span><br><span class="line">    y =c * x**<span class="number">2</span></span><br><span class="line">    plt.plot(x,y, <span class="string">'r--'</span>)</span><br><span class="line">    plt.ylabel(<span class="string">'y(x)'</span>)</span><br><span class="line">    plt.xlabel(<span class="string">'x'</span>)</span><br><span class="line">    plt.ylim([<span class="number">0</span>, <span class="number">80</span>])</span><br><span class="line">    plt.xlim([<span class="number">-5</span>, <span class="number">5</span>])</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">c_slide = wg.FloatSlider(value=<span class="number">1.0</span>, min=<span class="number">0</span>, max=<span class="number">3.0</span>, step=<span class="number">0.1</span>)</span><br><span class="line">wg.interact(myPlot, c=c_slide)</span><br></pre></td></tr></table></figure></div><pre><code>interactive(children=(FloatSlider(value=1.0, description=&#39;c&#39;, max=3.0), Output()), _dom_classes=(&#39;widget-inter…&lt;function __main__.myPlot(c)&gt;</code></pre><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20200126152723.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20200126152723.png" class="lazyload" title></a></p><h2 id="actual-data-example"><a href="#actual-data-example" class="headerlink" title="actual data example"></a>actual data example</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">titanic = pd.read_csv(<span class="string">'train.csv'</span>)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">titanic.describe()</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>PassengerId</th>      <th>Survived</th>      <th>Pclass</th>      <th>Age</th>      <th>SibSp</th>      <th>Parch</th>      <th>Fare</th>    </tr>  </thead>  <tbody>    <tr>      <th>count</th>      <td>891.000000</td>      <td>891.000000</td>      <td>891.000000</td>      <td>714.000000</td>      <td>891.000000</td>      <td>891.000000</td>      <td>891.000000</td>    </tr>    <tr>      <th>mean</th>      <td>446.000000</td>      <td>0.383838</td>      <td>2.308642</td>      <td>29.699118</td>      <td>0.523008</td>      <td>0.381594</td>      <td>32.204208</td>    </tr>    <tr>      <th>std</th>      <td>257.353842</td>      <td>0.486592</td>      <td>0.836071</td>      <td>14.526497</td>      <td>1.102743</td>      <td>0.806057</td>      <td>49.693429</td>    </tr>    <tr>      <th>min</th>      <td>1.000000</td>      <td>0.000000</td>      <td>1.000000</td>      <td>0.420000</td>      <td>0.000000</td>      <td>0.000000</td>      <td>0.000000</td>    </tr>    <tr>      <th>25%</th>      <td>223.500000</td>      <td>0.000000</td>      <td>2.000000</td>      <td>20.125000</td>      <td>0.000000</td>      <td>0.000000</td>      <td>7.910400</td>    </tr>    <tr>      <th>50%</th>      <td>446.000000</td>      <td>0.000000</td>      <td>3.000000</td>      <td>28.000000</td>      <td>0.000000</td>      <td>0.000000</td>      <td>14.454200</td>    </tr>    <tr>      <th>75%</th>      <td>668.500000</td>      <td>1.000000</td>      <td>3.000000</td>      <td>38.000000</td>      <td>1.000000</td>      <td>0.000000</td>      <td>31.000000</td>    </tr>    <tr>      <th>max</th>      <td>891.000000</td>      <td>1.000000</td>      <td>3.000000</td>      <td>80.000000</td>      <td>8.000000</td>      <td>6.000000</td>      <td>512.329200</td>    </tr>  </tbody></table></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">titanic.dropna(subset=[<span class="string">'Age'</span>], inplace=<span class="literal">True</span>)</span><br><span class="line">titanic.sort_values(<span class="string">"Age"</span>, inplace=<span class="literal">True</span>)</span><br><span class="line">titanic.head()</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>PassengerId</th>      <th>Survived</th>      <th>Pclass</th>      <th>Name</th>      <th>Sex</th>      <th>Age</th>      <th>SibSp</th>      <th>Parch</th>      <th>Ticket</th>      <th>Fare</th>      <th>Cabin</th>      <th>Embarked</th>    </tr>  </thead>  <tbody>    <tr>      <th>803</th>      <td>804</td>      <td>1</td>      <td>3</td>      <td>Thomas, Master. Assad Alexander</td>      <td>male</td>      <td>0.42</td>      <td>0</td>      <td>1</td>      <td>2625</td>      <td>8.5167</td>      <td>NaN</td>      <td>C</td>    </tr>    <tr>      <th>755</th>      <td>756</td>      <td>1</td>      <td>2</td>      <td>Hamalainen, Master. Viljo</td>      <td>male</td>      <td>0.67</td>      <td>1</td>      <td>1</td>      <td>250649</td>      <td>14.5000</td>      <td>NaN</td>      <td>S</td>    </tr>    <tr>      <th>644</th>      <td>645</td>      <td>1</td>      <td>3</td>      <td>Baclini, Miss. Eugenie</td>      <td>female</td>      <td>0.75</td>      <td>2</td>      <td>1</td>      <td>2666</td>      <td>19.2583</td>      <td>NaN</td>      <td>C</td>    </tr>    <tr>      <th>469</th>      <td>470</td>      <td>1</td>      <td>3</td>      <td>Baclini, Miss. Helene Barbara</td>      <td>female</td>      <td>0.75</td>      <td>2</td>      <td>1</td>      <td>2666</td>      <td>19.2583</td>      <td>NaN</td>      <td>C</td>    </tr>    <tr>      <th>78</th>      <td>79</td>      <td>1</td>      <td>2</td>      <td>Caldwell, Master. Alden Gates</td>      <td>male</td>      <td>0.83</td>      <td>0</td>      <td>2</td>      <td>248738</td>      <td>29.0000</td>      <td>NaN</td>      <td>S</td>    </tr>  </tbody></table></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">myPlot</span><span class="params">(index)</span>:</span></span><br><span class="line">    plt.scatter(<span class="number">0</span>, titanic.iloc[int(index),:].loc[<span class="string">"Pclass"</span>])</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">a = wg.FloatText()</span><br><span class="line">b = wg.FloatSlider()</span><br><span class="line">display(a,b)</span><br><span class="line">mylink = wg.jslink((a,<span class="string">'value'</span>), (b,<span class="string">'value'</span>))</span><br><span class="line">index_slide = wg.FloatSlider(value=<span class="number">0</span>, min=<span class="number">0</span>, max=len(titanic)<span class="number">-1</span>, step=<span class="number">1</span>)</span><br><span class="line">wg.interact(myPlot, index=index_slide)</span><br></pre></td></tr></table></figure></div><pre><code>FloatText(value=0.0)FloatSlider(value=0.0)interactive(children=(FloatSlider(value=0.0, description=&#39;index&#39;, max=713.0, step=1.0), Output()), _dom_classe…&lt;function __main__.myPlot(index)&gt;</code></pre><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20200126152744.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20200126152744.png" class="lazyload" title></a></p><p>widget_types can be found in:<br><a href="https://ipywidgets.readthedocs.io/en/latest/examples/Widget%20List.html" target="_blank" rel="external nofollow noopener noreferrer">widge types</a></p><h2 id="example-of-link-widgets-together"><a href="#example-of-link-widgets-together" class="headerlink" title="example of link widgets together"></a>example of link widgets together</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">play = wg.Play(</span><br><span class="line">    value=<span class="number">0</span>,</span><br><span class="line">    min=<span class="number">0</span>,</span><br><span class="line">    max=len(titanic)<span class="number">-1</span>,</span><br><span class="line">    step=<span class="number">1</span>,</span><br><span class="line">    interval=<span class="number">200</span>,</span><br><span class="line">    description=<span class="string">"Press play"</span>,</span><br><span class="line">    disabled=<span class="literal">False</span></span><br><span class="line">)</span><br><span class="line">slider = wg.FloatSlider(value=<span class="number">0</span>, min=<span class="number">0</span>, max=len(titanic)<span class="number">-1</span>, step=<span class="number">1</span>)</span><br><span class="line">text = wg.FloatText(</span><br><span class="line">    value=<span class="number">0</span>,</span><br><span class="line">    min=<span class="number">0</span>,</span><br><span class="line">    max=len(titanic)<span class="number">-1</span>,</span><br><span class="line">    step=<span class="number">1</span>,</span><br><span class="line">    description=<span class="string">'pClass'</span>,</span><br><span class="line">    disabled=<span class="literal">False</span></span><br><span class="line">)</span><br><span class="line">wg.jslink((play, <span class="string">'value'</span>), (text,<span class="string">'value'</span>))</span><br><span class="line">wg.jslink((play, <span class="string">'value'</span>), (slider,<span class="string">'value'</span>))</span><br><span class="line">ui1 = wg.HBox([play])</span><br><span class="line">ui2 = wg.HBox([slider])</span><br><span class="line">display(ui1)</span><br><span class="line">display(ui2)</span><br><span class="line">wg.interact(myPlot, index=text)</span><br></pre></td></tr></table></figure></div><pre><code>HBox(children=(Play(value=0, description=&#39;Press play&#39;, interval=200, max=713),))HBox(children=(FloatSlider(value=0.0, max=713.0, step=1.0),))interactive(children=(FloatText(value=0.0, description=&#39;pClass&#39;, step=1.0), Output()), _dom_classes=(&#39;widget-i…&lt;function __main__.myPlot(index)&gt;</code></pre><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20200126154515.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20200126154515.png" class="lazyload" title></a></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
          <category> kesci_notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> kesci </tag>
            
            <tag> matplotlib </tag>
            
            <tag> jupyter_widget </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>numpy 高级命令速查表</title>
      <link href="/2020/01/26/python/kesci_notes/numpy%E9%AB%98%E7%BA%A7%E5%91%BD%E4%BB%A4%E9%80%9F%E6%9F%A5%E8%A1%A8/"/>
      <url>/2020/01/26/python/kesci_notes/numpy%E9%AB%98%E7%BA%A7%E5%91%BD%E4%BB%A4%E9%80%9F%E6%9F%A5%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>此notebook复现以下链接.<br><a href="https://www.kesci.com/home/project/59f0380e18ec724555ac7e0b" target="_blank" rel="external nofollow noopener noreferrer">Numpy快速上手指南 —- 进阶篇</a></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> math</span><br></pre></td></tr></table></figure></div><h1 id="高级索引技巧"><a href="#高级索引技巧" class="headerlink" title="高级索引技巧"></a>高级索引技巧</h1><h2 id="一维数组索引"><a href="#一维数组索引" class="headerlink" title="一维数组索引"></a>一维数组索引</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a = np.arange(<span class="number">12</span>)**<span class="number">2</span></span><br><span class="line">i = np.array([<span class="number">1</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">8</span>,<span class="number">5</span>])</span><br><span class="line">a[i]</span><br></pre></td></tr></table></figure></div><pre><code>array([ 1,  1,  9, 64, 25], dtype=int32)</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">j = np.array( [ [ <span class="number">3</span>, <span class="number">4</span>], [ <span class="number">9</span>, <span class="number">7</span> ] ] )         <span class="comment"># a bidimensional array of indices</span></span><br><span class="line">a[j]</span><br></pre></td></tr></table></figure></div><pre><code>array([[ 9, 16],       [81, 49]], dtype=int32)</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">palette = np.array( [ [<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>],                <span class="comment"># 黑色</span></span><br><span class="line">                   [<span class="number">255</span>,<span class="number">0</span>,<span class="number">0</span>],              <span class="comment"># 红色</span></span><br><span class="line">                   [<span class="number">0</span>,<span class="number">255</span>,<span class="number">0</span>],              <span class="comment"># 绿色</span></span><br><span class="line">                   [<span class="number">0</span>,<span class="number">0</span>,<span class="number">255</span>],              <span class="comment"># 蓝色</span></span><br><span class="line">                   [<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>] ] )       <span class="comment"># 白色</span></span><br><span class="line">image = np.array( [ [ <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">0</span> ],           <span class="comment"># each value corresponds to a color in the palette</span></span><br><span class="line">                 [ <span class="number">0</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">0</span> ]  ] )</span><br><span class="line">palette[image]</span><br></pre></td></tr></table></figure></div><pre><code>array([[[  0,   0,   0],        [255,   0,   0],        [  0, 255,   0],        [  0,   0,   0]],       [[  0,   0,   0],        [  0,   0, 255],        [255, 255, 255],        [  0,   0,   0]]])</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a = np.arange(<span class="number">12</span>).reshape(<span class="number">3</span>,<span class="number">4</span>)</span><br><span class="line">a</span><br></pre></td></tr></table></figure></div><pre><code>array([[ 0,  1,  2,  3],       [ 4,  5,  6,  7],       [ 8,  9, 10, 11]])</code></pre><h2 id="多维数组索引"><a href="#多维数组索引" class="headerlink" title="多维数组索引"></a>多维数组索引</h2><p>多维的索引数组也是可以的.每一维的数组必须有相同的形状.</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">i = np.array( [ [<span class="number">0</span>,<span class="number">1</span>],                        <span class="comment"># indices for the first dim of a</span></span><br><span class="line">             [<span class="number">1</span>,<span class="number">2</span>] ] )</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">j = np.array( [ [<span class="number">2</span>,<span class="number">1</span>],                        <span class="comment"># indices for the second dim</span></span><br><span class="line">             [<span class="number">3</span>,<span class="number">3</span>] ] )</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a[i,j]</span><br></pre></td></tr></table></figure></div><pre><code>array([[ 2,  5],       [ 7, 11]])</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a[i,j] <span class="comment">#broadcast</span></span><br></pre></td></tr></table></figure></div><pre><code>array([[ 2,  5],       [ 7, 11]])</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a[:,j]</span><br></pre></td></tr></table></figure></div><pre><code>array([[[ 2,  1],        [ 3,  3]],       [[ 6,  5],        [ 7,  7]],       [[10,  9],        [11, 11]]])</code></pre><p>把i,j放在一个tuple里当成索引也可以</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">l = (i,j)</span><br><span class="line">a[l]</span><br></pre></td></tr></table></figure></div><pre><code>array([[ 2,  5],       [ 7, 11]])</code></pre><p>例子: 寻找多个数列的最大值</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">time = np.linspace(<span class="number">20</span>, <span class="number">145</span>, <span class="number">5</span>)                 <span class="comment"># time scale</span></span><br><span class="line">data = np.sin(np.arange(<span class="number">20</span>)).reshape(<span class="number">5</span>,<span class="number">4</span>)         <span class="comment"># 4 time-dependent series</span></span><br><span class="line">time</span><br></pre></td></tr></table></figure></div><pre><code>array([ 20.  ,  51.25,  82.5 , 113.75, 145.  ])</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data</span><br></pre></td></tr></table></figure></div><pre><code>array([[ 0.        ,  0.84147098,  0.90929743,  0.14112001],       [-0.7568025 , -0.95892427, -0.2794155 ,  0.6569866 ],       [ 0.98935825,  0.41211849, -0.54402111, -0.99999021],       [-0.53657292,  0.42016704,  0.99060736,  0.65028784],       [-0.28790332, -0.96139749, -0.75098725,  0.14987721]])</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ind = data.argmax(axis=<span class="number">0</span>)                   <span class="comment"># index of the maxima for each series</span></span><br><span class="line">ind</span><br></pre></td></tr></table></figure></div><pre><code>array([2, 0, 3, 1], dtype=int64)</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">data_max = data[ind, range(data.shape[<span class="number">1</span>])] <span class="comment"># =&gt; data[ind[0],0], data[ind[1],1]...</span></span><br><span class="line">data_max</span><br></pre></td></tr></table></figure></div><pre><code>array([0.98935825, 0.84147098, 0.99060736, 0.6569866 ])</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.all(data_max == data.max(axis=<span class="number">0</span>))</span><br></pre></td></tr></table></figure></div><pre><code>True</code></pre><p>例子: 数组索引作为目标赋值</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a = np.arange(<span class="number">5</span>)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a</span><br></pre></td></tr></table></figure></div><pre><code>array([0, 1, 2, 3, 4])</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a[[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]] = <span class="number">0</span></span><br><span class="line">a</span><br></pre></td></tr></table></figure></div><pre><code>array([0, 0, 0, 0, 4])</code></pre><p>例子:当一个索引列表包含重复时，赋值被多次完成，保留最后的值</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a = np.arange(<span class="number">5</span>)</span><br><span class="line">a[[<span class="number">0</span>,<span class="number">0</span>,<span class="number">2</span>]]=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">a</span><br></pre></td></tr></table></figure></div><pre><code>array([2, 1, 3, 3, 4])</code></pre><h2 id="通过布尔数组索引"><a href="#通过布尔数组索引" class="headerlink" title="通过布尔数组索引"></a>通过布尔数组索引</h2><p>索引</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a = np.arange(<span class="number">12</span>).reshape(<span class="number">3</span>,<span class="number">4</span>)</span><br><span class="line">b = a &gt; <span class="number">4</span></span><br><span class="line">b       <span class="comment"># b is a boolean with a's shape</span></span><br></pre></td></tr></table></figure></div><pre><code>array([[False, False, False, False],       [False,  True,  True,  True],       [ True,  True,  True,  True]])</code></pre><p>赋值</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a[b] = <span class="number">0</span>    <span class="comment"># All elements of 'a' higher than 4 become 0</span></span><br><span class="line">a</span><br></pre></td></tr></table></figure></div><pre><code>array([[0, 1, 2, 3],       [4, 0, 0, 0],       [0, 0, 0, 0]])</code></pre><p>多维布尔数组索引</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a = np.arange(<span class="number">12</span>).reshape(<span class="number">3</span>,<span class="number">4</span>)</span><br><span class="line">a</span><br></pre></td></tr></table></figure></div><pre><code>array([[ 0,  1,  2,  3],       [ 4,  5,  6,  7],       [ 8,  9, 10, 11]])</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">b1 = np.array([<span class="literal">False</span>,<span class="literal">True</span>,<span class="literal">True</span>])</span><br><span class="line">b2 = np.array([<span class="literal">True</span>,<span class="literal">False</span>,<span class="literal">True</span>,<span class="literal">False</span>])</span><br><span class="line">a[b1,:]</span><br></pre></td></tr></table></figure></div><pre><code>array([[ 4,  5,  6,  7],       [ 8,  9, 10, 11]])</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a[b1]</span><br></pre></td></tr></table></figure></div><pre><code>array([[ 4,  5,  6,  7],       [ 8,  9, 10, 11]])</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a[:,b2]</span><br></pre></td></tr></table></figure></div><pre><code>array([[ 0,  2],       [ 4,  6],       [ 8, 10]])</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a[b1,b2]</span><br></pre></td></tr></table></figure></div><pre><code>array([ 4, 10])</code></pre><h2 id="np-ix-索引"><a href="#np-ix-索引" class="headerlink" title="np.ix_索引"></a>np.ix_索引</h2><p>np.ix_返回每一维相互组合的索引</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a = ap.arange(<span class="number">10</span>).reshape(<span class="number">2</span>, <span class="number">5</span>)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ixgrid = np.ix_([<span class="number">0</span>, <span class="number">1</span>], [<span class="number">2</span>, <span class="number">4</span>])</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a[ixgrid]</span><br></pre></td></tr></table></figure></div><pre><code>array([[2, 4],       [7, 9]])</code></pre><p>高级例子, 用np.ix_来计算所有元素组合的结果</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a = np.array([<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>])</span><br><span class="line">b = np.array([<span class="number">8</span>,<span class="number">5</span>,<span class="number">4</span>])</span><br><span class="line">c = np.array([<span class="number">5</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">3</span>])</span><br><span class="line">ax,bx,cx = np.ix_(a,b,c)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ax</span><br></pre></td></tr></table></figure></div><pre><code>array([[[2]],       [[3]],       [[4]],       [[5]]])</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bx</span><br></pre></td></tr></table></figure></div><pre><code>array([[[8],        [5],        [4]]])</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cx</span><br></pre></td></tr></table></figure></div><pre><code>array([[[5, 4, 6, 8, 3]]])</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ax.shape, bx.shape, cx.shape</span><br></pre></td></tr></table></figure></div><pre><code>((4, 1, 1), (1, 3, 1), (1, 1, 5))</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">result = ax + bx * cx</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">result</span><br></pre></td></tr></table></figure></div><pre><code>array([[[42, 34, 50, 66, 26],        [27, 22, 32, 42, 17],        [22, 18, 26, 34, 14]],       [[43, 35, 51, 67, 27],        [28, 23, 33, 43, 18],        [23, 19, 27, 35, 15]],       [[44, 36, 52, 68, 28],        [29, 24, 34, 44, 19],        [24, 20, 28, 36, 16]],       [[45, 37, 53, 69, 29],        [30, 25, 35, 45, 20],        [25, 21, 29, 37, 17]]])</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">result[<span class="number">3</span>, <span class="number">2</span>, <span class="number">4</span>]</span><br></pre></td></tr></table></figure></div><pre><code>17</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a[<span class="number">3</span>] + b[<span class="number">2</span>] * c[<span class="number">4</span>]</span><br></pre></td></tr></table></figure></div><pre><code>17</code></pre><h1 id="线性代数"><a href="#线性代数" class="headerlink" title="线性代数"></a>线性代数</h1><h2 id="运算"><a href="#运算" class="headerlink" title="运算"></a>运算</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a = np.array([[<span class="number">1.0</span>, <span class="number">2.0</span>], [<span class="number">3.0</span>, <span class="number">4.0</span>]])</span><br><span class="line"><span class="keyword">print</span> (a)</span><br></pre></td></tr></table></figure></div><pre><code>[[1. 2.] [3. 4.]]</code></pre><h3 id="转置"><a href="#转置" class="headerlink" title="转置"></a>转置</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a.transpose()</span><br></pre></td></tr></table></figure></div><pre><code>Object `solve` not found.</code></pre><h3 id="逆矩阵"><a href="#逆矩阵" class="headerlink" title="逆矩阵"></a>逆矩阵</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.linalg.inv(a)</span><br></pre></td></tr></table></figure></div><pre><code>array([[-2. ,  1. ],       [ 1.5, -0.5]])</code></pre><h3 id="单位对角矩阵"><a href="#单位对角矩阵" class="headerlink" title="单位对角矩阵"></a>单位对角矩阵</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.eye(<span class="number">2</span>)</span><br></pre></td></tr></table></figure></div><pre><code>array([[1., 0.],       [0., 1.]])</code></pre><h3 id="点积"><a href="#点积" class="headerlink" title="点积"></a>点积</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">j = np.array([[<span class="number">0.0</span>, <span class="number">-1.0</span>], [<span class="number">1.0</span>, <span class="number">0.0</span>]])</span><br><span class="line">np.dot(j, j) <span class="comment"># matrix product</span></span><br></pre></td></tr></table></figure></div><pre><code>array([[-1.,  0.],       [ 0., -1.]])</code></pre><h3 id="对角数据和"><a href="#对角数据和" class="headerlink" title="对角数据和"></a>对角数据和</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a = np.array([[<span class="number">1.0</span>, <span class="number">2.0</span>], [<span class="number">3.0</span>, <span class="number">4.0</span>]])</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.trace(a)</span><br></pre></td></tr></table></figure></div><pre><code>5.0</code></pre><h3 id="矩阵点乘方程求解"><a href="#矩阵点乘方程求解" class="headerlink" title="矩阵点乘方程求解"></a>矩阵点乘方程求解</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a = np.array([[<span class="number">1.0</span>, <span class="number">2.0</span>], [<span class="number">3.0</span>, <span class="number">4.0</span>]])</span><br><span class="line">y = np.array([[<span class="number">5.</span>], [<span class="number">7.</span>]])</span><br><span class="line">np.linalg.solve(a, y)</span><br></pre></td></tr></table></figure></div><pre><code>array([[-3.],       [ 4.]])</code></pre><p>1<em>(-3) + 2</em>4 = 3<em>(-3) + 4</em>4 = 7</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.dot(np.array([[<span class="number">1.0</span>, <span class="number">2.0</span>], [<span class="number">3.0</span>, <span class="number">4.0</span>]]), np.array([[<span class="number">-3.</span>], [ <span class="number">4.</span>]]))</span><br></pre></td></tr></table></figure></div><pre><code>array([[5.],       [7.]])</code></pre><h3 id="特征值和特征向量"><a href="#特征值和特征向量" class="headerlink" title="特征值和特征向量"></a>特征值和特征向量</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">j = np.array([[<span class="number">0.0</span>, <span class="number">-1.0</span>], [<span class="number">1.0</span>, <span class="number">0.0</span>]])</span><br><span class="line">np.linalg.eig(j)</span><br></pre></td></tr></table></figure></div><pre><code>(array([0.+1.j, 0.-1.j]), array([[0.70710678+0.j        , 0.70710678-0.j        ],        [0.        -0.70710678j, 0.        +0.70710678j]]))</code></pre><h1 id="矩阵"><a href="#矩阵" class="headerlink" title="矩阵"></a>矩阵</h1><p>略. 参考 <a href="https://www.kesci.com/home/project/59f0380e18ec724555ac7e0b" target="_blank" rel="external nofollow noopener noreferrer">Numpy快速上手指南 —- 进阶篇</a></p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
          <category> kesci_notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> numpy </tag>
            
            <tag> kesci </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>numpy 基础命令速查表</title>
      <link href="/2020/01/25/python/kesci_notes/numpy%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4%E9%80%9F%E6%9F%A5%E8%A1%A8/"/>
      <url>/2020/01/25/python/kesci_notes/numpy%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4%E9%80%9F%E6%9F%A5%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>此notebook素材来自kesci.com两个练习系列.</p><ul><li><a href="https://www.kesci.com/home/project/59ed832d18ec724555a9a968" target="_blank" rel="external nofollow noopener noreferrer">Numpy快速上手指南 —- 基础篇</a></li></ul><h1 id="数据大小"><a href="#数据大小" class="headerlink" title="数据大小"></a>数据大小</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><ul><li>axes: 轴</li><li>rank: 秩</li></ul><p>例如:<br>[[ 1., 0., 0.], [ 0., 1., 2.]] 的axes维度为2, 第一个维度rank2, 第二个维度rank3</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a = np.arange(<span class="number">15</span>).reshape(<span class="number">3</span>,<span class="number">5</span>)</span><br><span class="line">a</span><br></pre></td></tr></table></figure></div><pre><code>array([[ 0,  1,  2,  3,  4],       [ 5,  6,  7,  8,  9],       [10, 11, 12, 13, 14]])</code></pre><h2 id="查看维度-dimension"><a href="#查看维度-dimension" class="headerlink" title="查看维度(dimension)"></a>查看维度(dimension)</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a.shape</span><br></pre></td></tr></table></figure></div><pre><code>(3, 5)</code></pre><h2 id="查看多少个轴"><a href="#查看多少个轴" class="headerlink" title="查看多少个轴"></a>查看多少个轴</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a.ndim</span><br></pre></td></tr></table></figure></div><pre><code>2</code></pre><h2 id="查看数据类型"><a href="#查看数据类型" class="headerlink" title="查看数据类型"></a>查看数据类型</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a.dtype</span><br></pre></td></tr></table></figure></div><pre><code>dtype(&#39;int32&#39;)</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a.dtype.name</span><br></pre></td></tr></table></figure></div><pre><code>&#39;int32&#39;</code></pre><h2 id="每个元素的字节大小"><a href="#每个元素的字节大小" class="headerlink" title="每个元素的字节大小"></a>每个元素的字节大小</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a.itemsize</span><br></pre></td></tr></table></figure></div><pre><code>4</code></pre><h2 id="总个数"><a href="#总个数" class="headerlink" title="总个数"></a>总个数</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a.size</span><br></pre></td></tr></table></figure></div><pre><code>15</code></pre><h2 id="类型"><a href="#类型" class="headerlink" title="类型"></a>类型</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">type(a)</span><br></pre></td></tr></table></figure></div><pre><code>numpy.ndarray</code></pre><h1 id="数组创建"><a href="#数组创建" class="headerlink" title="数组创建"></a>数组创建</h1><h2 id="list创建"><a href="#list创建" class="headerlink" title="list创建"></a>list创建</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a = np.array([<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>])</span><br><span class="line">a</span><br></pre></td></tr></table></figure></div><pre><code>array([2, 3, 4])</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a.dtype</span><br></pre></td></tr></table></figure></div><pre><code>dtype(&#39;int32&#39;)</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a = np.array([(<span class="number">1.5</span>,<span class="number">2</span>,<span class="number">3</span>),(<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>)])</span><br><span class="line">a</span><br></pre></td></tr></table></figure></div><pre><code>array([[1.5, 2. , 3. ],       [4. , 5. , 6. ]])</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a.dtype</span><br></pre></td></tr></table></figure></div><pre><code>dtype(&#39;float64&#39;)</code></pre><p><strong>指定数据类型</strong>创建</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a = np.array([[<span class="number">1</span>,<span class="number">2</span>],[<span class="number">3</span>,<span class="number">4</span>]], dtype=complex )</span><br><span class="line">a</span><br></pre></td></tr></table></figure></div><pre><code>array([[1.+0.j, 2.+0.j],       [3.+0.j, 4.+0.j]])</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a.dtype</span><br></pre></td></tr></table></figure></div><pre><code>dtype(&#39;complex128&#39;)</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a.itemsize</span><br></pre></td></tr></table></figure></div><pre><code>16</code></pre><h1 id="内置函数创建"><a href="#内置函数创建" class="headerlink" title="内置函数创建"></a>内置函数创建</h1><p>通常，数组的元素开始都是未知的，但是它的大小已知。因此，Numpy提供了一些使用占位符创建数组的函数。这最小化了扩展数组的需要和高昂的运算代价。</p><h2 id="全0数组"><a href="#全0数组" class="headerlink" title="全0数组"></a>全0数组</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.zeros((<span class="number">3</span>,<span class="number">4</span>),dtype=np.float64)</span><br></pre></td></tr></table></figure></div><pre><code>array([[0., 0., 0., 0.],       [0., 0., 0., 0.],       [0., 0., 0., 0.]])</code></pre><p>按变量shape创建</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a = np.array([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>])</span><br><span class="line">a</span><br></pre></td></tr></table></figure></div><pre><code>array([1, 2, 3])</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.zeros_like(a)</span><br></pre></td></tr></table></figure></div><pre><code>array([0, 0, 0])</code></pre><h2 id="全1数组"><a href="#全1数组" class="headerlink" title="全1数组"></a>全1数组</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.ones((<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>), dtype=np.int16)</span><br></pre></td></tr></table></figure></div><pre><code>array([[[1, 1, 1, 1],        [1, 1, 1, 1],        [1, 1, 1, 1]],       [[1, 1, 1, 1],        [1, 1, 1, 1],        [1, 1, 1, 1]]], dtype=int16)</code></pre><p>按变量shape创建</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a = np.array([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>])</span><br><span class="line">a</span><br></pre></td></tr></table></figure></div><pre><code>array([1, 2, 3])</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.ones_like(a)</span><br></pre></td></tr></table></figure></div><pre><code>array([1, 1, 1])</code></pre><h2 id="空数组"><a href="#空数组" class="headerlink" title="空数组"></a>空数组</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.empty((<span class="number">2</span>,<span class="number">5</span>))</span><br></pre></td></tr></table></figure></div><pre><code>array([[1.37700972e-311, 2.32210854e-322, 0.00000000e+000,        0.00000000e+000, 0.00000000e+000],       [1.16095484e-028, 7.52736939e+252, 2.09570572e-110,        2.91237123e+257, 4.71294503e+257]])</code></pre><h2 id="单位对角矩阵"><a href="#单位对角矩阵" class="headerlink" title="单位对角矩阵"></a>单位对角矩阵</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.eye(<span class="number">3</span>)</span><br></pre></td></tr></table></figure></div><pre><code>array([[ 1.,  0.,  0.],       [ 0.,  1.,  0.],       [ 0.,  0.,  1.]])</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.identity(<span class="number">3</span>)</span><br></pre></td></tr></table></figure></div><pre><code>array([[ 1.,  0.,  0.],       [ 0.,  1.,  0.],       [ 0.,  0.,  1.]])</code></pre><h2 id="等间隔数列"><a href="#等间隔数列" class="headerlink" title="等间隔数列"></a>等间隔数列</h2><p>aranga定义间隔大小</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.arange(<span class="number">10</span>,<span class="number">30</span>,<span class="number">5</span>)</span><br></pre></td></tr></table></figure></div><pre><code>array([10, 15, 20, 25])</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.arange(<span class="number">0</span>,<span class="number">2</span>,<span class="number">0.3</span>)</span><br></pre></td></tr></table></figure></div><pre><code>array([0. , 0.3, 0.6, 0.9, 1.2, 1.5, 1.8])</code></pre><p>linspace定义总共多少间隔</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.linspace(<span class="number">0</span>,<span class="number">2</span>,<span class="number">5</span>)</span><br></pre></td></tr></table></figure></div><pre><code>array([0. , 0.5, 1. , 1.5, 2. ])</code></pre><h2 id="随机数"><a href="#随机数" class="headerlink" title="随机数"></a>随机数</h2><p>纯随机</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.random.rand(<span class="number">2</span>,<span class="number">3</span>)</span><br></pre></td></tr></table></figure></div><pre><code>array([[0.80722577, 0.64305952, 0.22218733],       [0.32297689, 0.46138349, 0.18416854]])</code></pre><p>标准正态分布随机</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.random.randn(<span class="number">2</span>,<span class="number">3</span>)</span><br></pre></td></tr></table></figure></div><pre><code>array([[ 2.65856467,  1.35871691, -0.13102211],       [ 0.212424  , -0.87073905,  0.83563459]])</code></pre><p>一般正态分布随机</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.random.normal(loc=<span class="number">1</span>,scale=<span class="number">0.5</span>,size=(<span class="number">2</span>,<span class="number">3</span>))</span><br></pre></td></tr></table></figure></div><pre><code>array([[0.52176134, 1.02691187, 1.37880997],       [1.19657311, 1.31502553, 0.38417858]])</code></pre><p>自定义离散总体及样本概率分布的随机</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">aa_milne_arr = [<span class="string">'pooh'</span>, <span class="string">'rabbit'</span>, <span class="string">'piglet'</span>, <span class="string">'Christopher'</span>]</span><br><span class="line">np.random.choice(aa_milne_arr, <span class="number">5</span>, p=[<span class="number">0.5</span>, <span class="number">0.1</span>, <span class="number">0.1</span>, <span class="number">0.3</span>])</span><br></pre></td></tr></table></figure></div><pre><code>array([&#39;pooh&#39;, &#39;pooh&#39;, &#39;pooh&#39;, &#39;Christopher&#39;, &#39;Christopher&#39;], dtype=&#39;&lt;U11&#39;)</code></pre><p>整数随机</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.random.randint(low=<span class="number">-2</span>,high=<span class="number">10</span>,size=<span class="number">10</span>)</span><br></pre></td></tr></table></figure></div><pre><code>array([0, 5, 8, 0, 9, 7, 3, 5, 2, 2])</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a.min()</span><br></pre></td></tr></table></figure></div><pre><code>0</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a.max()</span><br></pre></td></tr></table></figure></div><pre><code>5</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a.sum()</span><br></pre></td></tr></table></figure></div><pre><code>15</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a.cumsum()</span><br></pre></td></tr></table></figure></div><pre><code>array([ 0,  1,  3,  6, 10, 15], dtype=int32)</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a.std(ddof=<span class="number">1</span>)</span><br></pre></td></tr></table></figure></div><pre><code>1.8708286933869707</code></pre><h1 id="通用函数"><a href="#通用函数" class="headerlink" title="通用函数"></a>通用函数</h1><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a = np.arange(<span class="number">3</span>)</span><br></pre></td></tr></table></figure></div><h2 id="计算"><a href="#计算" class="headerlink" title="计算"></a>计算</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.exp(a)</span><br></pre></td></tr></table></figure></div><pre><code>array([ 1.        ,  2.71828183,  7.3890561 ])</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.sqrt(a)</span><br></pre></td></tr></table></figure></div><pre><code>array([ 0.        ,  1.        ,  1.41421356])</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c = np.array([<span class="number">2.</span>, <span class="number">-1.</span>, <span class="number">4.</span>])</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.add(a,c)</span><br></pre></td></tr></table></figure></div><pre><code>array([ 2.,  0.,  6.])</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a+c</span><br></pre></td></tr></table></figure></div><pre><code>array([ 2.,  0.,  6.])</code></pre><p>共轭</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.conjugate(<span class="number">1</span>+<span class="number">2j</span>)</span><br></pre></td></tr></table></figure></div><pre><code>(1-2j)</code></pre><p>数组每两个数的差</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x = np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">7</span>, <span class="number">0</span>])</span><br><span class="line">np.diff(x)</span><br></pre></td></tr></table></figure></div><pre><code>array([ 1,  2,  3, -7])</code></pre><p>叉积</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a=np.array([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>])</span><br><span class="line">b=np.array([<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>])</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.cross(a,b)</span><br></pre></td></tr></table></figure></div><pre><code>array([-1,  2, -1])</code></pre><p>元素积</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a*b</span><br></pre></td></tr></table></figure></div><pre><code>array([ 2,  6, 12])</code></pre><p>点积</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.dot(a,b)</span><br></pre></td></tr></table></figure></div><pre><code>20</code></pre><p>内积</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.inner(a,b)</span><br></pre></td></tr></table></figure></div><pre><code>20</code></pre><p>外积</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.outer(a,b)</span><br></pre></td></tr></table></figure></div><pre><code>array([[ 2,  3,  4],       [ 4,  6,  8],       [ 6,  9, 12]])</code></pre><h2 id="检查元素"><a href="#检查元素" class="headerlink" title="检查元素"></a>检查元素</h2><p>是否所有元素等于true</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a = np.array([<span class="literal">True</span>, <span class="literal">False</span>, <span class="literal">True</span>])</span><br><span class="line">np.all(a)</span><br></pre></td></tr></table></figure></div><pre><code>False</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.alltrue(a)</span><br></pre></td></tr></table></figure></div><pre><code>False</code></pre><p>是否有至少一个元素等于true</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.any(a)</span><br></pre></td></tr></table></figure></div><pre><code>True</code></pre><p>按照条件寻找坐标</p><p>np.where的理解可参考：<br><a href="https://www.zhihu.com/question/62844162" target="_blank" rel="external nofollow noopener noreferrer">https://www.zhihu.com/question/62844162</a></p><p>1维的情况</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a=np.array([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>])</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.where(a&gt;<span class="number">1</span>)</span><br></pre></td></tr></table></figure></div><pre><code>(array([1, 2], dtype=int64),)</code></pre><p>多维的情况</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x = np.arange(<span class="number">9.</span>).reshape(<span class="number">3</span>, <span class="number">3</span>)</span><br><span class="line">x</span><br></pre></td></tr></table></figure></div><pre><code>array([[ 0.,  1.,  2.],       [ 3.,  4.,  5.],       [ 6.,  7.,  8.]])</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.where( x &gt; <span class="number">5.0</span>)</span><br></pre></td></tr></table></figure></div><pre><code>(array([2, 2, 2], dtype=int64), array([0, 1, 2], dtype=int64))</code></pre><p>俩个数组第一个是横坐标，第二个是纵坐标</p><h2 id="自定义函数"><a href="#自定义函数" class="headerlink" title="自定义函数"></a>自定义函数</h2><p>单数组内的函数</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">myfunc</span><span class="params">(b)</span>:</span></span><br><span class="line">    <span class="keyword">return</span>(b[<span class="number">0</span>] + b[<span class="number">1</span>])</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a=np.array([[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]])</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.apply_along_axis(myfunc,<span class="number">1</span>,a)</span><br></pre></td></tr></table></figure></div><pre><code>array([3, 9])</code></pre><p>多数组函数</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">myfunc</span><span class="params">(a, b)</span>:</span></span><br><span class="line">    <span class="string">"Return a-b if a&gt;b, otherwise return a+b"</span></span><br><span class="line">    <span class="keyword">if</span> a &gt; b:</span><br><span class="line">        <span class="keyword">return</span> a - b</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> a + b</span><br><span class="line"></span><br><span class="line">vfunc = np.vectorize(myfunc)</span><br><span class="line">vfunc([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>], <span class="number">2</span>)</span><br></pre></td></tr></table></figure></div><pre><code>array([3, 4, 1, 2])</code></pre><h2 id="最大最小值"><a href="#最大最小值" class="headerlink" title="最大最小值"></a>最大最小值</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a=np.array([<span class="number">3</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">6</span>])</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.argmax(a)</span><br></pre></td></tr></table></figure></div><pre><code>5</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.argmin(a)</span><br></pre></td></tr></table></figure></div><pre><code>1</code></pre><h2 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a=np.array([<span class="number">3</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">6</span>])</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.sort(a)</span><br></pre></td></tr></table></figure></div><pre><code>array([1, 2, 3, 4, 5, 6])</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.argsort(a)</span><br></pre></td></tr></table></figure></div><pre><code>array([1, 2, 0, 4, 3, 5], dtype=int64)</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">surnames =    (<span class="string">'Hertz'</span>,    <span class="string">'Galilei'</span>, <span class="string">'Hertz'</span>)</span><br><span class="line">first_names = (<span class="string">'Heinrich'</span>, <span class="string">'Galileo'</span>, <span class="string">'Gustav'</span>)</span><br><span class="line">ind = np.lexsort((first_names, surnames))</span><br><span class="line">ind</span><br></pre></td></tr></table></figure></div><pre><code>array([1, 2, 0], dtype=int64)</code></pre><p>组合排序</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a = [<span class="number">1</span>,<span class="number">5</span>,<span class="number">1</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">4</span>] <span class="comment"># First column</span></span><br><span class="line">b = [<span class="number">9</span>,<span class="number">4</span>,<span class="number">0</span>,<span class="number">4</span>,<span class="number">0</span>,<span class="number">2</span>,<span class="number">1</span>] <span class="comment"># Second column</span></span><br><span class="line">ind = np.lexsort((b,a)) <span class="comment"># Sort by a, then by b</span></span><br><span class="line">print(ind)</span><br></pre></td></tr></table></figure></div><pre><code>[2 0 4 6 5 3 1]</code></pre><p>返回插入点</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.searchsorted([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>], <span class="number">3</span>)</span><br></pre></td></tr></table></figure></div><pre><code>2</code></pre><h2 id="求和求积"><a href="#求和求积" class="headerlink" title="求和求积"></a>求和求积</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a=np.arange(<span class="number">1</span>,<span class="number">5</span>)</span><br><span class="line">a</span><br></pre></td></tr></table></figure></div><pre><code>array([1, 2, 3, 4])</code></pre><p>累加乘积</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.cumprod(a)</span><br></pre></td></tr></table></figure></div><pre><code>array([ 1,  2,  6, 24], dtype=int32)</code></pre><p>累加求和</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.cumsum(a)</span><br></pre></td></tr></table></figure></div><pre><code>array([ 1,  3,  6, 10], dtype=int32)</code></pre><p>所有元素乘积</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.prod(a)</span><br></pre></td></tr></table></figure></div><pre><code>24</code></pre><p>对角线求和</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a=np.eye(<span class="number">3</span>)</span><br><span class="line">a</span><br></pre></td></tr></table></figure></div><pre><code>array([[ 1.,  0.,  0.],       [ 0.,  1.,  0.],       [ 0.,  0.,  1.]])</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.trace(a)</span><br></pre></td></tr></table></figure></div><pre><code>3.0</code></pre><h2 id="描述统计"><a href="#描述统计" class="headerlink" title="描述统计"></a>描述统计</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a=np.array([<span class="number">3</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">6</span>])</span><br><span class="line">a</span><br></pre></td></tr></table></figure></div><pre><code>array([3, 1, 2, 5, 4, 6])</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.max(a)</span><br></pre></td></tr></table></figure></div><pre><code>6</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.min(a)</span><br></pre></td></tr></table></figure></div><pre><code>1</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.mean(a)</span><br></pre></td></tr></table></figure></div><pre><code>3.5</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.median(a)</span><br></pre></td></tr></table></figure></div><pre><code>3.5</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.std(a, ddof=<span class="number">1</span>)</span><br></pre></td></tr></table></figure></div><pre><code>1.8708286933869707</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.var(a, ddof=<span class="number">1</span>)</span><br></pre></td></tr></table></figure></div><pre><code>3.5</code></pre><p>非零数据位置</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.nonzero(a)</span><br></pre></td></tr></table></figure></div><pre><code>(array([0, 1, 2, 3, 4, 5], dtype=int64),)</code></pre><p>整数数字统计</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.bincount(a)</span><br></pre></td></tr></table></figure></div><pre><code>array([0, 1, 1, 1, 1, 1, 1], dtype=int64)</code></pre><h2 id="四舍五入"><a href="#四舍五入" class="headerlink" title="四舍五入"></a>四舍五入</h2><p>向上取整</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a = np.array([<span class="number">0.1</span>, <span class="number">-0.5</span>, <span class="number">1.8</span>])</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.ceil(a)</span><br></pre></td></tr></table></figure></div><pre><code>array([ 1., -0.,  2.])</code></pre><p>向下取整</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.floor(a)</span><br></pre></td></tr></table></figure></div><pre><code>array([ 0., -1.,  1.])</code></pre><p>四舍五入</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.round(a)</span><br></pre></td></tr></table></figure></div><pre><code>array([ 0., -0.,  2.])</code></pre><p>限制数字范围</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.clip(a, <span class="number">0</span>, <span class="number">1.5</span>)</span><br></pre></td></tr></table></figure></div><pre><code>array([ 0.1,  0. ,  1.5])</code></pre><h2 id="相关性"><a href="#相关性" class="headerlink" title="相关性"></a>相关性</h2><p>pearson相关系数</p><script type="math/tex; mode=display">R_{ij} = \frac{ C_{ij} } { \sqrt{ C_{ii} * C_{jj} } }</script><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a=np.array([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>])</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">b=np.array([<span class="number">1.1</span>,<span class="number">2</span>,<span class="number">3.5</span>,<span class="number">4</span>])</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.corrcoef(a,b)</span><br></pre></td></tr></table></figure></div><pre><code>array([[ 1.        ,  0.98423325],       [ 0.98423325,  1.        ]])</code></pre><p>协方差矩阵</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.cov(a, b)</span><br></pre></td></tr></table></figure></div><pre><code>array([[ 1.66666667,  1.7       ],       [ 1.7       ,  1.79      ]])</code></pre><h2 id="矩阵操作"><a href="#矩阵操作" class="headerlink" title="矩阵操作"></a>矩阵操作</h2><p>转置</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x = np.arange(<span class="number">4</span>).reshape((<span class="number">2</span>,<span class="number">2</span>))</span><br><span class="line">x</span><br></pre></td></tr></table></figure></div><pre><code>array([[0, 1],       [2, 3]])</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.transpose(x)</span><br></pre></td></tr></table></figure></div><pre><code>array([[0, 2],       [1, 3]])</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mypolyval</span><span class="params">(p, x)</span>:</span></span><br><span class="line"><span class="meta">... </span>    print(p)</span><br><span class="line"><span class="meta">... </span>    _p = list(p)</span><br><span class="line"><span class="meta">... </span>    res = _p.pop(<span class="number">0</span>)</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">while</span> _p:</span><br><span class="line"><span class="meta">... </span>        res = res*x + _p.pop(<span class="number">0</span>)</span><br><span class="line"><span class="meta">... </span>    print(res)</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">return</span> res</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>vpolyval = np.vectorize(mypolyval, excluded=[<span class="string">'p'</span>])</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vpolyval(p=[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], x=[<span class="number">0</span>, <span class="number">1</span>])</span><br><span class="line">np.array([<span class="number">3</span>, <span class="number">6</span>])</span><br></pre></td></tr></table></figure></div><pre><code>[1, 2, 3]3[1, 2, 3]3[1, 2, 3]6array([3, 6])</code></pre><h2 id="mask"><a href="#mask" class="headerlink" title="mask"></a>mask</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a = np.arange(<span class="number">5</span>)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">np.putmask(a, a&gt;<span class="number">1</span>, a**<span class="number">2</span>)</span><br><span class="line">a</span><br></pre></td></tr></table></figure></div><pre><code>array([ 0,  1,  4,  9, 16])</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a = np.arange(<span class="number">5</span>)</span><br><span class="line">np.putmask(a, a&gt;<span class="number">1</span>, [<span class="number">88</span>,<span class="number">99</span>,<span class="number">33</span>])</span><br><span class="line">a</span><br></pre></td></tr></table></figure></div><pre><code>array([ 0,  1, 33, 88, 99])</code></pre><h1 id="索引，切片和迭代"><a href="#索引，切片和迭代" class="headerlink" title="索引，切片和迭代"></a>索引，切片和迭代</h1><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a = np.arange(<span class="number">10</span>)**<span class="number">3</span></span><br><span class="line">a</span><br></pre></td></tr></table></figure></div><pre><code>array([  0,   1,   8,  27,  64, 125, 216, 343, 512, 729], dtype=int32)</code></pre><h2 id="索引和切片"><a href="#索引和切片" class="headerlink" title="索引和切片"></a>索引和切片</h2><p>等间距索引</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a[:<span class="number">6</span>:<span class="number">2</span>] = <span class="number">-1000</span>  <span class="comment"># equivalent to a[0:6:2] = -1000; </span></span><br><span class="line">a                <span class="comment"># from start to position 6, exclusive, set every 2nd element to -1000</span></span><br></pre></td></tr></table></figure></div><pre><code>array([-1000,     1, -1000,    27, -1000,   125,   216,   343,   512,   729], dtype=int32)</code></pre><p>反向数组</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a[ : :<span class="number">-1</span>]</span><br></pre></td></tr></table></figure></div><pre><code>array([  729,   512,   343,   216,   125, -1000,    27, -1000,     1, -1000], dtype=int32)</code></pre><p>多维数组索引</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span><span class="params">(x,y)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">10</span>*x+y</span><br><span class="line">b = np.fromfunction(f,(<span class="number">5</span>,<span class="number">4</span>),dtype=int)</span><br><span class="line">b</span><br></pre></td></tr></table></figure></div><pre><code>array([[ 0,  1,  2,  3],       [10, 11, 12, 13],       [20, 21, 22, 23],       [30, 31, 32, 33],       [40, 41, 42, 43]])</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">b[<span class="number">2</span>,<span class="number">3</span>]</span><br></pre></td></tr></table></figure></div><pre><code>23</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">b[<span class="number">0</span>:<span class="number">5</span>, <span class="number">1</span>] <span class="comment"># each row in the second column of b</span></span><br></pre></td></tr></table></figure></div><pre><code>array([ 1, 11, 21, 31, 41])</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">b[ : ,<span class="number">1</span>]   <span class="comment"># equivalent to the previous example</span></span><br></pre></td></tr></table></figure></div><pre><code>array([ 1, 11, 21, 31, 41])</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">b[<span class="number">1</span>:<span class="number">3</span>, : ]  <span class="comment"># each column in the second and third row of b</span></span><br></pre></td></tr></table></figure></div><pre><code>array([[10, 11, 12, 13],       [20, 21, 22, 23]])</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">b[<span class="number">-1</span>]  <span class="comment"># the last row. Equivalent to b[-1,:]</span></span><br></pre></td></tr></table></figure></div><pre><code>array([40, 41, 42, 43])</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">b[<span class="number">-1</span>,...] <span class="comment"># the last row. Equivalent to b[-1,:]</span></span><br></pre></td></tr></table></figure></div><pre><code>array([40, 41, 42, 43])</code></pre><p>高维切片</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a = np.array([[<span class="number">1</span>, <span class="number">2</span>], [<span class="number">3</span>, <span class="number">4</span>], [<span class="number">5</span>, <span class="number">6</span>]])</span><br><span class="line">a</span><br></pre></td></tr></table></figure></div><pre><code>array([[1, 2],       [3, 4],       [5, 6]])</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.compress([<span class="number">0</span>, <span class="number">1</span>], a, axis=<span class="number">0</span>)</span><br></pre></td></tr></table></figure></div><pre><code>array([[3, 4]])</code></pre><h2 id="迭代"><a href="#迭代" class="headerlink" title="迭代"></a>迭代</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span><span class="params">(x,y)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">10</span>*x+y</span><br><span class="line">b = np.fromfunction(f,(<span class="number">5</span>,<span class="number">4</span>),dtype=int)</span><br><span class="line">b</span><br></pre></td></tr></table></figure></div><pre><code>array([[ 0,  1,  2,  3],       [10, 11, 12, 13],       [20, 21, 22, 23],       [30, 31, 32, 33],       [40, 41, 42, 43]])</code></pre><p>第一个轴迭代</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> row <span class="keyword">in</span> b:</span><br><span class="line">    <span class="keyword">print</span> (row)</span><br></pre></td></tr></table></figure></div><pre><code>[0 1 2 3][10 11 12 13][20 21 22 23][30 31 32 33][40 41 42 43]</code></pre><p>每一个元素迭代</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> element <span class="keyword">in</span> b.flat:</span><br><span class="line">    <span class="keyword">print</span> (element,end=<span class="string">","</span>)</span><br></pre></td></tr></table></figure></div><pre><code>0,1,2,3,10,11,12,13,20,21,22,23,30,31,32,33,40,41,42,43,</code></pre><p>enumerate 迭代</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> index, x <span class="keyword">in</span> np.ndenumerate(b):</span><br><span class="line">    print(index, x)</span><br></pre></td></tr></table></figure></div><pre><code>(0, 0) 0(0, 1) 1(0, 2) 2(0, 3) 3(1, 0) 10(1, 1) 11(1, 2) 12(1, 3) 13(2, 0) 20(2, 1) 21(2, 2) 22(2, 3) 23(3, 0) 30(3, 1) 31(3, 2) 32(3, 3) 33(4, 0) 40(4, 1) 41(4, 2) 42(4, 3) 43</code></pre><h2 id="增加轴"><a href="#增加轴" class="headerlink" title="增加轴"></a>增加轴</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.newaxis == <span class="literal">None</span></span><br></pre></td></tr></table></figure></div><pre><code>True</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x = np.arange(<span class="number">3</span>)</span><br><span class="line">x</span><br></pre></td></tr></table></figure></div><pre><code>array([0, 1, 2])</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x[:, np.newaxis]</span><br></pre></td></tr></table></figure></div><pre><code>array([[0],       [1],       [2]])</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x[:, <span class="literal">None</span>]</span><br></pre></td></tr></table></figure></div><pre><code>array([[0],       [1],       [2]])</code></pre><h2 id="查看索引"><a href="#查看索引" class="headerlink" title="查看索引"></a>查看索引</h2><p>很方便的函数，可以查看一个指定shape的数组的每一个元素的index</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grid = np.indices((<span class="number">2</span>, <span class="number">3</span>))</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grid</span><br></pre></td></tr></table></figure></div><pre><code>array([[[0, 0, 0],        [1, 1, 1]],       [[0, 1, 2],        [0, 1, 2]]])</code></pre><h1 id="形状操作"><a href="#形状操作" class="headerlink" title="形状操作"></a>形状操作</h1><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a = np.floor(<span class="number">10</span>*np.random.random((<span class="number">3</span>,<span class="number">4</span>)))</span><br><span class="line">a</span><br></pre></td></tr></table></figure></div><pre><code>array([[ 5.,  3.,  6.,  7.],       [ 5.,  5.,  2.,  8.],       [ 1.,  4.,  7.,  6.]])</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a.shape</span><br></pre></td></tr></table></figure></div><pre><code>(3, 4)</code></pre><h2 id="平坦化"><a href="#平坦化" class="headerlink" title="平坦化"></a>平坦化</h2><p>由ravel()展平的数组元素的顺序通常是 C风格 的，就是说，最右边的索引变化得最快，所以元素a[0,0]之后是a[0,1]。如果数组被改变形状(reshape)成其它形状，数组仍然是 C风格 的。Numpy通常创建一个以这个顺序保存数据的数组，所以ravel()将总是不需要复制它的参数。但是如果数组是通过切片其它数组或有不同寻常的选项时，它可能需要被复制。函数reshape()和ravel()还可以被同过一些可选参数构建成 FORTRAN风格 的数组，即最左边的索引变化最快</p><p>ravel可以按不同方式展开，可选</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a.ravel()</span><br></pre></td></tr></table></figure></div><pre><code>array([ 5.,  3.,  6.,  7.,  5.,  5.,  2.,  8.,  1.,  4.,  7.,  6.])</code></pre><p>flatten只能是按row展开</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a.flatten()</span><br></pre></td></tr></table></figure></div><pre><code>array([ 5.,  3.,  6.,  7.,  5.,  5.,  2.,  8.,  1.,  4.,  7.,  6.])</code></pre><p>a.flat 是一个iterator</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> b <span class="keyword">in</span> a.flat:</span><br><span class="line">    print(b)</span><br></pre></td></tr></table></figure></div><pre><code>5.03.06.07.05.05.02.08.01.04.07.06.0</code></pre><p>np.reshape也可以完成同样的任务</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.reshape(a, (<span class="number">1</span>, <span class="number">12</span>)).squeeze()</span><br></pre></td></tr></table></figure></div><pre><code>array([ 5.,  3.,  6.,  7.,  5.,  5.,  2.,  8.,  1.,  4.,  7.,  6.])</code></pre><h2 id="转置"><a href="#转置" class="headerlink" title="转置"></a>转置</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a.transpose()</span><br></pre></td></tr></table></figure></div><pre><code>array([[ 5.,  5.,  1.],       [ 3.,  5.,  4.],       [ 6.,  2.,  7.],       [ 7.,  8.,  6.]])</code></pre><h2 id="更改形状"><a href="#更改形状" class="headerlink" title="更改形状"></a>更改形状</h2><p>reshape和resize一样但是reshape不改变数组自身</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a.reshape(<span class="number">2</span>,<span class="number">6</span>)</span><br></pre></td></tr></table></figure></div><pre><code>array([[ 5.,  3.,  6.,  7.,  5.,  5.],       [ 2.,  8.,  1.,  4.,  7.,  6.]])</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a</span><br></pre></td></tr></table></figure></div><pre><code>array([[ 5.,  3.,  6.,  7.],       [ 5.,  5.,  2.,  8.],       [ 1.,  4.,  7.,  6.]])</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a.resize(<span class="number">2</span>,<span class="number">6</span>)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a</span><br></pre></td></tr></table></figure></div><pre><code>array([[ 5.,  3.,  6.,  7.,  5.,  5.],       [ 2.,  8.,  1.,  4.,  7.,  6.]])</code></pre><p>数组组合(stack)</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a = np.floor(<span class="number">10</span>*np.random.random((<span class="number">2</span>,<span class="number">2</span>)))</span><br><span class="line">a</span><br></pre></td></tr></table></figure></div><pre><code>array([[ 2.,  5.],       [ 5.,  8.]])</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">b = np.floor(<span class="number">10</span>*np.random.random((<span class="number">2</span>,<span class="number">2</span>)))</span><br><span class="line">b</span><br></pre></td></tr></table></figure></div><pre><code>array([[ 5.,  2.],       [ 0.,  0.]])</code></pre><h2 id="组合"><a href="#组合" class="headerlink" title="组合"></a>组合</h2><p>纵向组合 vertical stack</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.vstack((a,b))</span><br></pre></td></tr></table></figure></div><pre><code>array([[ 2.,  5.],       [ 5.,  8.],       [ 5.,  2.],       [ 0.,  0.]])</code></pre><p>横向组合 horizontal stack</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.hstack((a,b))</span><br></pre></td></tr></table></figure></div><pre><code>array([[ 2.,  5.,  5.,  2.],       [ 5.,  8.,  0.,  0.]])</code></pre><p>np.column_stack相当于vstack弱鸡版本，只能对一位数组用的vstack</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.column_stack((a,b))</span><br></pre></td></tr></table></figure></div><pre><code>array([[ 2.,  5.,  5.,  2.],       [ 5.,  8.,  0.,  0.]])</code></pre><h2 id="分割"><a href="#分割" class="headerlink" title="分割"></a>分割</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a = np.floor(<span class="number">10</span>*np.random.random((<span class="number">2</span>,<span class="number">12</span>)))</span><br><span class="line">a</span><br></pre></td></tr></table></figure></div><pre><code>array([[ 4.,  0.,  7.,  0.,  8.,  3.,  5.,  7.,  9.,  9.,  9.,  7.],       [ 8.,  1.,  0.,  0.,  7.,  4.,  5.,  8.,  5.,  6.,  9.,  7.]])</code></pre><p>纵向分割</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.hsplit(a ,<span class="number">3</span>)</span><br></pre></td></tr></table></figure></div><pre><code>[array([[ 4.,  0.,  7.,  0.],        [ 8.,  1.,  0.,  0.]]), array([[ 8.,  3.,  5.,  7.],        [ 7.,  4.,  5.,  8.]]), array([[ 9.,  9.,  9.,  7.],        [ 5.,  6.,  9.,  7.]])]</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.hsplit(a, (<span class="number">3</span>,<span class="number">4</span>))</span><br></pre></td></tr></table></figure></div><pre><code>[array([[ 4.,  0.,  7.],        [ 8.,  1.,  0.]]), array([[ 0.],        [ 0.]]), array([[ 8.,  3.,  5.,  7.,  9.,  9.,  9.,  7.],        [ 7.,  4.,  5.,  8.,  5.,  6.,  9.,  7.]])]</code></pre><p>任意轴分割</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.array_split(a, <span class="number">2</span>, axis=<span class="number">0</span>)</span><br></pre></td></tr></table></figure></div><pre><code>[array([[ 4.,  0.,  7.,  0.,  8.,  3.,  5.,  7.,  9.,  9.,  9.,  7.]]), array([[ 8.,  1.,  0.,  0.,  7.,  4.,  5.,  8.,  5.,  6.,  9.,  7.]])]</code></pre><h2 id="复制"><a href="#复制" class="headerlink" title="复制"></a>复制</h2><p>等号是相同数组</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a = np.arange(<span class="number">12</span>)</span><br><span class="line">b = a            <span class="comment"># no new object is created</span></span><br><span class="line">b <span class="keyword">is</span> a</span><br></pre></td></tr></table></figure></div><pre><code>True</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">b.shape = <span class="number">3</span>,<span class="number">4</span>    <span class="comment"># changes the shape of a</span></span><br><span class="line">a.shape</span><br></pre></td></tr></table></figure></div><pre><code>(3, 4)</code></pre><p>函数调用是相同数组</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="keyword">print</span> (id(x))</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id(a)</span><br></pre></td></tr></table></figure></div><pre><code>1997431125376</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">f(a)</span><br></pre></td></tr></table></figure></div><pre><code>1997431125376</code></pre><p>浅复制, 复制数据, 但是不复制其他属性</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c = a.view()</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c <span class="keyword">is</span> a</span><br></pre></td></tr></table></figure></div><pre><code>False</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c.base <span class="keyword">is</span> a</span><br></pre></td></tr></table></figure></div><pre><code>True</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c.flags.owndata</span><br></pre></td></tr></table></figure></div><pre><code>False</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">c.shape = <span class="number">2</span>,<span class="number">6</span>                      <span class="comment"># a's shape doesn't change</span></span><br><span class="line">a.shape</span><br></pre></td></tr></table></figure></div><pre><code>(3, 4)</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">c[<span class="number">0</span>,<span class="number">4</span>] = <span class="number">1234</span>                      <span class="comment"># a's data changesa</span></span><br><span class="line">a</span><br></pre></td></tr></table></figure></div><pre><code>array([[   0,    1,    2,    3],       [1234,    5,    6,    7],       [   8,    9,   10,   11]])</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">s = a[ : , <span class="number">1</span>:<span class="number">3</span>]     <span class="comment"># spaces added for clarity; could also be written "s = a[:,1:3]"</span></span><br><span class="line">s[:] = <span class="number">10</span>           <span class="comment"># s[:] is a view of s. Note the difference between s=10 and s[:]=10</span></span><br><span class="line">a</span><br></pre></td></tr></table></figure></div><pre><code>array([[   0,   10,   10,    3],       [1234,   10,   10,    7],       [   8,   10,   10,   11]])</code></pre><p>深复制</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">d=a.copy()</span><br><span class="line">d <span class="keyword">is</span> a</span><br></pre></td></tr></table></figure></div><pre><code>False</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">d.base <span class="keyword">is</span> a</span><br></pre></td></tr></table></figure></div><pre><code>False</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">d[<span class="number">0</span>,<span class="number">0</span>] = <span class="number">9999</span></span><br><span class="line">a</span><br></pre></td></tr></table></figure></div><pre><code>array([[   0,   10,   10,    3],       [1234,   10,   10,    7],       [   8,   10,   10,   11]])</code></pre>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
          <category> kesci_notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> numpy </tag>
            
            <tag> kesci </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pandas 10套练习</title>
      <link href="/2020/01/15/python/kesci_notes/pandas10%E5%A5%97%E7%BB%83%E4%B9%A0/"/>
      <url>/2020/01/15/python/kesci_notes/pandas10%E5%A5%97%E7%BB%83%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>此练习来自kesci.com <br><br><a href="https://www.kesci.com/home/project/59e77a636d213335f38daec2" target="_blank" rel="external nofollow noopener noreferrer">这十套练习，教你如何使用Pandas做数据分析</a></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br></pre></td></tr></table></figure></div><h1 id="chipotle-快餐数据-基本操作"><a href="#chipotle-快餐数据-基本操作" class="headerlink" title="chipotle 快餐数据(基本操作)"></a>chipotle 快餐数据(基本操作)</h1><h2 id="看基本数据"><a href="#看基本数据" class="headerlink" title="看基本数据"></a>看基本数据</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chipo = pd.read_csv(<span class="string">"chipotle.tsv"</span>, sep=<span class="string">"\t"</span>)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chipo.head(<span class="number">10</span>)</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>order_id</th>      <th>quantity</th>      <th>item_name</th>      <th>choice_description</th>      <th>item_price</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>1</td>      <td>1</td>      <td>Chips and Fresh Tomato Salsa</td>      <td>NaN</td>      <td>$2.39</td>    </tr>    <tr>      <th>1</th>      <td>1</td>      <td>1</td>      <td>Izze</td>      <td>[Clementine]</td>      <td>$3.39</td>    </tr>    <tr>      <th>2</th>      <td>1</td>      <td>1</td>      <td>Nantucket Nectar</td>      <td>[Apple]</td>      <td>$3.39</td>    </tr>    <tr>      <th>3</th>      <td>1</td>      <td>1</td>      <td>Chips and Tomatillo-Green Chili Salsa</td>      <td>NaN</td>      <td>$2.39</td>    </tr>    <tr>      <th>4</th>      <td>2</td>      <td>2</td>      <td>Chicken Bowl</td>      <td>[Tomatillo-Red Chili Salsa (Hot), [Black Beans...</td>      <td>$16.98</td>    </tr>    <tr>      <th>5</th>      <td>3</td>      <td>1</td>      <td>Chicken Bowl</td>      <td>[Fresh Tomato Salsa (Mild), [Rice, Cheese, Sou...</td>      <td>$10.98</td>    </tr>    <tr>      <th>6</th>      <td>3</td>      <td>1</td>      <td>Side of Chips</td>      <td>NaN</td>      <td>$1.69</td>    </tr>    <tr>      <th>7</th>      <td>4</td>      <td>1</td>      <td>Steak Burrito</td>      <td>[Tomatillo Red Chili Salsa, [Fajita Vegetables...</td>      <td>$11.75</td>    </tr>    <tr>      <th>8</th>      <td>4</td>      <td>1</td>      <td>Steak Soft Tacos</td>      <td>[Tomatillo Green Chili Salsa, [Pinto Beans, Ch...</td>      <td>$9.25</td>    </tr>    <tr>      <th>9</th>      <td>5</td>      <td>1</td>      <td>Steak Burrito</td>      <td>[Fresh Tomato Salsa, [Rice, Black Beans, Pinto...</td>      <td>$9.25</td>    </tr>  </tbody></table></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chipo.shape</span><br></pre></td></tr></table></figure></div><pre><code>(4622, 5)</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chipo.columns</span><br></pre></td></tr></table></figure></div><pre><code>Index([&#39;order_id&#39;, &#39;quantity&#39;, &#39;item_name&#39;, &#39;choice_description&#39;,       &#39;item_price&#39;],      dtype=&#39;object&#39;)</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chipo.index</span><br></pre></td></tr></table></figure></div><pre><code>RangeIndex(start=0, stop=4622, step=1)</code></pre><h2 id="被下单最多的商品-item"><a href="#被下单最多的商品-item" class="headerlink" title="被下单最多的商品(item)?"></a>被下单最多的商品(item)?</h2><p>as_index=False 意思是不让item_name变成index.<br>agg里面的字典表示你可以对每一列用不同的函数</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">c = chipo.groupby([<span class="string">'item_name'</span>],as_index=<span class="literal">False</span>).agg(&#123;<span class="string">'quantity'</span>:sum&#125;)</span><br><span class="line">c.sort_values([<span class="string">'quantity'</span>],ascending=<span class="literal">False</span>,inplace=<span class="literal">True</span>)</span><br><span class="line">c.head()</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>item_name</th>      <th>quantity</th>    </tr>  </thead>  <tbody>    <tr>      <th>17</th>      <td>Chicken Bowl</td>      <td>761</td>    </tr>    <tr>      <th>18</th>      <td>Chicken Burrito</td>      <td>591</td>    </tr>    <tr>      <th>25</th>      <td>Chips and Guacamole</td>      <td>506</td>    </tr>    <tr>      <th>39</th>      <td>Steak Burrito</td>      <td>386</td>    </tr>    <tr>      <th>10</th>      <td>Canned Soft Drink</td>      <td>351</td>    </tr>  </tbody></table></div><h2 id="在item-name这一列中，一共有多少种商品被下单？¶"><a href="#在item-name这一列中，一共有多少种商品被下单？¶" class="headerlink" title="在item_name这一列中，一共有多少种商品被下单？¶"></a>在item_name这一列中，一共有多少种商品被下单？¶</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chipo[<span class="string">'item_name'</span>].nunique()</span><br></pre></td></tr></table></figure></div><pre><code>50</code></pre><h2 id="步骤11-在choice-description中，下单次数最多的商品是什么？"><a href="#步骤11-在choice-description中，下单次数最多的商品是什么？" class="headerlink" title="步骤11 在choice_description中，下单次数最多的商品是什么？"></a>步骤11 在choice_description中，下单次数最多的商品是什么？</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">temp = chipo.groupby([<span class="string">'choice_description'</span>],as_index=<span class="literal">False</span>).agg(&#123;<span class="string">'quantity'</span>:sum&#125;)</span><br><span class="line">temp.sort_values(by=<span class="string">'quantity'</span>,inplace=<span class="literal">True</span>,ascending=<span class="literal">False</span>)</span><br><span class="line">temp</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>choice_description</th>      <th>quantity</th>    </tr>  </thead>  <tbody>    <tr>      <th>15</th>      <td>[Diet Coke]</td>      <td>159</td>    </tr>    <tr>      <th>14</th>      <td>[Coke]</td>      <td>143</td>    </tr>    <tr>      <th>583</th>      <td>[Sprite]</td>      <td>89</td>    </tr>    <tr>      <th>256</th>      <td>[Fresh Tomato Salsa, [Rice, Black Beans, Chees...</td>      <td>49</td>    </tr>    <tr>      <th>257</th>      <td>[Fresh Tomato Salsa, [Rice, Black Beans, Chees...</td>      <td>42</td>    </tr>    <tr>      <th>...</th>      <td>...</td>      <td>...</td>    </tr>    <tr>      <th>496</th>      <td>[Roasted Chili Corn Salsa, [Fajita Vegetables,...</td>      <td>1</td>    </tr>    <tr>      <th>499</th>      <td>[Roasted Chili Corn Salsa, [Fajita Vegetables,...</td>      <td>1</td>    </tr>    <tr>      <th>502</th>      <td>[Roasted Chili Corn Salsa, [Fajita Vegetables,...</td>      <td>1</td>    </tr>    <tr>      <th>504</th>      <td>[Roasted Chili Corn Salsa, [Guacamole, Sour Cr...</td>      <td>1</td>    </tr>    <tr>      <th>1042</th>      <td>[[Tomatillo-Red Chili Salsa (Hot), Tomatillo-G...</td>      <td>1</td>    </tr>  </tbody></table><p>1043 rows × 2 columns</p></div><h2 id="一共有多少商品被下单？"><a href="#一共有多少商品被下单？" class="headerlink" title="一共有多少商品被下单？"></a>一共有多少商品被下单？</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chipo.loc[:, <span class="string">'quantity'</span>].sum()</span><br></pre></td></tr></table></figure></div><pre><code>4972</code></pre><h2 id="将item-price转换为浮点数"><a href="#将item-price转换为浮点数" class="headerlink" title="将item_price转换为浮点数"></a>将item_price转换为浮点数</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chipo[<span class="string">'item_price'</span>] = chipo.loc[:, <span class="string">'item_price'</span>].apply(<span class="keyword">lambda</span> x: x[<span class="number">1</span>:]).astype(np.float64)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chipo[<span class="string">'item_price'</span>]</span><br></pre></td></tr></table></figure></div><pre><code>0        2.391        3.392        3.393        2.394       16.98        ...  4617    11.754618    11.754619    11.254620     8.754621     8.75Name: item_price, Length: 4622, dtype: float64</code></pre><h2 id="在该数据集对应的时期内，收入-revenue-是多少"><a href="#在该数据集对应的时期内，收入-revenue-是多少" class="headerlink" title="在该数据集对应的时期内，收入(revenue)是多少"></a>在该数据集对应的时期内，收入(revenue)是多少</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chipo[<span class="string">'sum_earn'</span>] = chipo[<span class="string">'quantity'</span>]*chipo[<span class="string">'item_price'</span>]</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chipo[<span class="string">'sum_earn'</span>].sum()</span><br></pre></td></tr></table></figure></div><pre><code>39237.02</code></pre><h2 id="在该数据集对应的时期内，一共有多少订单？"><a href="#在该数据集对应的时期内，一共有多少订单？" class="headerlink" title="在该数据集对应的时期内，一共有多少订单？"></a>在该数据集对应的时期内，一共有多少订单？</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chipo[<span class="string">'order_id'</span>].nunique()</span><br></pre></td></tr></table></figure></div><pre><code>1834</code></pre><h2 id="每一单-order-对应的平均总价是多少？"><a href="#每一单-order-对应的平均总价是多少？" class="headerlink" title="每一单(order)对应的平均总价是多少？"></a>每一单(order)对应的平均总价是多少？</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chipo.groupby(<span class="string">'order_id'</span>).agg(&#123;<span class="string">'sum_earn'</span>:sum&#125;).mean()</span><br></pre></td></tr></table></figure></div><pre><code>sum_earn    21.394231dtype: float64</code></pre><h2 id="一共有多少种不同的商品被售出"><a href="#一共有多少种不同的商品被售出" class="headerlink" title="一共有多少种不同的商品被售出"></a>一共有多少种不同的商品被售出</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chipo[<span class="string">'item_name'</span>].nunique()</span><br></pre></td></tr></table></figure></div><pre><code>50</code></pre><h1 id="探索2012欧洲杯数据-数据过滤排序"><a href="#探索2012欧洲杯数据-数据过滤排序" class="headerlink" title="探索2012欧洲杯数据(数据过滤排序)"></a>探索2012欧洲杯数据(数据过滤排序)</h1><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">euro12 = pd.read_csv(<span class="string">'Euro2012_stats.csv'</span>)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">euro12.head(<span class="number">5</span>)</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Team</th>      <th>Goals</th>      <th>Shots on target</th>      <th>Shots off target</th>      <th>Shooting Accuracy</th>      <th>% Goals-to-shots</th>      <th>Total shots (inc. Blocked)</th>      <th>Hit Woodwork</th>      <th>Penalty goals</th>      <th>Penalties not scored</th>      <th>...</th>      <th>Saves made</th>      <th>Saves-to-shots ratio</th>      <th>Fouls Won</th>      <th>Fouls Conceded</th>      <th>Offsides</th>      <th>Yellow Cards</th>      <th>Red Cards</th>      <th>Subs on</th>      <th>Subs off</th>      <th>Players Used</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>Croatia</td>      <td>4</td>      <td>13</td>      <td>12</td>      <td>51.9%</td>      <td>16.0%</td>      <td>32</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>...</td>      <td>13</td>      <td>81.3%</td>      <td>41</td>      <td>62</td>      <td>2</td>      <td>9</td>      <td>0</td>      <td>9</td>      <td>9</td>      <td>16</td>    </tr>    <tr>      <th>1</th>      <td>Czech Republic</td>      <td>4</td>      <td>13</td>      <td>18</td>      <td>41.9%</td>      <td>12.9%</td>      <td>39</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>...</td>      <td>9</td>      <td>60.1%</td>      <td>53</td>      <td>73</td>      <td>8</td>      <td>7</td>      <td>0</td>      <td>11</td>      <td>11</td>      <td>19</td>    </tr>    <tr>      <th>2</th>      <td>Denmark</td>      <td>4</td>      <td>10</td>      <td>10</td>      <td>50.0%</td>      <td>20.0%</td>      <td>27</td>      <td>1</td>      <td>0</td>      <td>0</td>      <td>...</td>      <td>10</td>      <td>66.7%</td>      <td>25</td>      <td>38</td>      <td>8</td>      <td>4</td>      <td>0</td>      <td>7</td>      <td>7</td>      <td>15</td>    </tr>    <tr>      <th>3</th>      <td>England</td>      <td>5</td>      <td>11</td>      <td>18</td>      <td>50.0%</td>      <td>17.2%</td>      <td>40</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>...</td>      <td>22</td>      <td>88.1%</td>      <td>43</td>      <td>45</td>      <td>6</td>      <td>5</td>      <td>0</td>      <td>11</td>      <td>11</td>      <td>16</td>    </tr>    <tr>      <th>4</th>      <td>France</td>      <td>3</td>      <td>22</td>      <td>24</td>      <td>37.9%</td>      <td>6.5%</td>      <td>65</td>      <td>1</td>      <td>0</td>      <td>0</td>      <td>...</td>      <td>6</td>      <td>54.6%</td>      <td>36</td>      <td>51</td>      <td>5</td>      <td>6</td>      <td>0</td>      <td>11</td>      <td>11</td>      <td>19</td>    </tr>  </tbody></table><p>5 rows × 35 columns</p></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">euro12[<span class="string">'Goals'</span>]</span><br></pre></td></tr></table></figure></div><pre><code>0      41      42      43      54      35     106      57      68      29      210     611     112     513    1214     515     2Name: Goals, dtype: int64</code></pre><h2 id="有多少球队参与了2012欧洲杯？"><a href="#有多少球队参与了2012欧洲杯？" class="headerlink" title="有多少球队参与了2012欧洲杯？"></a>有多少球队参与了2012欧洲杯？</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">euro12[<span class="string">'Team'</span>].nunique()</span><br></pre></td></tr></table></figure></div><pre><code>16</code></pre><h2 id="该数据集中一共有多少列-columns"><a href="#该数据集中一共有多少列-columns" class="headerlink" title="该数据集中一共有多少列(columns)?"></a>该数据集中一共有多少列(columns)?</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">euro12.shape[<span class="number">1</span>]</span><br></pre></td></tr></table></figure></div><pre><code>35</code></pre><h2 id="将数据集中的列Team-Yellow-Cards和Red-Cards单独存为一个名叫discipline的数据框"><a href="#将数据集中的列Team-Yellow-Cards和Red-Cards单独存为一个名叫discipline的数据框" class="headerlink" title="将数据集中的列Team, Yellow Cards和Red Cards单独存为一个名叫discipline的数据框"></a>将数据集中的列Team, Yellow Cards和Red Cards单独存为一个名叫discipline的数据框</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">discipline = euro12.loc[:,[<span class="string">'Team'</span>, <span class="string">'Yellow Cards'</span>, <span class="string">'Red Cards'</span>]]</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">discipline.head()</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Team</th>      <th>Yellow Cards</th>      <th>Red Cards</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>Croatia</td>      <td>9</td>      <td>0</td>    </tr>    <tr>      <th>1</th>      <td>Czech Republic</td>      <td>7</td>      <td>0</td>    </tr>    <tr>      <th>2</th>      <td>Denmark</td>      <td>4</td>      <td>0</td>    </tr>    <tr>      <th>3</th>      <td>England</td>      <td>5</td>      <td>0</td>    </tr>    <tr>      <th>4</th>      <td>France</td>      <td>6</td>      <td>0</td>    </tr>  </tbody></table></div><h2 id="对数据框discipline按照先Red-Cards再Yellow-Cards进行排序"><a href="#对数据框discipline按照先Red-Cards再Yellow-Cards进行排序" class="headerlink" title="对数据框discipline按照先Red Cards再Yellow Cards进行排序"></a>对数据框discipline按照先Red Cards再Yellow Cards进行排序</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">discipline.sort_values(by=[<span class="string">'Red Cards'</span>, <span class="string">'Yellow Cards'</span>])</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Team</th>      <th>Yellow Cards</th>      <th>Red Cards</th>    </tr>  </thead>  <tbody>    <tr>      <th>2</th>      <td>Denmark</td>      <td>4</td>      <td>0</td>    </tr>    <tr>      <th>5</th>      <td>Germany</td>      <td>4</td>      <td>0</td>    </tr>    <tr>      <th>3</th>      <td>England</td>      <td>5</td>      <td>0</td>    </tr>    <tr>      <th>8</th>      <td>Netherlands</td>      <td>5</td>      <td>0</td>    </tr>    <tr>      <th>15</th>      <td>Ukraine</td>      <td>5</td>      <td>0</td>    </tr>    <tr>      <th>4</th>      <td>France</td>      <td>6</td>      <td>0</td>    </tr>    <tr>      <th>12</th>      <td>Russia</td>      <td>6</td>      <td>0</td>    </tr>    <tr>      <th>1</th>      <td>Czech Republic</td>      <td>7</td>      <td>0</td>    </tr>    <tr>      <th>14</th>      <td>Sweden</td>      <td>7</td>      <td>0</td>    </tr>    <tr>      <th>0</th>      <td>Croatia</td>      <td>9</td>      <td>0</td>    </tr>    <tr>      <th>13</th>      <td>Spain</td>      <td>11</td>      <td>0</td>    </tr>    <tr>      <th>10</th>      <td>Portugal</td>      <td>12</td>      <td>0</td>    </tr>    <tr>      <th>7</th>      <td>Italy</td>      <td>16</td>      <td>0</td>    </tr>    <tr>      <th>11</th>      <td>Republic of Ireland</td>      <td>6</td>      <td>1</td>    </tr>    <tr>      <th>9</th>      <td>Poland</td>      <td>7</td>      <td>1</td>    </tr>    <tr>      <th>6</th>      <td>Greece</td>      <td>9</td>      <td>1</td>    </tr>  </tbody></table></div><h2 id="计算每个球队拿到的黄牌数的平均值"><a href="#计算每个球队拿到的黄牌数的平均值" class="headerlink" title="计算每个球队拿到的黄牌数的平均值"></a>计算每个球队拿到的黄牌数的平均值</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">discipline.groupby([<span class="string">'Team'</span>]).agg(&#123;<span class="string">'Yellow Cards'</span>:np.mean&#125;)</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Yellow Cards</th>    </tr>    <tr>      <th>Team</th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>Croatia</th>      <td>9</td>    </tr>    <tr>      <th>Czech Republic</th>      <td>7</td>    </tr>    <tr>      <th>Denmark</th>      <td>4</td>    </tr>    <tr>      <th>England</th>      <td>5</td>    </tr>    <tr>      <th>France</th>      <td>6</td>    </tr>    <tr>      <th>Germany</th>      <td>4</td>    </tr>    <tr>      <th>Greece</th>      <td>9</td>    </tr>    <tr>      <th>Italy</th>      <td>16</td>    </tr>    <tr>      <th>Netherlands</th>      <td>5</td>    </tr>    <tr>      <th>Poland</th>      <td>7</td>    </tr>    <tr>      <th>Portugal</th>      <td>12</td>    </tr>    <tr>      <th>Republic of Ireland</th>      <td>6</td>    </tr>    <tr>      <th>Russia</th>      <td>6</td>    </tr>    <tr>      <th>Spain</th>      <td>11</td>    </tr>    <tr>      <th>Sweden</th>      <td>7</td>    </tr>    <tr>      <th>Ukraine</th>      <td>5</td>    </tr>  </tbody></table></div><h2 id="找到进球数Goals超过6的球队数据"><a href="#找到进球数Goals超过6的球队数据" class="headerlink" title="找到进球数Goals超过6的球队数据"></a>找到进球数Goals超过6的球队数据</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">euro12.loc[euro12.Goals&gt;<span class="number">6</span>, :]</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Team</th>      <th>Goals</th>      <th>Shots on target</th>      <th>Shots off target</th>      <th>Shooting Accuracy</th>      <th>% Goals-to-shots</th>      <th>Total shots (inc. Blocked)</th>      <th>Hit Woodwork</th>      <th>Penalty goals</th>      <th>Penalties not scored</th>      <th>...</th>      <th>Saves made</th>      <th>Saves-to-shots ratio</th>      <th>Fouls Won</th>      <th>Fouls Conceded</th>      <th>Offsides</th>      <th>Yellow Cards</th>      <th>Red Cards</th>      <th>Subs on</th>      <th>Subs off</th>      <th>Players Used</th>    </tr>  </thead>  <tbody>    <tr>      <th>5</th>      <td>Germany</td>      <td>10</td>      <td>32</td>      <td>32</td>      <td>47.8%</td>      <td>15.6%</td>      <td>80</td>      <td>2</td>      <td>1</td>      <td>0</td>      <td>...</td>      <td>10</td>      <td>62.6%</td>      <td>63</td>      <td>49</td>      <td>12</td>      <td>4</td>      <td>0</td>      <td>15</td>      <td>15</td>      <td>17</td>    </tr>    <tr>      <th>13</th>      <td>Spain</td>      <td>12</td>      <td>42</td>      <td>33</td>      <td>55.9%</td>      <td>16.0%</td>      <td>100</td>      <td>0</td>      <td>1</td>      <td>0</td>      <td>...</td>      <td>15</td>      <td>93.8%</td>      <td>102</td>      <td>83</td>      <td>19</td>      <td>11</td>      <td>0</td>      <td>17</td>      <td>17</td>      <td>18</td>    </tr>  </tbody></table><p>2 rows × 35 columns</p></div><h2 id="选取以字母G开头的球队数据"><a href="#选取以字母G开头的球队数据" class="headerlink" title="选取以字母G开头的球队数据"></a>选取以字母G开头的球队数据</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%timeit euro12.loc[euro12.loc[:, <span class="string">"Team"</span>].apply(<span class="keyword">lambda</span> x: x.startswith(<span class="string">"G"</span>))]</span><br></pre></td></tr></table></figure></div><pre><code>631 µs ± 7.93 µs per loop (mean ± std. dev. of 7 runs, 1000 loops each)</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%timeit euro12[euro12.Team.str.startswith(<span class="string">'G'</span>)]</span><br></pre></td></tr></table></figure></div><pre><code>524 µs ± 3.51 µs per loop (mean ± std. dev. of 7 runs, 1000 loops each)</code></pre><h2 id="选取前7列"><a href="#选取前7列" class="headerlink" title="选取前7列"></a>选取前7列</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">euro12.iloc[:, <span class="number">0</span>:<span class="number">7</span>]</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Team</th>      <th>Goals</th>      <th>Shots on target</th>      <th>Shots off target</th>      <th>Shooting Accuracy</th>      <th>% Goals-to-shots</th>      <th>Total shots (inc. Blocked)</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>Croatia</td>      <td>4</td>      <td>13</td>      <td>12</td>      <td>51.9%</td>      <td>16.0%</td>      <td>32</td>    </tr>    <tr>      <th>1</th>      <td>Czech Republic</td>      <td>4</td>      <td>13</td>      <td>18</td>      <td>41.9%</td>      <td>12.9%</td>      <td>39</td>    </tr>    <tr>      <th>2</th>      <td>Denmark</td>      <td>4</td>      <td>10</td>      <td>10</td>      <td>50.0%</td>      <td>20.0%</td>      <td>27</td>    </tr>    <tr>      <th>3</th>      <td>England</td>      <td>5</td>      <td>11</td>      <td>18</td>      <td>50.0%</td>      <td>17.2%</td>      <td>40</td>    </tr>    <tr>      <th>4</th>      <td>France</td>      <td>3</td>      <td>22</td>      <td>24</td>      <td>37.9%</td>      <td>6.5%</td>      <td>65</td>    </tr>    <tr>      <th>5</th>      <td>Germany</td>      <td>10</td>      <td>32</td>      <td>32</td>      <td>47.8%</td>      <td>15.6%</td>      <td>80</td>    </tr>    <tr>      <th>6</th>      <td>Greece</td>      <td>5</td>      <td>8</td>      <td>18</td>      <td>30.7%</td>      <td>19.2%</td>      <td>32</td>    </tr>    <tr>      <th>7</th>      <td>Italy</td>      <td>6</td>      <td>34</td>      <td>45</td>      <td>43.0%</td>      <td>7.5%</td>      <td>110</td>    </tr>    <tr>      <th>8</th>      <td>Netherlands</td>      <td>2</td>      <td>12</td>      <td>36</td>      <td>25.0%</td>      <td>4.1%</td>      <td>60</td>    </tr>    <tr>      <th>9</th>      <td>Poland</td>      <td>2</td>      <td>15</td>      <td>23</td>      <td>39.4%</td>      <td>5.2%</td>      <td>48</td>    </tr>    <tr>      <th>10</th>      <td>Portugal</td>      <td>6</td>      <td>22</td>      <td>42</td>      <td>34.3%</td>      <td>9.3%</td>      <td>82</td>    </tr>    <tr>      <th>11</th>      <td>Republic of Ireland</td>      <td>1</td>      <td>7</td>      <td>12</td>      <td>36.8%</td>      <td>5.2%</td>      <td>28</td>    </tr>    <tr>      <th>12</th>      <td>Russia</td>      <td>5</td>      <td>9</td>      <td>31</td>      <td>22.5%</td>      <td>12.5%</td>      <td>59</td>    </tr>    <tr>      <th>13</th>      <td>Spain</td>      <td>12</td>      <td>42</td>      <td>33</td>      <td>55.9%</td>      <td>16.0%</td>      <td>100</td>    </tr>    <tr>      <th>14</th>      <td>Sweden</td>      <td>5</td>      <td>17</td>      <td>19</td>      <td>47.2%</td>      <td>13.8%</td>      <td>39</td>    </tr>    <tr>      <th>15</th>      <td>Ukraine</td>      <td>2</td>      <td>7</td>      <td>26</td>      <td>21.2%</td>      <td>6.0%</td>      <td>38</td>    </tr>  </tbody></table></div><h2 id="选取除了最后3列之外的全部列"><a href="#选取除了最后3列之外的全部列" class="headerlink" title="选取除了最后3列之外的全部列"></a>选取除了最后3列之外的全部列</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">euro12.iloc[:, :<span class="number">-3</span>]</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Team</th>      <th>Goals</th>      <th>Shots on target</th>      <th>Shots off target</th>      <th>Shooting Accuracy</th>      <th>% Goals-to-shots</th>      <th>Total shots (inc. Blocked)</th>      <th>Hit Woodwork</th>      <th>Penalty goals</th>      <th>Penalties not scored</th>      <th>...</th>      <th>Clean Sheets</th>      <th>Blocks</th>      <th>Goals conceded</th>      <th>Saves made</th>      <th>Saves-to-shots ratio</th>      <th>Fouls Won</th>      <th>Fouls Conceded</th>      <th>Offsides</th>      <th>Yellow Cards</th>      <th>Red Cards</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>Croatia</td>      <td>4</td>      <td>13</td>      <td>12</td>      <td>51.9%</td>      <td>16.0%</td>      <td>32</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>...</td>      <td>0</td>      <td>10</td>      <td>3</td>      <td>13</td>      <td>81.3%</td>      <td>41</td>      <td>62</td>      <td>2</td>      <td>9</td>      <td>0</td>    </tr>    <tr>      <th>1</th>      <td>Czech Republic</td>      <td>4</td>      <td>13</td>      <td>18</td>      <td>41.9%</td>      <td>12.9%</td>      <td>39</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>...</td>      <td>1</td>      <td>10</td>      <td>6</td>      <td>9</td>      <td>60.1%</td>      <td>53</td>      <td>73</td>      <td>8</td>      <td>7</td>      <td>0</td>    </tr>    <tr>      <th>2</th>      <td>Denmark</td>      <td>4</td>      <td>10</td>      <td>10</td>      <td>50.0%</td>      <td>20.0%</td>      <td>27</td>      <td>1</td>      <td>0</td>      <td>0</td>      <td>...</td>      <td>1</td>      <td>10</td>      <td>5</td>      <td>10</td>      <td>66.7%</td>      <td>25</td>      <td>38</td>      <td>8</td>      <td>4</td>      <td>0</td>    </tr>    <tr>      <th>3</th>      <td>England</td>      <td>5</td>      <td>11</td>      <td>18</td>      <td>50.0%</td>      <td>17.2%</td>      <td>40</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>...</td>      <td>2</td>      <td>29</td>      <td>3</td>      <td>22</td>      <td>88.1%</td>      <td>43</td>      <td>45</td>      <td>6</td>      <td>5</td>      <td>0</td>    </tr>    <tr>      <th>4</th>      <td>France</td>      <td>3</td>      <td>22</td>      <td>24</td>      <td>37.9%</td>      <td>6.5%</td>      <td>65</td>      <td>1</td>      <td>0</td>      <td>0</td>      <td>...</td>      <td>1</td>      <td>7</td>      <td>5</td>      <td>6</td>      <td>54.6%</td>      <td>36</td>      <td>51</td>      <td>5</td>      <td>6</td>      <td>0</td>    </tr>    <tr>      <th>5</th>      <td>Germany</td>      <td>10</td>      <td>32</td>      <td>32</td>      <td>47.8%</td>      <td>15.6%</td>      <td>80</td>      <td>2</td>      <td>1</td>      <td>0</td>      <td>...</td>      <td>1</td>      <td>11</td>      <td>6</td>      <td>10</td>      <td>62.6%</td>      <td>63</td>      <td>49</td>      <td>12</td>      <td>4</td>      <td>0</td>    </tr>    <tr>      <th>6</th>      <td>Greece</td>      <td>5</td>      <td>8</td>      <td>18</td>      <td>30.7%</td>      <td>19.2%</td>      <td>32</td>      <td>1</td>      <td>1</td>      <td>1</td>      <td>...</td>      <td>1</td>      <td>23</td>      <td>7</td>      <td>13</td>      <td>65.1%</td>      <td>67</td>      <td>48</td>      <td>12</td>      <td>9</td>      <td>1</td>    </tr>    <tr>      <th>7</th>      <td>Italy</td>      <td>6</td>      <td>34</td>      <td>45</td>      <td>43.0%</td>      <td>7.5%</td>      <td>110</td>      <td>2</td>      <td>0</td>      <td>0</td>      <td>...</td>      <td>2</td>      <td>18</td>      <td>7</td>      <td>20</td>      <td>74.1%</td>      <td>101</td>      <td>89</td>      <td>16</td>      <td>16</td>      <td>0</td>    </tr>    <tr>      <th>8</th>      <td>Netherlands</td>      <td>2</td>      <td>12</td>      <td>36</td>      <td>25.0%</td>      <td>4.1%</td>      <td>60</td>      <td>2</td>      <td>0</td>      <td>0</td>      <td>...</td>      <td>0</td>      <td>9</td>      <td>5</td>      <td>12</td>      <td>70.6%</td>      <td>35</td>      <td>30</td>      <td>3</td>      <td>5</td>      <td>0</td>    </tr>    <tr>      <th>9</th>      <td>Poland</td>      <td>2</td>      <td>15</td>      <td>23</td>      <td>39.4%</td>      <td>5.2%</td>      <td>48</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>...</td>      <td>0</td>      <td>8</td>      <td>3</td>      <td>6</td>      <td>66.7%</td>      <td>48</td>      <td>56</td>      <td>3</td>      <td>7</td>      <td>1</td>    </tr>    <tr>      <th>10</th>      <td>Portugal</td>      <td>6</td>      <td>22</td>      <td>42</td>      <td>34.3%</td>      <td>9.3%</td>      <td>82</td>      <td>6</td>      <td>0</td>      <td>0</td>      <td>...</td>      <td>2</td>      <td>11</td>      <td>4</td>      <td>10</td>      <td>71.5%</td>      <td>73</td>      <td>90</td>      <td>10</td>      <td>12</td>      <td>0</td>    </tr>    <tr>      <th>11</th>      <td>Republic of Ireland</td>      <td>1</td>      <td>7</td>      <td>12</td>      <td>36.8%</td>      <td>5.2%</td>      <td>28</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>...</td>      <td>0</td>      <td>23</td>      <td>9</td>      <td>17</td>      <td>65.4%</td>      <td>43</td>      <td>51</td>      <td>11</td>      <td>6</td>      <td>1</td>    </tr>    <tr>      <th>12</th>      <td>Russia</td>      <td>5</td>      <td>9</td>      <td>31</td>      <td>22.5%</td>      <td>12.5%</td>      <td>59</td>      <td>2</td>      <td>0</td>      <td>0</td>      <td>...</td>      <td>0</td>      <td>8</td>      <td>3</td>      <td>10</td>      <td>77.0%</td>      <td>34</td>      <td>43</td>      <td>4</td>      <td>6</td>      <td>0</td>    </tr>    <tr>      <th>13</th>      <td>Spain</td>      <td>12</td>      <td>42</td>      <td>33</td>      <td>55.9%</td>      <td>16.0%</td>      <td>100</td>      <td>0</td>      <td>1</td>      <td>0</td>      <td>...</td>      <td>5</td>      <td>8</td>      <td>1</td>      <td>15</td>      <td>93.8%</td>      <td>102</td>      <td>83</td>      <td>19</td>      <td>11</td>      <td>0</td>    </tr>    <tr>      <th>14</th>      <td>Sweden</td>      <td>5</td>      <td>17</td>      <td>19</td>      <td>47.2%</td>      <td>13.8%</td>      <td>39</td>      <td>3</td>      <td>0</td>      <td>0</td>      <td>...</td>      <td>1</td>      <td>12</td>      <td>5</td>      <td>8</td>      <td>61.6%</td>      <td>35</td>      <td>51</td>      <td>7</td>      <td>7</td>      <td>0</td>    </tr>    <tr>      <th>15</th>      <td>Ukraine</td>      <td>2</td>      <td>7</td>      <td>26</td>      <td>21.2%</td>      <td>6.0%</td>      <td>38</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>...</td>      <td>0</td>      <td>4</td>      <td>4</td>      <td>13</td>      <td>76.5%</td>      <td>48</td>      <td>31</td>      <td>4</td>      <td>5</td>      <td>0</td>    </tr>  </tbody></table><p>16 rows × 32 columns</p></div><h2 id="找到英格兰-England-、意大利-Italy-和俄罗斯-Russia-的射正率-Shooting-Accuracy"><a href="#找到英格兰-England-、意大利-Italy-和俄罗斯-Russia-的射正率-Shooting-Accuracy" class="headerlink" title="找到英格兰(England)、意大利(Italy)和俄罗斯(Russia)的射正率(Shooting Accuracy)"></a>找到英格兰(England)、意大利(Italy)和俄罗斯(Russia)的射正率(Shooting Accuracy)</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">euro12[euro12.Team.isin([<span class="string">'England'</span>, <span class="string">'Italy'</span>, <span class="string">'Russia'</span>])].loc[:,[<span class="string">"Team"</span>, <span class="string">"Shooting Accuracy"</span>]]</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Team</th>      <th>Shooting Accuracy</th>    </tr>  </thead>  <tbody>    <tr>      <th>3</th>      <td>England</td>      <td>50.0%</td>    </tr>    <tr>      <th>7</th>      <td>Italy</td>      <td>43.0%</td>    </tr>    <tr>      <th>12</th>      <td>Russia</td>      <td>22.5%</td>    </tr>  </tbody></table></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">euro12.head()</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Team</th>      <th>Goals</th>      <th>Shots on target</th>      <th>Shots off target</th>      <th>Shooting Accuracy</th>      <th>% Goals-to-shots</th>      <th>Total shots (inc. Blocked)</th>      <th>Hit Woodwork</th>      <th>Penalty goals</th>      <th>Penalties not scored</th>      <th>...</th>      <th>Saves made</th>      <th>Saves-to-shots ratio</th>      <th>Fouls Won</th>      <th>Fouls Conceded</th>      <th>Offsides</th>      <th>Yellow Cards</th>      <th>Red Cards</th>      <th>Subs on</th>      <th>Subs off</th>      <th>Players Used</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>Croatia</td>      <td>4</td>      <td>13</td>      <td>12</td>      <td>51.9%</td>      <td>16.0%</td>      <td>32</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>...</td>      <td>13</td>      <td>81.3%</td>      <td>41</td>      <td>62</td>      <td>2</td>      <td>9</td>      <td>0</td>      <td>9</td>      <td>9</td>      <td>16</td>    </tr>    <tr>      <th>1</th>      <td>Czech Republic</td>      <td>4</td>      <td>13</td>      <td>18</td>      <td>41.9%</td>      <td>12.9%</td>      <td>39</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>...</td>      <td>9</td>      <td>60.1%</td>      <td>53</td>      <td>73</td>      <td>8</td>      <td>7</td>      <td>0</td>      <td>11</td>      <td>11</td>      <td>19</td>    </tr>    <tr>      <th>2</th>      <td>Denmark</td>      <td>4</td>      <td>10</td>      <td>10</td>      <td>50.0%</td>      <td>20.0%</td>      <td>27</td>      <td>1</td>      <td>0</td>      <td>0</td>      <td>...</td>      <td>10</td>      <td>66.7%</td>      <td>25</td>      <td>38</td>      <td>8</td>      <td>4</td>      <td>0</td>      <td>7</td>      <td>7</td>      <td>15</td>    </tr>    <tr>      <th>3</th>      <td>England</td>      <td>5</td>      <td>11</td>      <td>18</td>      <td>50.0%</td>      <td>17.2%</td>      <td>40</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>...</td>      <td>22</td>      <td>88.1%</td>      <td>43</td>      <td>45</td>      <td>6</td>      <td>5</td>      <td>0</td>      <td>11</td>      <td>11</td>      <td>16</td>    </tr>    <tr>      <th>4</th>      <td>France</td>      <td>3</td>      <td>22</td>      <td>24</td>      <td>37.9%</td>      <td>6.5%</td>      <td>65</td>      <td>1</td>      <td>0</td>      <td>0</td>      <td>...</td>      <td>6</td>      <td>54.6%</td>      <td>36</td>      <td>51</td>      <td>5</td>      <td>6</td>      <td>0</td>      <td>11</td>      <td>11</td>      <td>19</td>    </tr>  </tbody></table><p>5 rows × 35 columns</p></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">discipline.head()</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Team</th>      <th>Yellow Cards</th>      <th>Red Cards</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>Croatia</td>      <td>9</td>      <td>0</td>    </tr>    <tr>      <th>1</th>      <td>Czech Republic</td>      <td>7</td>      <td>0</td>    </tr>    <tr>      <th>2</th>      <td>Denmark</td>      <td>4</td>      <td>0</td>    </tr>    <tr>      <th>3</th>      <td>England</td>      <td>5</td>      <td>0</td>    </tr>    <tr>      <th>4</th>      <td>France</td>      <td>6</td>      <td>0</td>    </tr>  </tbody></table></div><h1 id="探索酒类消费数据-数据分类统计"><a href="#探索酒类消费数据-数据分类统计" class="headerlink" title="探索酒类消费数据(数据分类统计)"></a>探索酒类消费数据(数据分类统计)</h1><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drinks = pd.read_csv(<span class="string">'drinks.csv'</span>)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drinks.head(<span class="number">5</span>)</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>country</th>      <th>beer_servings</th>      <th>spirit_servings</th>      <th>wine_servings</th>      <th>total_litres_of_pure_alcohol</th>      <th>continent</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>Afghanistan</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>0.0</td>      <td>AS</td>    </tr>    <tr>      <th>1</th>      <td>Albania</td>      <td>89</td>      <td>132</td>      <td>54</td>      <td>4.9</td>      <td>EU</td>    </tr>    <tr>      <th>2</th>      <td>Algeria</td>      <td>25</td>      <td>0</td>      <td>14</td>      <td>0.7</td>      <td>AF</td>    </tr>    <tr>      <th>3</th>      <td>Andorra</td>      <td>245</td>      <td>138</td>      <td>312</td>      <td>12.4</td>      <td>EU</td>    </tr>    <tr>      <th>4</th>      <td>Angola</td>      <td>217</td>      <td>57</td>      <td>45</td>      <td>5.9</td>      <td>AF</td>    </tr>  </tbody></table></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drinks.describe()</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>beer_servings</th>      <th>spirit_servings</th>      <th>wine_servings</th>      <th>total_litres_of_pure_alcohol</th>    </tr>  </thead>  <tbody>    <tr>      <th>count</th>      <td>193.000000</td>      <td>193.000000</td>      <td>193.000000</td>      <td>193.000000</td>    </tr>    <tr>      <th>mean</th>      <td>106.160622</td>      <td>80.994819</td>      <td>49.450777</td>      <td>4.717098</td>    </tr>    <tr>      <th>std</th>      <td>101.143103</td>      <td>88.284312</td>      <td>79.697598</td>      <td>3.773298</td>    </tr>    <tr>      <th>min</th>      <td>0.000000</td>      <td>0.000000</td>      <td>0.000000</td>      <td>0.000000</td>    </tr>    <tr>      <th>25%</th>      <td>20.000000</td>      <td>4.000000</td>      <td>1.000000</td>      <td>1.300000</td>    </tr>    <tr>      <th>50%</th>      <td>76.000000</td>      <td>56.000000</td>      <td>8.000000</td>      <td>4.200000</td>    </tr>    <tr>      <th>75%</th>      <td>188.000000</td>      <td>128.000000</td>      <td>59.000000</td>      <td>7.200000</td>    </tr>    <tr>      <th>max</th>      <td>376.000000</td>      <td>438.000000</td>      <td>370.000000</td>      <td>14.400000</td>    </tr>  </tbody></table></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drinks.info()</span><br></pre></td></tr></table></figure></div><pre><code>&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;RangeIndex: 193 entries, 0 to 192Data columns (total 6 columns):country                         193 non-null objectbeer_servings                   193 non-null int64spirit_servings                 193 non-null int64wine_servings                   193 non-null int64total_litres_of_pure_alcohol    193 non-null float64continent                       170 non-null objectdtypes: float64(1), int64(3), object(2)memory usage: 9.2+ KB</code></pre><h2 id="哪个大陆-continent-平均消耗的啤酒-beer-更多？"><a href="#哪个大陆-continent-平均消耗的啤酒-beer-更多？" class="headerlink" title="哪个大陆(continent)平均消耗的啤酒(beer)更多？"></a>哪个大陆(continent)平均消耗的啤酒(beer)更多？</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drinks.head()</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>country</th>      <th>beer_servings</th>      <th>spirit_servings</th>      <th>wine_servings</th>      <th>total_litres_of_pure_alcohol</th>      <th>continent</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>Afghanistan</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>0.0</td>      <td>AS</td>    </tr>    <tr>      <th>1</th>      <td>Albania</td>      <td>89</td>      <td>132</td>      <td>54</td>      <td>4.9</td>      <td>EU</td>    </tr>    <tr>      <th>2</th>      <td>Algeria</td>      <td>25</td>      <td>0</td>      <td>14</td>      <td>0.7</td>      <td>AF</td>    </tr>    <tr>      <th>3</th>      <td>Andorra</td>      <td>245</td>      <td>138</td>      <td>312</td>      <td>12.4</td>      <td>EU</td>    </tr>    <tr>      <th>4</th>      <td>Angola</td>      <td>217</td>      <td>57</td>      <td>45</td>      <td>5.9</td>      <td>AF</td>    </tr>  </tbody></table></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drinks.groupby(<span class="string">'continent'</span>).agg(&#123;<span class="string">'beer_servings'</span>:np.mean&#125;).sort_values(<span class="string">'beer_servings'</span>, ascending=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>beer_servings</th>    </tr>    <tr>      <th>continent</th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>EU</th>      <td>193.777778</td>    </tr>    <tr>      <th>SA</th>      <td>175.083333</td>    </tr>    <tr>      <th>OC</th>      <td>89.687500</td>    </tr>    <tr>      <th>AF</th>      <td>61.471698</td>    </tr>    <tr>      <th>AS</th>      <td>37.045455</td>    </tr>  </tbody></table></div><h2 id="打印出每个大陆-continent-的红酒消耗-wine-servings-的描述性统计值"><a href="#打印出每个大陆-continent-的红酒消耗-wine-servings-的描述性统计值" class="headerlink" title="打印出每个大陆(continent)的红酒消耗(wine_servings)的描述性统计值"></a>打印出每个大陆(continent)的红酒消耗(wine_servings)的描述性统计值</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drinks.loc[:, [<span class="string">'continent'</span>,<span class="string">'wine_servings'</span>]].groupby(<span class="string">'continent'</span>).describe()</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead tr th {        text-align: left;    }    .dataframe thead tr:last-of-type th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr>      <th></th>      <th colspan="8" halign="left">wine_servings</th>    </tr>    <tr>      <th></th>      <th>count</th>      <th>mean</th>      <th>std</th>      <th>min</th>      <th>25%</th>      <th>50%</th>      <th>75%</th>      <th>max</th>    </tr>    <tr>      <th>continent</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>AF</th>      <td>53.0</td>      <td>16.264151</td>      <td>38.846419</td>      <td>0.0</td>      <td>1.0</td>      <td>2.0</td>      <td>13.00</td>      <td>233.0</td>    </tr>    <tr>      <th>AS</th>      <td>44.0</td>      <td>9.068182</td>      <td>21.667034</td>      <td>0.0</td>      <td>0.0</td>      <td>1.0</td>      <td>8.00</td>      <td>123.0</td>    </tr>    <tr>      <th>EU</th>      <td>45.0</td>      <td>142.222222</td>      <td>97.421738</td>      <td>0.0</td>      <td>59.0</td>      <td>128.0</td>      <td>195.00</td>      <td>370.0</td>    </tr>    <tr>      <th>OC</th>      <td>16.0</td>      <td>35.625000</td>      <td>64.555790</td>      <td>0.0</td>      <td>1.0</td>      <td>8.5</td>      <td>23.25</td>      <td>212.0</td>    </tr>    <tr>      <th>SA</th>      <td>12.0</td>      <td>62.416667</td>      <td>88.620189</td>      <td>1.0</td>      <td>3.0</td>      <td>12.0</td>      <td>98.50</td>      <td>221.0</td>    </tr>  </tbody></table></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%timeit drinks.loc[:, [<span class="string">'continent'</span>,<span class="string">'wine_servings'</span>]].groupby(<span class="string">'continent'</span>).describe()</span><br></pre></td></tr></table></figure></div><pre><code>21 ms ± 577 µs per loop (mean ± std. dev. of 7 runs, 10 loops each)</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drinks.groupby(<span class="string">'continent'</span>).wine_servings.describe()</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>count</th>      <th>mean</th>      <th>std</th>      <th>min</th>      <th>25%</th>      <th>50%</th>      <th>75%</th>      <th>max</th>    </tr>    <tr>      <th>continent</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>AF</th>      <td>53.0</td>      <td>16.264151</td>      <td>38.846419</td>      <td>0.0</td>      <td>1.0</td>      <td>2.0</td>      <td>13.00</td>      <td>233.0</td>    </tr>    <tr>      <th>AS</th>      <td>44.0</td>      <td>9.068182</td>      <td>21.667034</td>      <td>0.0</td>      <td>0.0</td>      <td>1.0</td>      <td>8.00</td>      <td>123.0</td>    </tr>    <tr>      <th>EU</th>      <td>45.0</td>      <td>142.222222</td>      <td>97.421738</td>      <td>0.0</td>      <td>59.0</td>      <td>128.0</td>      <td>195.00</td>      <td>370.0</td>    </tr>    <tr>      <th>OC</th>      <td>16.0</td>      <td>35.625000</td>      <td>64.555790</td>      <td>0.0</td>      <td>1.0</td>      <td>8.5</td>      <td>23.25</td>      <td>212.0</td>    </tr>    <tr>      <th>SA</th>      <td>12.0</td>      <td>62.416667</td>      <td>88.620189</td>      <td>1.0</td>      <td>3.0</td>      <td>12.0</td>      <td>98.50</td>      <td>221.0</td>    </tr>  </tbody></table></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%timeit drinks.groupby(<span class="string">'continent'</span>).wine_servings.describe()</span><br></pre></td></tr></table></figure></div><pre><code>9.78 ms ± 292 µs per loop (mean ± std. dev. of 7 runs, 100 loops each)</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drinks.groupby(<span class="string">'continent'</span>).agg(&#123;<span class="string">'wine_servings'</span>: <span class="string">'describe'</span>&#125;)</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead tr th {        text-align: left;    }    .dataframe thead tr:last-of-type th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr>      <th></th>      <th colspan="8" halign="left">wine_servings</th>    </tr>    <tr>      <th></th>      <th>count</th>      <th>mean</th>      <th>std</th>      <th>min</th>      <th>25%</th>      <th>50%</th>      <th>75%</th>      <th>max</th>    </tr>    <tr>      <th>continent</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>AF</th>      <td>53.0</td>      <td>16.264151</td>      <td>38.846419</td>      <td>0.0</td>      <td>1.0</td>      <td>2.0</td>      <td>13.00</td>      <td>233.0</td>    </tr>    <tr>      <th>AS</th>      <td>44.0</td>      <td>9.068182</td>      <td>21.667034</td>      <td>0.0</td>      <td>0.0</td>      <td>1.0</td>      <td>8.00</td>      <td>123.0</td>    </tr>    <tr>      <th>EU</th>      <td>45.0</td>      <td>142.222222</td>      <td>97.421738</td>      <td>0.0</td>      <td>59.0</td>      <td>128.0</td>      <td>195.00</td>      <td>370.0</td>    </tr>    <tr>      <th>OC</th>      <td>16.0</td>      <td>35.625000</td>      <td>64.555790</td>      <td>0.0</td>      <td>1.0</td>      <td>8.5</td>      <td>23.25</td>      <td>212.0</td>    </tr>    <tr>      <th>SA</th>      <td>12.0</td>      <td>62.416667</td>      <td>88.620189</td>      <td>1.0</td>      <td>3.0</td>      <td>12.0</td>      <td>98.50</td>      <td>221.0</td>    </tr>  </tbody></table></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%timeit drinks.groupby(<span class="string">'continent'</span>).agg(&#123;<span class="string">'wine_servings'</span>: <span class="string">'describe'</span>&#125;)</span><br></pre></td></tr></table></figure></div><pre><code>10.6 ms ± 80.9 µs per loop (mean ± std. dev. of 7 runs, 100 loops each)</code></pre><h2 id="打印出每个大陆每种酒类别的消耗平均值"><a href="#打印出每个大陆每种酒类别的消耗平均值" class="headerlink" title="打印出每个大陆每种酒类别的消耗平均值"></a>打印出每个大陆每种酒类别的消耗平均值</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drinks.head()</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>country</th>      <th>beer_servings</th>      <th>spirit_servings</th>      <th>wine_servings</th>      <th>total_litres_of_pure_alcohol</th>      <th>continent</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>Afghanistan</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>0.0</td>      <td>AS</td>    </tr>    <tr>      <th>1</th>      <td>Albania</td>      <td>89</td>      <td>132</td>      <td>54</td>      <td>4.9</td>      <td>EU</td>    </tr>    <tr>      <th>2</th>      <td>Algeria</td>      <td>25</td>      <td>0</td>      <td>14</td>      <td>0.7</td>      <td>AF</td>    </tr>    <tr>      <th>3</th>      <td>Andorra</td>      <td>245</td>      <td>138</td>      <td>312</td>      <td>12.4</td>      <td>EU</td>    </tr>    <tr>      <th>4</th>      <td>Angola</td>      <td>217</td>      <td>57</td>      <td>45</td>      <td>5.9</td>      <td>AF</td>    </tr>  </tbody></table></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drinks.groupby(<span class="string">'continent'</span>).mean()</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>beer_servings</th>      <th>spirit_servings</th>      <th>wine_servings</th>      <th>total_litres_of_pure_alcohol</th>    </tr>    <tr>      <th>continent</th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>AF</th>      <td>61.471698</td>      <td>16.339623</td>      <td>16.264151</td>      <td>3.007547</td>    </tr>    <tr>      <th>AS</th>      <td>37.045455</td>      <td>60.840909</td>      <td>9.068182</td>      <td>2.170455</td>    </tr>    <tr>      <th>EU</th>      <td>193.777778</td>      <td>132.555556</td>      <td>142.222222</td>      <td>8.617778</td>    </tr>    <tr>      <th>OC</th>      <td>89.687500</td>      <td>58.437500</td>      <td>35.625000</td>      <td>3.381250</td>    </tr>    <tr>      <th>SA</th>      <td>175.083333</td>      <td>114.750000</td>      <td>62.416667</td>      <td>6.308333</td>    </tr>  </tbody></table></div><h2 id="打印出每个大陆每种酒类别的消耗中位数"><a href="#打印出每个大陆每种酒类别的消耗中位数" class="headerlink" title="打印出每个大陆每种酒类别的消耗中位数"></a>打印出每个大陆每种酒类别的消耗中位数</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drinks.groupby(<span class="string">'continent'</span>).median()</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>beer_servings</th>      <th>spirit_servings</th>      <th>wine_servings</th>      <th>total_litres_of_pure_alcohol</th>    </tr>    <tr>      <th>continent</th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>AF</th>      <td>32.0</td>      <td>3.0</td>      <td>2.0</td>      <td>2.30</td>    </tr>    <tr>      <th>AS</th>      <td>17.5</td>      <td>16.0</td>      <td>1.0</td>      <td>1.20</td>    </tr>    <tr>      <th>EU</th>      <td>219.0</td>      <td>122.0</td>      <td>128.0</td>      <td>10.00</td>    </tr>    <tr>      <th>OC</th>      <td>52.5</td>      <td>37.0</td>      <td>8.5</td>      <td>1.75</td>    </tr>    <tr>      <th>SA</th>      <td>162.5</td>      <td>108.5</td>      <td>12.0</td>      <td>6.85</td>    </tr>  </tbody></table></div><h2 id="打印出每个大陆对spirit饮品消耗的平均值，最大值和最小值¶"><a href="#打印出每个大陆对spirit饮品消耗的平均值，最大值和最小值¶" class="headerlink" title="打印出每个大陆对spirit饮品消耗的平均值，最大值和最小值¶"></a>打印出每个大陆对spirit饮品消耗的平均值，最大值和最小值¶</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drinks.head()</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>country</th>      <th>beer_servings</th>      <th>spirit_servings</th>      <th>wine_servings</th>      <th>total_litres_of_pure_alcohol</th>      <th>continent</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>Afghanistan</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>0.0</td>      <td>AS</td>    </tr>    <tr>      <th>1</th>      <td>Albania</td>      <td>89</td>      <td>132</td>      <td>54</td>      <td>4.9</td>      <td>EU</td>    </tr>    <tr>      <th>2</th>      <td>Algeria</td>      <td>25</td>      <td>0</td>      <td>14</td>      <td>0.7</td>      <td>AF</td>    </tr>    <tr>      <th>3</th>      <td>Andorra</td>      <td>245</td>      <td>138</td>      <td>312</td>      <td>12.4</td>      <td>EU</td>    </tr>    <tr>      <th>4</th>      <td>Angola</td>      <td>217</td>      <td>57</td>      <td>45</td>      <td>5.9</td>      <td>AF</td>    </tr>  </tbody></table></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drinks.groupby(<span class="string">'continent'</span>).agg(&#123;<span class="string">'spirit_servings'</span>:[<span class="string">'mean'</span>,<span class="string">'min'</span>,<span class="string">'max'</span>]&#125;)</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead tr th {        text-align: left;    }    .dataframe thead tr:last-of-type th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr>      <th></th>      <th colspan="3" halign="left">spirit_servings</th>    </tr>    <tr>      <th></th>      <th>mean</th>      <th>min</th>      <th>max</th>    </tr>    <tr>      <th>continent</th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>AF</th>      <td>16.339623</td>      <td>0</td>      <td>152</td>    </tr>    <tr>      <th>AS</th>      <td>60.840909</td>      <td>0</td>      <td>326</td>    </tr>    <tr>      <th>EU</th>      <td>132.555556</td>      <td>0</td>      <td>373</td>    </tr>    <tr>      <th>OC</th>      <td>58.437500</td>      <td>0</td>      <td>254</td>    </tr>    <tr>      <th>SA</th>      <td>114.750000</td>      <td>25</td>      <td>302</td>    </tr>  </tbody></table></div><h1 id="探索1960-2014-美国犯罪数据-apply函数"><a href="#探索1960-2014-美国犯罪数据-apply函数" class="headerlink" title="探索1960 - 2014 美国犯罪数据(apply函数)"></a>探索1960 - 2014 美国犯罪数据(apply函数)</h1><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crime = pd.read_csv(<span class="string">'US_Crime_Rates_1960_2014.csv'</span>)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crime.head()</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Year</th>      <th>Population</th>      <th>Total</th>      <th>Violent</th>      <th>Property</th>      <th>Murder</th>      <th>Forcible_Rape</th>      <th>Robbery</th>      <th>Aggravated_assault</th>      <th>Burglary</th>      <th>Larceny_Theft</th>      <th>Vehicle_Theft</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>1960</td>      <td>179323175</td>      <td>3384200</td>      <td>288460</td>      <td>3095700</td>      <td>9110</td>      <td>17190</td>      <td>107840</td>      <td>154320</td>      <td>912100</td>      <td>1855400</td>      <td>328200</td>    </tr>    <tr>      <th>1</th>      <td>1961</td>      <td>182992000</td>      <td>3488000</td>      <td>289390</td>      <td>3198600</td>      <td>8740</td>      <td>17220</td>      <td>106670</td>      <td>156760</td>      <td>949600</td>      <td>1913000</td>      <td>336000</td>    </tr>    <tr>      <th>2</th>      <td>1962</td>      <td>185771000</td>      <td>3752200</td>      <td>301510</td>      <td>3450700</td>      <td>8530</td>      <td>17550</td>      <td>110860</td>      <td>164570</td>      <td>994300</td>      <td>2089600</td>      <td>366800</td>    </tr>    <tr>      <th>3</th>      <td>1963</td>      <td>188483000</td>      <td>4109500</td>      <td>316970</td>      <td>3792500</td>      <td>8640</td>      <td>17650</td>      <td>116470</td>      <td>174210</td>      <td>1086400</td>      <td>2297800</td>      <td>408300</td>    </tr>    <tr>      <th>4</th>      <td>1964</td>      <td>191141000</td>      <td>4564600</td>      <td>364220</td>      <td>4200400</td>      <td>9360</td>      <td>21420</td>      <td>130390</td>      <td>203050</td>      <td>1213200</td>      <td>2514400</td>      <td>472800</td>    </tr>  </tbody></table></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crime.info()</span><br></pre></td></tr></table></figure></div><pre><code>&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;RangeIndex: 55 entries, 0 to 54Data columns (total 12 columns):Year                  55 non-null int64Population            55 non-null int64Total                 55 non-null int64Violent               55 non-null int64Property              55 non-null int64Murder                55 non-null int64Forcible_Rape         55 non-null int64Robbery               55 non-null int64Aggravated_assault    55 non-null int64Burglary              55 non-null int64Larceny_Theft         55 non-null int64Vehicle_Theft         55 non-null int64dtypes: int64(12)memory usage: 5.3 KB</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crime.describe()</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Year</th>      <th>Population</th>      <th>Total</th>      <th>Violent</th>      <th>Property</th>      <th>Murder</th>      <th>Forcible_Rape</th>      <th>Robbery</th>      <th>Aggravated_assault</th>      <th>Burglary</th>      <th>Larceny_Theft</th>      <th>Vehicle_Theft</th>    </tr>  </thead>  <tbody>    <tr>      <th>count</th>      <td>55.00000</td>      <td>5.500000e+01</td>      <td>5.500000e+01</td>      <td>5.500000e+01</td>      <td>5.500000e+01</td>      <td>55.000000</td>      <td>55.000000</td>      <td>55.000000</td>      <td>5.500000e+01</td>      <td>5.500000e+01</td>      <td>5.500000e+01</td>      <td>5.500000e+01</td>    </tr>    <tr>      <th>mean</th>      <td>1987.00000</td>      <td>2.461556e+08</td>      <td>1.060315e+07</td>      <td>1.188806e+06</td>      <td>9.412499e+06</td>      <td>17317.236364</td>      <td>72714.800000</td>      <td>416449.890909</td>      <td>6.811818e+05</td>      <td>2.424017e+06</td>      <td>5.959947e+06</td>      <td>1.028614e+06</td>    </tr>    <tr>      <th>std</th>      <td>16.02082</td>      <td>4.166216e+07</td>      <td>3.175931e+06</td>      <td>4.597107e+05</td>      <td>2.738512e+06</td>      <td>4267.442664</td>      <td>28278.006893</td>      <td>150506.403782</td>      <td>2.960255e+05</td>      <td>7.259004e+05</td>      <td>1.846401e+06</td>      <td>3.455693e+05</td>    </tr>    <tr>      <th>min</th>      <td>1960.00000</td>      <td>1.793232e+08</td>      <td>3.384200e+06</td>      <td>2.884600e+05</td>      <td>3.095700e+06</td>      <td>8530.000000</td>      <td>17190.000000</td>      <td>106670.000000</td>      <td>1.543200e+05</td>      <td>9.121000e+05</td>      <td>1.855400e+06</td>      <td>3.282000e+05</td>    </tr>    <tr>      <th>25%</th>      <td>1973.50000</td>      <td>2.106215e+08</td>      <td>9.096958e+06</td>      <td>9.253150e+05</td>      <td>8.060014e+06</td>      <td>14819.000000</td>      <td>53400.000000</td>      <td>354911.500000</td>      <td>4.384300e+05</td>      <td>2.105336e+06</td>      <td>4.843350e+06</td>      <td>7.896260e+05</td>    </tr>    <tr>      <th>50%</th>      <td>1987.00000</td>      <td>2.422829e+08</td>      <td>1.140151e+07</td>      <td>1.322390e+06</td>      <td>1.018259e+07</td>      <td>17030.000000</td>      <td>84230.000000</td>      <td>423557.000000</td>      <td>7.412910e+05</td>      <td>2.329950e+06</td>      <td>6.591900e+06</td>      <td>1.032200e+06</td>    </tr>    <tr>      <th>75%</th>      <td>2000.50000</td>      <td>2.833697e+08</td>      <td>1.308449e+07</td>      <td>1.432762e+06</td>      <td>1.160509e+07</td>      <td>20561.500000</td>      <td>92930.000000</td>      <td>512137.000000</td>      <td>9.002150e+05</td>      <td>3.073600e+06</td>      <td>7.168450e+06</td>      <td>1.239302e+06</td>    </tr>    <tr>      <th>max</th>      <td>2014.00000</td>      <td>3.188571e+08</td>      <td>1.487290e+07</td>      <td>1.932270e+06</td>      <td>1.296110e+07</td>      <td>24700.000000</td>      <td>109060.000000</td>      <td>687730.000000</td>      <td>1.135610e+06</td>      <td>3.795200e+06</td>      <td>8.142200e+06</td>      <td>1.661700e+06</td>    </tr>  </tbody></table></div><h2 id="将Year的数据类型转换为-datetime64"><a href="#将Year的数据类型转换为-datetime64" class="headerlink" title="将Year的数据类型转换为 datetime64"></a>将Year的数据类型转换为 datetime64</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">crime.Year = pd.to_datetime(crime.Year, format=<span class="string">'%Y'</span>)</span><br><span class="line">crime.info()</span><br></pre></td></tr></table></figure></div><pre><code>&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;RangeIndex: 55 entries, 0 to 54Data columns (total 12 columns):Year                  55 non-null datetime64[ns]Population            55 non-null int64Total                 55 non-null int64Violent               55 non-null int64Property              55 non-null int64Murder                55 non-null int64Forcible_Rape         55 non-null int64Robbery               55 non-null int64Aggravated_assault    55 non-null int64Burglary              55 non-null int64Larceny_Theft         55 non-null int64Vehicle_Theft         55 non-null int64dtypes: datetime64[ns](1), int64(11)memory usage: 5.3 KB</code></pre><h2 id="将列Year设置为数据框的索引"><a href="#将列Year设置为数据框的索引" class="headerlink" title="将列Year设置为数据框的索引"></a>将列Year设置为数据框的索引</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">crime.set_index(<span class="string">'Year'</span>, inplace=<span class="literal">True</span>)</span><br><span class="line">crime.head(<span class="number">5</span>)</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Population</th>      <th>Total</th>      <th>Violent</th>      <th>Property</th>      <th>Murder</th>      <th>Forcible_Rape</th>      <th>Robbery</th>      <th>Aggravated_assault</th>      <th>Burglary</th>      <th>Larceny_Theft</th>      <th>Vehicle_Theft</th>    </tr>    <tr>      <th>Year</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>1960-01-01</th>      <td>179323175</td>      <td>3384200</td>      <td>288460</td>      <td>3095700</td>      <td>9110</td>      <td>17190</td>      <td>107840</td>      <td>154320</td>      <td>912100</td>      <td>1855400</td>      <td>328200</td>    </tr>    <tr>      <th>1961-01-01</th>      <td>182992000</td>      <td>3488000</td>      <td>289390</td>      <td>3198600</td>      <td>8740</td>      <td>17220</td>      <td>106670</td>      <td>156760</td>      <td>949600</td>      <td>1913000</td>      <td>336000</td>    </tr>    <tr>      <th>1962-01-01</th>      <td>185771000</td>      <td>3752200</td>      <td>301510</td>      <td>3450700</td>      <td>8530</td>      <td>17550</td>      <td>110860</td>      <td>164570</td>      <td>994300</td>      <td>2089600</td>      <td>366800</td>    </tr>    <tr>      <th>1963-01-01</th>      <td>188483000</td>      <td>4109500</td>      <td>316970</td>      <td>3792500</td>      <td>8640</td>      <td>17650</td>      <td>116470</td>      <td>174210</td>      <td>1086400</td>      <td>2297800</td>      <td>408300</td>    </tr>    <tr>      <th>1964-01-01</th>      <td>191141000</td>      <td>4564600</td>      <td>364220</td>      <td>4200400</td>      <td>9360</td>      <td>21420</td>      <td>130390</td>      <td>203050</td>      <td>1213200</td>      <td>2514400</td>      <td>472800</td>    </tr>  </tbody></table></div><p>删除名为Total的列</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crime.drop([<span class="string">'Total'</span>],axis=<span class="number">1</span>,inplace=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crime.head()</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Population</th>      <th>Violent</th>      <th>Property</th>      <th>Murder</th>      <th>Forcible_Rape</th>      <th>Robbery</th>      <th>Aggravated_assault</th>      <th>Burglary</th>      <th>Larceny_Theft</th>      <th>Vehicle_Theft</th>    </tr>    <tr>      <th>Year</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>1960-01-01</th>      <td>179323175</td>      <td>288460</td>      <td>3095700</td>      <td>9110</td>      <td>17190</td>      <td>107840</td>      <td>154320</td>      <td>912100</td>      <td>1855400</td>      <td>328200</td>    </tr>    <tr>      <th>1961-01-01</th>      <td>182992000</td>      <td>289390</td>      <td>3198600</td>      <td>8740</td>      <td>17220</td>      <td>106670</td>      <td>156760</td>      <td>949600</td>      <td>1913000</td>      <td>336000</td>    </tr>    <tr>      <th>1962-01-01</th>      <td>185771000</td>      <td>301510</td>      <td>3450700</td>      <td>8530</td>      <td>17550</td>      <td>110860</td>      <td>164570</td>      <td>994300</td>      <td>2089600</td>      <td>366800</td>    </tr>    <tr>      <th>1963-01-01</th>      <td>188483000</td>      <td>316970</td>      <td>3792500</td>      <td>8640</td>      <td>17650</td>      <td>116470</td>      <td>174210</td>      <td>1086400</td>      <td>2297800</td>      <td>408300</td>    </tr>    <tr>      <th>1964-01-01</th>      <td>191141000</td>      <td>364220</td>      <td>4200400</td>      <td>9360</td>      <td>21420</td>      <td>130390</td>      <td>203050</td>      <td>1213200</td>      <td>2514400</td>      <td>472800</td>    </tr>  </tbody></table></div><p>按照Year对数据框进行10年的采样并求和</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">crimes = crime.resample(<span class="string">'10AS'</span>).sum()</span><br><span class="line"><span class="comment"># 用resample去得到“Population”列的最大值</span></span><br><span class="line">population = crime[<span class="string">'Population'</span>].resample(<span class="string">'10AS'</span>).max()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新 "Population" </span></span><br><span class="line">crimes[<span class="string">'Population'</span>] = population</span><br><span class="line"></span><br><span class="line">crimes</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Population</th>      <th>Violent</th>      <th>Property</th>      <th>Murder</th>      <th>Forcible_Rape</th>      <th>Robbery</th>      <th>Aggravated_assault</th>      <th>Burglary</th>      <th>Larceny_Theft</th>      <th>Vehicle_Theft</th>    </tr>    <tr>      <th>Year</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>1960-01-01</th>      <td>201385000</td>      <td>4134930</td>      <td>45160900</td>      <td>106180</td>      <td>236720</td>      <td>1633510</td>      <td>2158520</td>      <td>13321100</td>      <td>26547700</td>      <td>5292100</td>    </tr>    <tr>      <th>1970-01-01</th>      <td>220099000</td>      <td>9607930</td>      <td>91383800</td>      <td>192230</td>      <td>554570</td>      <td>4159020</td>      <td>4702120</td>      <td>28486000</td>      <td>53157800</td>      <td>9739900</td>    </tr>    <tr>      <th>1980-01-01</th>      <td>248239000</td>      <td>14074328</td>      <td>117048900</td>      <td>206439</td>      <td>865639</td>      <td>5383109</td>      <td>7619130</td>      <td>33073494</td>      <td>72040253</td>      <td>11935411</td>    </tr>    <tr>      <th>1990-01-01</th>      <td>272690813</td>      <td>17527048</td>      <td>119053499</td>      <td>211664</td>      <td>998827</td>      <td>5748930</td>      <td>10568963</td>      <td>26750015</td>      <td>77679366</td>      <td>14624418</td>    </tr>    <tr>      <th>2000-01-01</th>      <td>307006550</td>      <td>13968056</td>      <td>100944369</td>      <td>163068</td>      <td>922499</td>      <td>4230366</td>      <td>8652124</td>      <td>21565176</td>      <td>67970291</td>      <td>11412834</td>    </tr>    <tr>      <th>2010-01-01</th>      <td>318857056</td>      <td>6072017</td>      <td>44095950</td>      <td>72867</td>      <td>421059</td>      <td>1749809</td>      <td>3764142</td>      <td>10125170</td>      <td>30401698</td>      <td>3569080</td>    </tr>  </tbody></table></div><h2 id="何时是美国历史上生存最危险的年代？"><a href="#何时是美国历史上生存最危险的年代？" class="headerlink" title="何时是美国历史上生存最危险的年代？"></a>何时是美国历史上生存最危险的年代？</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crime.idxmax()</span><br></pre></td></tr></table></figure></div><pre><code>Population           2014-01-01Violent              1992-01-01Property             1991-01-01Murder               1991-01-01Forcible_Rape        1992-01-01Robbery              1991-01-01Aggravated_assault   1993-01-01Burglary             1980-01-01Larceny_Theft        1991-01-01Vehicle_Theft        1991-01-01dtype: datetime64[ns]</code></pre><h1 id="探索虚拟姓名数据-数据整合"><a href="#探索虚拟姓名数据-数据整合" class="headerlink" title="探索虚拟姓名数据(数据整合)"></a>探索虚拟姓名数据(数据整合)</h1><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 运行以下代码</span></span><br><span class="line">raw_data_1 = &#123;</span><br><span class="line">        <span class="string">'subject_id'</span>: [<span class="string">'1'</span>, <span class="string">'2'</span>, <span class="string">'3'</span>, <span class="string">'4'</span>, <span class="string">'5'</span>],</span><br><span class="line">        <span class="string">'first_name'</span>: [<span class="string">'Alex'</span>, <span class="string">'Amy'</span>, <span class="string">'Allen'</span>, <span class="string">'Alice'</span>, <span class="string">'Ayoung'</span>], </span><br><span class="line">        <span class="string">'last_name'</span>: [<span class="string">'Anderson'</span>, <span class="string">'Ackerman'</span>, <span class="string">'Ali'</span>, <span class="string">'Aoni'</span>, <span class="string">'Atiches'</span>]&#125;</span><br><span class="line"></span><br><span class="line">raw_data_2 = &#123;</span><br><span class="line">        <span class="string">'subject_id'</span>: [<span class="string">'4'</span>, <span class="string">'5'</span>, <span class="string">'6'</span>, <span class="string">'7'</span>, <span class="string">'8'</span>],</span><br><span class="line">        <span class="string">'first_name'</span>: [<span class="string">'Billy'</span>, <span class="string">'Brian'</span>, <span class="string">'Bran'</span>, <span class="string">'Bryce'</span>, <span class="string">'Betty'</span>], </span><br><span class="line">        <span class="string">'last_name'</span>: [<span class="string">'Bonder'</span>, <span class="string">'Black'</span>, <span class="string">'Balwner'</span>, <span class="string">'Brice'</span>, <span class="string">'Btisan'</span>]&#125;</span><br><span class="line"></span><br><span class="line">raw_data_3 = &#123;</span><br><span class="line">        <span class="string">'subject_id'</span>: [<span class="string">'1'</span>, <span class="string">'2'</span>, <span class="string">'3'</span>, <span class="string">'4'</span>, <span class="string">'5'</span>, <span class="string">'7'</span>, <span class="string">'8'</span>, <span class="string">'9'</span>, <span class="string">'10'</span>, <span class="string">'11'</span>],</span><br><span class="line">        <span class="string">'test_id'</span>: [<span class="number">51</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">61</span>, <span class="number">16</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">1</span>, <span class="number">61</span>, <span class="number">16</span>]&#125;</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 运行以下代码</span></span><br><span class="line">data1 = pd.DataFrame(raw_data_1, columns = [<span class="string">'subject_id'</span>, <span class="string">'first_name'</span>, <span class="string">'last_name'</span>])</span><br><span class="line">data2 = pd.DataFrame(raw_data_2, columns = [<span class="string">'subject_id'</span>, <span class="string">'first_name'</span>, <span class="string">'last_name'</span>])</span><br><span class="line">data3 = pd.DataFrame(raw_data_3, columns = [<span class="string">'subject_id'</span>,<span class="string">'test_id'</span>])</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data1</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>subject_id</th>      <th>first_name</th>      <th>last_name</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>1</td>      <td>Alex</td>      <td>Anderson</td>    </tr>    <tr>      <th>1</th>      <td>2</td>      <td>Amy</td>      <td>Ackerman</td>    </tr>    <tr>      <th>2</th>      <td>3</td>      <td>Allen</td>      <td>Ali</td>    </tr>    <tr>      <th>3</th>      <td>4</td>      <td>Alice</td>      <td>Aoni</td>    </tr>    <tr>      <th>4</th>      <td>5</td>      <td>Ayoung</td>      <td>Atiches</td>    </tr>  </tbody></table></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data2</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>subject_id</th>      <th>first_name</th>      <th>last_name</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>4</td>      <td>Billy</td>      <td>Bonder</td>    </tr>    <tr>      <th>1</th>      <td>5</td>      <td>Brian</td>      <td>Black</td>    </tr>    <tr>      <th>2</th>      <td>6</td>      <td>Bran</td>      <td>Balwner</td>    </tr>    <tr>      <th>3</th>      <td>7</td>      <td>Bryce</td>      <td>Brice</td>    </tr>    <tr>      <th>4</th>      <td>8</td>      <td>Betty</td>      <td>Btisan</td>    </tr>  </tbody></table></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data3</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>subject_id</th>      <th>test_id</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>1</td>      <td>51</td>    </tr>    <tr>      <th>1</th>      <td>2</td>      <td>15</td>    </tr>    <tr>      <th>2</th>      <td>3</td>      <td>15</td>    </tr>    <tr>      <th>3</th>      <td>4</td>      <td>61</td>    </tr>    <tr>      <th>4</th>      <td>5</td>      <td>16</td>    </tr>    <tr>      <th>5</th>      <td>7</td>      <td>14</td>    </tr>    <tr>      <th>6</th>      <td>8</td>      <td>15</td>    </tr>    <tr>      <th>7</th>      <td>9</td>      <td>1</td>    </tr>    <tr>      <th>8</th>      <td>10</td>      <td>61</td>    </tr>    <tr>      <th>9</th>      <td>11</td>      <td>16</td>    </tr>  </tbody></table></div><h2 id="将data1和data2两个数据框按照行的维度进行合并，命名为all-data"><a href="#将data1和data2两个数据框按照行的维度进行合并，命名为all-data" class="headerlink" title="将data1和data2两个数据框按照行的维度进行合并，命名为all_data"></a>将data1和data2两个数据框按照行的维度进行合并，命名为all_data</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">all_data = pd.concat([data1, data2], axis=<span class="number">0</span>)</span><br><span class="line">all_data</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>subject_id</th>      <th>first_name</th>      <th>last_name</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>1</td>      <td>Alex</td>      <td>Anderson</td>    </tr>    <tr>      <th>1</th>      <td>2</td>      <td>Amy</td>      <td>Ackerman</td>    </tr>    <tr>      <th>2</th>      <td>3</td>      <td>Allen</td>      <td>Ali</td>    </tr>    <tr>      <th>3</th>      <td>4</td>      <td>Alice</td>      <td>Aoni</td>    </tr>    <tr>      <th>4</th>      <td>5</td>      <td>Ayoung</td>      <td>Atiches</td>    </tr>    <tr>      <th>0</th>      <td>4</td>      <td>Billy</td>      <td>Bonder</td>    </tr>    <tr>      <th>1</th>      <td>5</td>      <td>Brian</td>      <td>Black</td>    </tr>    <tr>      <th>2</th>      <td>6</td>      <td>Bran</td>      <td>Balwner</td>    </tr>    <tr>      <th>3</th>      <td>7</td>      <td>Bryce</td>      <td>Brice</td>    </tr>    <tr>      <th>4</th>      <td>8</td>      <td>Betty</td>      <td>Btisan</td>    </tr>  </tbody></table></div><p>将data1和data2两个数据框按照列的维度进行合并，命名为all_data_col</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">all_data_col = pd.concat([data1, data2], axis=<span class="number">1</span>)</span><br><span class="line">all_data_col</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>subject_id</th>      <th>first_name</th>      <th>last_name</th>      <th>subject_id</th>      <th>first_name</th>      <th>last_name</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>1</td>      <td>Alex</td>      <td>Anderson</td>      <td>4</td>      <td>Billy</td>      <td>Bonder</td>    </tr>    <tr>      <th>1</th>      <td>2</td>      <td>Amy</td>      <td>Ackerman</td>      <td>5</td>      <td>Brian</td>      <td>Black</td>    </tr>    <tr>      <th>2</th>      <td>3</td>      <td>Allen</td>      <td>Ali</td>      <td>6</td>      <td>Bran</td>      <td>Balwner</td>    </tr>    <tr>      <th>3</th>      <td>4</td>      <td>Alice</td>      <td>Aoni</td>      <td>7</td>      <td>Bryce</td>      <td>Brice</td>    </tr>    <tr>      <th>4</th>      <td>5</td>      <td>Ayoung</td>      <td>Atiches</td>      <td>8</td>      <td>Betty</td>      <td>Btisan</td>    </tr>  </tbody></table></div><h2 id="按照subject-id的值对all-data和data3作合并"><a href="#按照subject-id的值对all-data和data3作合并" class="headerlink" title="按照subject_id的值对all_data和data3作合并"></a>按照subject_id的值对all_data和data3作合并</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">%%time</span><br><span class="line">pd.merge(all_data, data3, on=<span class="string">'subject_id'</span>)</span><br></pre></td></tr></table></figure></div><pre><code>Wall time: 3.07 ms</code></pre><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>subject_id</th>      <th>first_name</th>      <th>last_name</th>      <th>test_id</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>1</td>      <td>Alex</td>      <td>Anderson</td>      <td>51</td>    </tr>    <tr>      <th>1</th>      <td>2</td>      <td>Amy</td>      <td>Ackerman</td>      <td>15</td>    </tr>    <tr>      <th>2</th>      <td>3</td>      <td>Allen</td>      <td>Ali</td>      <td>15</td>    </tr>    <tr>      <th>3</th>      <td>4</td>      <td>Alice</td>      <td>Aoni</td>      <td>61</td>    </tr>    <tr>      <th>4</th>      <td>4</td>      <td>Billy</td>      <td>Bonder</td>      <td>61</td>    </tr>    <tr>      <th>5</th>      <td>5</td>      <td>Ayoung</td>      <td>Atiches</td>      <td>16</td>    </tr>    <tr>      <th>6</th>      <td>5</td>      <td>Brian</td>      <td>Black</td>      <td>16</td>    </tr>    <tr>      <th>7</th>      <td>7</td>      <td>Bryce</td>      <td>Brice</td>      <td>14</td>    </tr>    <tr>      <th>8</th>      <td>8</td>      <td>Betty</td>      <td>Btisan</td>      <td>15</td>    </tr>  </tbody></table></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">%%time</span><br><span class="line">all_data.join(data3.set_index(<span class="string">'subject_id'</span>),on=<span class="string">'subject_id'</span>)</span><br></pre></td></tr></table></figure></div><pre><code>Wall time: 3.38 ms</code></pre><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>subject_id</th>      <th>first_name</th>      <th>last_name</th>      <th>test_id</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>1</td>      <td>Alex</td>      <td>Anderson</td>      <td>51.0</td>    </tr>    <tr>      <th>1</th>      <td>2</td>      <td>Amy</td>      <td>Ackerman</td>      <td>15.0</td>    </tr>    <tr>      <th>2</th>      <td>3</td>      <td>Allen</td>      <td>Ali</td>      <td>15.0</td>    </tr>    <tr>      <th>3</th>      <td>4</td>      <td>Alice</td>      <td>Aoni</td>      <td>61.0</td>    </tr>    <tr>      <th>4</th>      <td>5</td>      <td>Ayoung</td>      <td>Atiches</td>      <td>16.0</td>    </tr>    <tr>      <th>0</th>      <td>4</td>      <td>Billy</td>      <td>Bonder</td>      <td>61.0</td>    </tr>    <tr>      <th>1</th>      <td>5</td>      <td>Brian</td>      <td>Black</td>      <td>16.0</td>    </tr>    <tr>      <th>2</th>      <td>6</td>      <td>Bran</td>      <td>Balwner</td>      <td>NaN</td>    </tr>    <tr>      <th>3</th>      <td>7</td>      <td>Bryce</td>      <td>Brice</td>      <td>14.0</td>    </tr>    <tr>      <th>4</th>      <td>8</td>      <td>Betty</td>      <td>Btisan</td>      <td>15.0</td>    </tr>  </tbody></table></div><h2 id="对data1和data2按照subject-id作连接"><a href="#对data1和data2按照subject-id作连接" class="headerlink" title="对data1和data2按照subject_id作连接"></a>对data1和data2按照subject_id作连接</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pd.concat([data1, data2])</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>subject_id</th>      <th>first_name</th>      <th>last_name</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>1</td>      <td>Alex</td>      <td>Anderson</td>    </tr>    <tr>      <th>1</th>      <td>2</td>      <td>Amy</td>      <td>Ackerman</td>    </tr>    <tr>      <th>2</th>      <td>3</td>      <td>Allen</td>      <td>Ali</td>    </tr>    <tr>      <th>3</th>      <td>4</td>      <td>Alice</td>      <td>Aoni</td>    </tr>    <tr>      <th>4</th>      <td>5</td>      <td>Ayoung</td>      <td>Atiches</td>    </tr>    <tr>      <th>0</th>      <td>4</td>      <td>Billy</td>      <td>Bonder</td>    </tr>    <tr>      <th>1</th>      <td>5</td>      <td>Brian</td>      <td>Black</td>    </tr>    <tr>      <th>2</th>      <td>6</td>      <td>Bran</td>      <td>Balwner</td>    </tr>    <tr>      <th>3</th>      <td>7</td>      <td>Bryce</td>      <td>Brice</td>    </tr>    <tr>      <th>4</th>      <td>8</td>      <td>Betty</td>      <td>Btisan</td>    </tr>  </tbody></table></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pd.merge(data1, data2, on=<span class="string">'subject_id'</span>, how=<span class="string">'outer'</span>)</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>subject_id</th>      <th>first_name_x</th>      <th>last_name_x</th>      <th>first_name_y</th>      <th>last_name_y</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>1</td>      <td>Alex</td>      <td>Anderson</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <th>1</th>      <td>2</td>      <td>Amy</td>      <td>Ackerman</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <th>2</th>      <td>3</td>      <td>Allen</td>      <td>Ali</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <th>3</th>      <td>4</td>      <td>Alice</td>      <td>Aoni</td>      <td>Billy</td>      <td>Bonder</td>    </tr>    <tr>      <th>4</th>      <td>5</td>      <td>Ayoung</td>      <td>Atiches</td>      <td>Brian</td>      <td>Black</td>    </tr>    <tr>      <th>5</th>      <td>6</td>      <td>NaN</td>      <td>NaN</td>      <td>Bran</td>      <td>Balwner</td>    </tr>    <tr>      <th>6</th>      <td>7</td>      <td>NaN</td>      <td>NaN</td>      <td>Bryce</td>      <td>Brice</td>    </tr>    <tr>      <th>7</th>      <td>8</td>      <td>NaN</td>      <td>NaN</td>      <td>Betty</td>      <td>Btisan</td>    </tr>  </tbody></table></div><h1 id="探索风速数据-描述统计"><a href="#探索风速数据-描述统计" class="headerlink" title="探索风速数据(描述统计)"></a>探索风速数据(描述统计)</h1><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> datetime</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">path6 = <span class="string">"wind.data"</span></span><br><span class="line">data = pd.read_table(path6, sep = <span class="string">"\s+"</span>, parse_dates = [[<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>]])</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data.head()</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Yr_Mo_Dy</th>      <th>RPT</th>      <th>VAL</th>      <th>ROS</th>      <th>KIL</th>      <th>SHA</th>      <th>BIR</th>      <th>DUB</th>      <th>CLA</th>      <th>MUL</th>      <th>CLO</th>      <th>BEL</th>      <th>MAL</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>2061-01-01</td>      <td>15.04</td>      <td>14.96</td>      <td>13.17</td>      <td>9.29</td>      <td>NaN</td>      <td>9.87</td>      <td>13.67</td>      <td>10.25</td>      <td>10.83</td>      <td>12.58</td>      <td>18.50</td>      <td>15.04</td>    </tr>    <tr>      <th>1</th>      <td>2061-01-02</td>      <td>14.71</td>      <td>NaN</td>      <td>10.83</td>      <td>6.50</td>      <td>12.62</td>      <td>7.67</td>      <td>11.50</td>      <td>10.04</td>      <td>9.79</td>      <td>9.67</td>      <td>17.54</td>      <td>13.83</td>    </tr>    <tr>      <th>2</th>      <td>2061-01-03</td>      <td>18.50</td>      <td>16.88</td>      <td>12.33</td>      <td>10.13</td>      <td>11.17</td>      <td>6.17</td>      <td>11.25</td>      <td>NaN</td>      <td>8.50</td>      <td>7.67</td>      <td>12.75</td>      <td>12.71</td>    </tr>    <tr>      <th>3</th>      <td>2061-01-04</td>      <td>10.58</td>      <td>6.63</td>      <td>11.75</td>      <td>4.58</td>      <td>4.54</td>      <td>2.88</td>      <td>8.63</td>      <td>1.79</td>      <td>5.83</td>      <td>5.88</td>      <td>5.46</td>      <td>10.88</td>    </tr>    <tr>      <th>4</th>      <td>2061-01-05</td>      <td>13.33</td>      <td>13.25</td>      <td>11.42</td>      <td>6.17</td>      <td>10.71</td>      <td>8.21</td>      <td>11.92</td>      <td>6.54</td>      <td>10.92</td>      <td>10.34</td>      <td>12.92</td>      <td>11.83</td>    </tr>  </tbody></table></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data.describe()</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>RPT</th>      <th>VAL</th>      <th>ROS</th>      <th>KIL</th>      <th>SHA</th>      <th>BIR</th>      <th>DUB</th>      <th>CLA</th>      <th>MUL</th>      <th>CLO</th>      <th>BEL</th>      <th>MAL</th>    </tr>  </thead>  <tbody>    <tr>      <th>count</th>      <td>6568.000000</td>      <td>6571.000000</td>      <td>6572.000000</td>      <td>6569.000000</td>      <td>6572.000000</td>      <td>6574.000000</td>      <td>6571.000000</td>      <td>6572.000000</td>      <td>6571.000000</td>      <td>6573.000000</td>      <td>6574.000000</td>      <td>6570.000000</td>    </tr>    <tr>      <th>mean</th>      <td>12.362987</td>      <td>10.644314</td>      <td>11.660526</td>      <td>6.306468</td>      <td>10.455834</td>      <td>7.092254</td>      <td>9.797343</td>      <td>8.495053</td>      <td>8.493590</td>      <td>8.707332</td>      <td>13.121007</td>      <td>15.599079</td>    </tr>    <tr>      <th>std</th>      <td>5.618413</td>      <td>5.267356</td>      <td>5.008450</td>      <td>3.605811</td>      <td>4.936125</td>      <td>3.968683</td>      <td>4.977555</td>      <td>4.499449</td>      <td>4.166872</td>      <td>4.503954</td>      <td>5.835037</td>      <td>6.699794</td>    </tr>    <tr>      <th>min</th>      <td>0.670000</td>      <td>0.210000</td>      <td>1.500000</td>      <td>0.000000</td>      <td>0.130000</td>      <td>0.000000</td>      <td>0.000000</td>      <td>0.000000</td>      <td>0.000000</td>      <td>0.040000</td>      <td>0.130000</td>      <td>0.670000</td>    </tr>    <tr>      <th>25%</th>      <td>8.120000</td>      <td>6.670000</td>      <td>8.000000</td>      <td>3.580000</td>      <td>6.750000</td>      <td>4.000000</td>      <td>6.000000</td>      <td>5.090000</td>      <td>5.370000</td>      <td>5.330000</td>      <td>8.710000</td>      <td>10.710000</td>    </tr>    <tr>      <th>50%</th>      <td>11.710000</td>      <td>10.170000</td>      <td>10.920000</td>      <td>5.750000</td>      <td>9.960000</td>      <td>6.830000</td>      <td>9.210000</td>      <td>8.080000</td>      <td>8.170000</td>      <td>8.290000</td>      <td>12.500000</td>      <td>15.000000</td>    </tr>    <tr>      <th>75%</th>      <td>15.920000</td>      <td>14.040000</td>      <td>14.670000</td>      <td>8.420000</td>      <td>13.540000</td>      <td>9.670000</td>      <td>12.960000</td>      <td>11.420000</td>      <td>11.190000</td>      <td>11.630000</td>      <td>16.880000</td>      <td>19.830000</td>    </tr>    <tr>      <th>max</th>      <td>35.800000</td>      <td>33.370000</td>      <td>33.840000</td>      <td>28.460000</td>      <td>37.540000</td>      <td>26.160000</td>      <td>30.370000</td>      <td>31.080000</td>      <td>25.880000</td>      <td>28.210000</td>      <td>42.380000</td>      <td>42.540000</td>    </tr>  </tbody></table></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data.info()</span><br></pre></td></tr></table></figure></div><pre><code>&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;RangeIndex: 6574 entries, 0 to 6573Data columns (total 13 columns):Yr_Mo_Dy    6574 non-null datetime64[ns]RPT         6568 non-null float64VAL         6571 non-null float64ROS         6572 non-null float64KIL         6569 non-null float64SHA         6572 non-null float64BIR         6574 non-null float64DUB         6571 non-null float64CLA         6572 non-null float64MUL         6571 non-null float64CLO         6573 non-null float64BEL         6574 non-null float64MAL         6570 non-null float64dtypes: datetime64[ns](1), float64(12)memory usage: 667.8 KB</code></pre><h2 id="2061年？我们真的有这一年的数据？创建一个函数并用它去修复这个bug"><a href="#2061年？我们真的有这一年的数据？创建一个函数并用它去修复这个bug" class="headerlink" title="2061年？我们真的有这一年的数据？创建一个函数并用它去修复这个bug"></a>2061年？我们真的有这一年的数据？创建一个函数并用它去修复这个bug</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fix_year</span><span class="params">(date)</span>:</span></span><br><span class="line">    new_year = date.year - <span class="number">100</span> <span class="keyword">if</span> date.year&gt; <span class="number">1989</span> <span class="keyword">else</span> date.year</span><br><span class="line">    <span class="keyword">return</span> datetime.date(new_year, date.month, date.day)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data[<span class="string">'Yr_Mo_Dy'</span>] = data[<span class="string">'Yr_Mo_Dy'</span>].apply(fix_year)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data.head()</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Yr_Mo_Dy</th>      <th>RPT</th>      <th>VAL</th>      <th>ROS</th>      <th>KIL</th>      <th>SHA</th>      <th>BIR</th>      <th>DUB</th>      <th>CLA</th>      <th>MUL</th>      <th>CLO</th>      <th>BEL</th>      <th>MAL</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>1961-01-01</td>      <td>15.04</td>      <td>14.96</td>      <td>13.17</td>      <td>9.29</td>      <td>NaN</td>      <td>9.87</td>      <td>13.67</td>      <td>10.25</td>      <td>10.83</td>      <td>12.58</td>      <td>18.50</td>      <td>15.04</td>    </tr>    <tr>      <th>1</th>      <td>1961-01-02</td>      <td>14.71</td>      <td>NaN</td>      <td>10.83</td>      <td>6.50</td>      <td>12.62</td>      <td>7.67</td>      <td>11.50</td>      <td>10.04</td>      <td>9.79</td>      <td>9.67</td>      <td>17.54</td>      <td>13.83</td>    </tr>    <tr>      <th>2</th>      <td>1961-01-03</td>      <td>18.50</td>      <td>16.88</td>      <td>12.33</td>      <td>10.13</td>      <td>11.17</td>      <td>6.17</td>      <td>11.25</td>      <td>NaN</td>      <td>8.50</td>      <td>7.67</td>      <td>12.75</td>      <td>12.71</td>    </tr>    <tr>      <th>3</th>      <td>1961-01-04</td>      <td>10.58</td>      <td>6.63</td>      <td>11.75</td>      <td>4.58</td>      <td>4.54</td>      <td>2.88</td>      <td>8.63</td>      <td>1.79</td>      <td>5.83</td>      <td>5.88</td>      <td>5.46</td>      <td>10.88</td>    </tr>    <tr>      <th>4</th>      <td>1961-01-05</td>      <td>13.33</td>      <td>13.25</td>      <td>11.42</td>      <td>6.17</td>      <td>10.71</td>      <td>8.21</td>      <td>11.92</td>      <td>6.54</td>      <td>10.92</td>      <td>10.34</td>      <td>12.92</td>      <td>11.83</td>    </tr>  </tbody></table></div><h2 id="将日期设为索引，注意数据类型，应该是datetime64-ns"><a href="#将日期设为索引，注意数据类型，应该是datetime64-ns" class="headerlink" title="将日期设为索引，注意数据类型，应该是datetime64[ns]"></a>将日期设为索引，注意数据类型，应该是datetime64[ns]</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">%%time</span><br><span class="line">data[<span class="string">'Yr_Mo_Dy'</span>]= pd.to_datetime(data[<span class="string">"Yr_Mo_Dy"</span>])</span><br><span class="line">data = data.set_index(<span class="string">'Yr_Mo_Dy'</span>)</span><br><span class="line">data.head()</span><br></pre></td></tr></table></figure></div><pre><code>Wall time: 3.41 ms</code></pre><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>RPT</th>      <th>VAL</th>      <th>ROS</th>      <th>KIL</th>      <th>SHA</th>      <th>BIR</th>      <th>DUB</th>      <th>CLA</th>      <th>MUL</th>      <th>CLO</th>      <th>BEL</th>      <th>MAL</th>    </tr>    <tr>      <th>Yr_Mo_Dy</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>1961-01-01</th>      <td>15.04</td>      <td>14.96</td>      <td>13.17</td>      <td>9.29</td>      <td>NaN</td>      <td>9.87</td>      <td>13.67</td>      <td>10.25</td>      <td>10.83</td>      <td>12.58</td>      <td>18.50</td>      <td>15.04</td>    </tr>    <tr>      <th>1961-01-02</th>      <td>14.71</td>      <td>NaN</td>      <td>10.83</td>      <td>6.50</td>      <td>12.62</td>      <td>7.67</td>      <td>11.50</td>      <td>10.04</td>      <td>9.79</td>      <td>9.67</td>      <td>17.54</td>      <td>13.83</td>    </tr>    <tr>      <th>1961-01-03</th>      <td>18.50</td>      <td>16.88</td>      <td>12.33</td>      <td>10.13</td>      <td>11.17</td>      <td>6.17</td>      <td>11.25</td>      <td>NaN</td>      <td>8.50</td>      <td>7.67</td>      <td>12.75</td>      <td>12.71</td>    </tr>    <tr>      <th>1961-01-04</th>      <td>10.58</td>      <td>6.63</td>      <td>11.75</td>      <td>4.58</td>      <td>4.54</td>      <td>2.88</td>      <td>8.63</td>      <td>1.79</td>      <td>5.83</td>      <td>5.88</td>      <td>5.46</td>      <td>10.88</td>    </tr>    <tr>      <th>1961-01-05</th>      <td>13.33</td>      <td>13.25</td>      <td>11.42</td>      <td>6.17</td>      <td>10.71</td>      <td>8.21</td>      <td>11.92</td>      <td>6.54</td>      <td>10.92</td>      <td>10.34</td>      <td>12.92</td>      <td>11.83</td>    </tr>  </tbody></table></div><h2 id="对应每一个location，一共有多少数据值缺失"><a href="#对应每一个location，一共有多少数据值缺失" class="headerlink" title="对应每一个location，一共有多少数据值缺失"></a>对应每一个location，一共有多少数据值缺失</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data.isnull().sum()</span><br></pre></td></tr></table></figure></div><pre><code>RPT    6VAL    3ROS    2KIL    5SHA    2BIR    0DUB    3CLA    2MUL    3CLO    1BEL    0MAL    4dtype: int64</code></pre><h2 id="对应每一个location，一共有多少完整的数据值"><a href="#对应每一个location，一共有多少完整的数据值" class="headerlink" title="对应每一个location，一共有多少完整的数据值"></a>对应每一个location，一共有多少完整的数据值</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data.count()</span><br></pre></td></tr></table></figure></div><pre><code>RPT    6568VAL    6571ROS    6572KIL    6569SHA    6572BIR    6574DUB    6571CLA    6572MUL    6571CLO    6573BEL    6574MAL    6570dtype: int64</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#官方答案</span></span><br><span class="line">data.shape[<span class="number">0</span>] - data.isnull().sum()</span><br></pre></td></tr></table></figure></div><pre><code>RPT    6568VAL    6571ROS    6572KIL    6569SHA    6572BIR    6574DUB    6571CLA    6572MUL    6571CLO    6573BEL    6574MAL    6570dtype: int64</code></pre><h2 id="对于全体数据，计算风速的平均值"><a href="#对于全体数据，计算风速的平均值" class="headerlink" title="对于全体数据，计算风速的平均值"></a>对于全体数据，计算风速的平均值</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data.mean().mean()</span><br></pre></td></tr></table></figure></div><pre><code>10.227982360836924</code></pre><h2 id="创建一个名为loc-stats的数据框去计算并存储每个location的风速最小值，最大值，平均值和标准差"><a href="#创建一个名为loc-stats的数据框去计算并存储每个location的风速最小值，最大值，平均值和标准差" class="headerlink" title="创建一个名为loc_stats的数据框去计算并存储每个location的风速最小值，最大值，平均值和标准差"></a>创建一个名为loc_stats的数据框去计算并存储每个location的风速最小值，最大值，平均值和标准差</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">loc_states = pd.DataFrame()</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">loc_states[<span class="string">'min'</span>] = data.min()</span><br><span class="line">loc_states[<span class="string">'max'</span>] = data.max()</span><br><span class="line">loc_states[<span class="string">'mean'</span>] = data.mean()</span><br><span class="line">loc_states[<span class="string">'std'</span>] = data.std()</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">loc_states</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>min</th>      <th>max</th>      <th>mean</th>      <th>std</th>    </tr>  </thead>  <tbody>    <tr>      <th>RPT</th>      <td>0.67</td>      <td>35.80</td>      <td>12.362987</td>      <td>5.618413</td>    </tr>    <tr>      <th>VAL</th>      <td>0.21</td>      <td>33.37</td>      <td>10.644314</td>      <td>5.267356</td>    </tr>    <tr>      <th>ROS</th>      <td>1.50</td>      <td>33.84</td>      <td>11.660526</td>      <td>5.008450</td>    </tr>    <tr>      <th>KIL</th>      <td>0.00</td>      <td>28.46</td>      <td>6.306468</td>      <td>3.605811</td>    </tr>    <tr>      <th>SHA</th>      <td>0.13</td>      <td>37.54</td>      <td>10.455834</td>      <td>4.936125</td>    </tr>    <tr>      <th>BIR</th>      <td>0.00</td>      <td>26.16</td>      <td>7.092254</td>      <td>3.968683</td>    </tr>    <tr>      <th>DUB</th>      <td>0.00</td>      <td>30.37</td>      <td>9.797343</td>      <td>4.977555</td>    </tr>    <tr>      <th>CLA</th>      <td>0.00</td>      <td>31.08</td>      <td>8.495053</td>      <td>4.499449</td>    </tr>    <tr>      <th>MUL</th>      <td>0.00</td>      <td>25.88</td>      <td>8.493590</td>      <td>4.166872</td>    </tr>    <tr>      <th>CLO</th>      <td>0.04</td>      <td>28.21</td>      <td>8.707332</td>      <td>4.503954</td>    </tr>    <tr>      <th>BEL</th>      <td>0.13</td>      <td>42.38</td>      <td>13.121007</td>      <td>5.835037</td>    </tr>    <tr>      <th>MAL</th>      <td>0.67</td>      <td>42.54</td>      <td>15.599079</td>      <td>6.699794</td>    </tr>  </tbody></table></div><h2 id="创建一个名为day-stats的数据框去计算并存储所有location的风速最小值，最大值，平均值和标准差"><a href="#创建一个名为day-stats的数据框去计算并存储所有location的风速最小值，最大值，平均值和标准差" class="headerlink" title="创建一个名为day_stats的数据框去计算并存储所有location的风速最小值，最大值，平均值和标准差"></a>创建一个名为day_stats的数据框去计算并存储所有location的风速最小值，最大值，平均值和标准差</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">%%time</span><br><span class="line">day_stats = pd.Series()</span><br><span class="line">data_stack = data.stack()</span><br><span class="line">day_stats[<span class="string">'min'</span>] = data_stack.min() <span class="comment"># min</span></span><br><span class="line">day_stats[<span class="string">'max'</span>] = data_stack.max() <span class="comment"># max </span></span><br><span class="line">day_stats[<span class="string">'mean'</span>] = data_stack.mean() <span class="comment"># mean</span></span><br><span class="line">day_stats[<span class="string">'std'</span>] = data_stack.std(ddof=<span class="number">1</span>) <span class="comment"># standard deviations</span></span><br><span class="line"></span><br><span class="line">day_stats.head()</span><br></pre></td></tr></table></figure></div><pre><code>Wall time: 11 msmin      0.000000max     42.540000mean    10.227884std      5.603872dtype: float64</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 官方答案</span></span><br><span class="line"><span class="comment"># create the dataframe</span></span><br><span class="line">day_stats = pd.DataFrame()</span><br><span class="line"></span><br><span class="line"><span class="comment"># this time we determine axis equals to one so it gets each row.</span></span><br><span class="line">day_stats[<span class="string">'min'</span>] = data.min(axis = <span class="number">1</span>) <span class="comment"># min</span></span><br><span class="line">day_stats[<span class="string">'max'</span>] = data.max(axis = <span class="number">1</span>) <span class="comment"># max </span></span><br><span class="line">day_stats[<span class="string">'mean'</span>] = data.mean(axis = <span class="number">1</span>) <span class="comment"># mean</span></span><br><span class="line">day_stats[<span class="string">'std'</span>] = data.std(axis = <span class="number">1</span>) <span class="comment"># standard deviations</span></span><br><span class="line"></span><br><span class="line">day_stats.head()</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>min</th>      <th>max</th>      <th>mean</th>      <th>std</th>    </tr>    <tr>      <th>Yr_Mo_Dy</th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>1961-01-01</th>      <td>9.29</td>      <td>18.50</td>      <td>13.018182</td>      <td>2.808875</td>    </tr>    <tr>      <th>1961-01-02</th>      <td>6.50</td>      <td>17.54</td>      <td>11.336364</td>      <td>3.188994</td>    </tr>    <tr>      <th>1961-01-03</th>      <td>6.17</td>      <td>18.50</td>      <td>11.641818</td>      <td>3.681912</td>    </tr>    <tr>      <th>1961-01-04</th>      <td>1.79</td>      <td>11.75</td>      <td>6.619167</td>      <td>3.198126</td>    </tr>    <tr>      <th>1961-01-05</th>      <td>6.17</td>      <td>13.33</td>      <td>10.630000</td>      <td>2.445356</td>    </tr>  </tbody></table></div><h2 id="对于每一个location，计算一月份的平均风速¶"><a href="#对于每一个location，计算一月份的平均风速¶" class="headerlink" title="对于每一个location，计算一月份的平均风速¶"></a>对于每一个location，计算一月份的平均风速¶</h2><p>注意，1961年的1月和1962年的1月应该区别对待</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">data[<span class="string">'date'</span>] = data.index</span><br><span class="line"><span class="comment"># creates a column for each value from date</span></span><br><span class="line">data[<span class="string">'month'</span>] = data[<span class="string">'date'</span>].apply(<span class="keyword">lambda</span> date: date.month)</span><br><span class="line">data[<span class="string">'year'</span>] = data[<span class="string">'date'</span>].apply(<span class="keyword">lambda</span> date: date.year)</span><br><span class="line">data[<span class="string">'day'</span>] = data[<span class="string">'date'</span>].apply(<span class="keyword">lambda</span> date: date.day)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># gets all value from the month 1 and assign to janyary_winds</span></span><br><span class="line">january_winds = data[data[<span class="string">'month'</span>] == <span class="number">1</span>]</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">january_winds.loc[:,<span class="string">'RPT'</span>:<span class="string">"MAL"</span>].mean()</span><br></pre></td></tr></table></figure></div><pre><code>RPT    14.847325VAL    12.914560ROS    13.299624KIL     7.199498SHA    11.667734BIR     8.054839DUB    11.819355CLA     9.512047MUL     9.543208CLO    10.053566BEL    14.550520MAL    18.028763dtype: float64</code></pre><h2 id="对于数据记录按照年为频率取样"><a href="#对于数据记录按照年为频率取样" class="headerlink" title="对于数据记录按照年为频率取样"></a>对于数据记录按照年为频率取样</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">%%time</span><br><span class="line">data.query(<span class="string">'month == 1 and day == 1'</span>)</span><br></pre></td></tr></table></figure></div><pre><code>Wall time: 3.38 ms</code></pre><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>RPT</th>      <th>VAL</th>      <th>ROS</th>      <th>KIL</th>      <th>SHA</th>      <th>BIR</th>      <th>DUB</th>      <th>CLA</th>      <th>MUL</th>      <th>CLO</th>      <th>BEL</th>      <th>MAL</th>      <th>date</th>      <th>month</th>      <th>year</th>      <th>day</th>    </tr>    <tr>      <th>Yr_Mo_Dy</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>1961-01-01</th>      <td>15.04</td>      <td>14.96</td>      <td>13.17</td>      <td>9.29</td>      <td>NaN</td>      <td>9.87</td>      <td>13.67</td>      <td>10.25</td>      <td>10.83</td>      <td>12.58</td>      <td>18.50</td>      <td>15.04</td>      <td>1961-01-01</td>      <td>1</td>      <td>1961</td>      <td>1</td>    </tr>    <tr>      <th>1962-01-01</th>      <td>9.29</td>      <td>3.42</td>      <td>11.54</td>      <td>3.50</td>      <td>2.21</td>      <td>1.96</td>      <td>10.41</td>      <td>2.79</td>      <td>3.54</td>      <td>5.17</td>      <td>4.38</td>      <td>7.92</td>      <td>1962-01-01</td>      <td>1</td>      <td>1962</td>      <td>1</td>    </tr>    <tr>      <th>1963-01-01</th>      <td>15.59</td>      <td>13.62</td>      <td>19.79</td>      <td>8.38</td>      <td>12.25</td>      <td>10.00</td>      <td>23.45</td>      <td>15.71</td>      <td>13.59</td>      <td>14.37</td>      <td>17.58</td>      <td>34.13</td>      <td>1963-01-01</td>      <td>1</td>      <td>1963</td>      <td>1</td>    </tr>    <tr>      <th>1964-01-01</th>      <td>25.80</td>      <td>22.13</td>      <td>18.21</td>      <td>13.25</td>      <td>21.29</td>      <td>14.79</td>      <td>14.12</td>      <td>19.58</td>      <td>13.25</td>      <td>16.75</td>      <td>28.96</td>      <td>21.00</td>      <td>1964-01-01</td>      <td>1</td>      <td>1964</td>      <td>1</td>    </tr>    <tr>      <th>1965-01-01</th>      <td>9.54</td>      <td>11.92</td>      <td>9.00</td>      <td>4.38</td>      <td>6.08</td>      <td>5.21</td>      <td>10.25</td>      <td>6.08</td>      <td>5.71</td>      <td>8.63</td>      <td>12.04</td>      <td>17.41</td>      <td>1965-01-01</td>      <td>1</td>      <td>1965</td>      <td>1</td>    </tr>    <tr>      <th>1966-01-01</th>      <td>22.04</td>      <td>21.50</td>      <td>17.08</td>      <td>12.75</td>      <td>22.17</td>      <td>15.59</td>      <td>21.79</td>      <td>18.12</td>      <td>16.66</td>      <td>17.83</td>      <td>28.33</td>      <td>23.79</td>      <td>1966-01-01</td>      <td>1</td>      <td>1966</td>      <td>1</td>    </tr>    <tr>      <th>1967-01-01</th>      <td>6.46</td>      <td>4.46</td>      <td>6.50</td>      <td>3.21</td>      <td>6.67</td>      <td>3.79</td>      <td>11.38</td>      <td>3.83</td>      <td>7.71</td>      <td>9.08</td>      <td>10.67</td>      <td>20.91</td>      <td>1967-01-01</td>      <td>1</td>      <td>1967</td>      <td>1</td>    </tr>    <tr>      <th>1968-01-01</th>      <td>30.04</td>      <td>17.88</td>      <td>16.25</td>      <td>16.25</td>      <td>21.79</td>      <td>12.54</td>      <td>18.16</td>      <td>16.62</td>      <td>18.75</td>      <td>17.62</td>      <td>22.25</td>      <td>27.29</td>      <td>1968-01-01</td>      <td>1</td>      <td>1968</td>      <td>1</td>    </tr>    <tr>      <th>1969-01-01</th>      <td>6.13</td>      <td>1.63</td>      <td>5.41</td>      <td>1.08</td>      <td>2.54</td>      <td>1.00</td>      <td>8.50</td>      <td>2.42</td>      <td>4.58</td>      <td>6.34</td>      <td>9.17</td>      <td>16.71</td>      <td>1969-01-01</td>      <td>1</td>      <td>1969</td>      <td>1</td>    </tr>    <tr>      <th>1970-01-01</th>      <td>9.59</td>      <td>2.96</td>      <td>11.79</td>      <td>3.42</td>      <td>6.13</td>      <td>4.08</td>      <td>9.00</td>      <td>4.46</td>      <td>7.29</td>      <td>3.50</td>      <td>7.33</td>      <td>13.00</td>      <td>1970-01-01</td>      <td>1</td>      <td>1970</td>      <td>1</td>    </tr>    <tr>      <th>1971-01-01</th>      <td>3.71</td>      <td>0.79</td>      <td>4.71</td>      <td>0.17</td>      <td>1.42</td>      <td>1.04</td>      <td>4.63</td>      <td>0.75</td>      <td>1.54</td>      <td>1.08</td>      <td>4.21</td>      <td>9.54</td>      <td>1971-01-01</td>      <td>1</td>      <td>1971</td>      <td>1</td>    </tr>    <tr>      <th>1972-01-01</th>      <td>9.29</td>      <td>3.63</td>      <td>14.54</td>      <td>4.25</td>      <td>6.75</td>      <td>4.42</td>      <td>13.00</td>      <td>5.33</td>      <td>10.04</td>      <td>8.54</td>      <td>8.71</td>      <td>19.17</td>      <td>1972-01-01</td>      <td>1</td>      <td>1972</td>      <td>1</td>    </tr>    <tr>      <th>1973-01-01</th>      <td>16.50</td>      <td>15.92</td>      <td>14.62</td>      <td>7.41</td>      <td>8.29</td>      <td>11.21</td>      <td>13.54</td>      <td>7.79</td>      <td>10.46</td>      <td>10.79</td>      <td>13.37</td>      <td>9.71</td>      <td>1973-01-01</td>      <td>1</td>      <td>1973</td>      <td>1</td>    </tr>    <tr>      <th>1974-01-01</th>      <td>23.21</td>      <td>16.54</td>      <td>16.08</td>      <td>9.75</td>      <td>15.83</td>      <td>11.46</td>      <td>9.54</td>      <td>13.54</td>      <td>13.83</td>      <td>16.66</td>      <td>17.21</td>      <td>25.29</td>      <td>1974-01-01</td>      <td>1</td>      <td>1974</td>      <td>1</td>    </tr>    <tr>      <th>1975-01-01</th>      <td>14.04</td>      <td>13.54</td>      <td>11.29</td>      <td>5.46</td>      <td>12.58</td>      <td>5.58</td>      <td>8.12</td>      <td>8.96</td>      <td>9.29</td>      <td>5.17</td>      <td>7.71</td>      <td>11.63</td>      <td>1975-01-01</td>      <td>1</td>      <td>1975</td>      <td>1</td>    </tr>    <tr>      <th>1976-01-01</th>      <td>18.34</td>      <td>17.67</td>      <td>14.83</td>      <td>8.00</td>      <td>16.62</td>      <td>10.13</td>      <td>13.17</td>      <td>9.04</td>      <td>13.13</td>      <td>5.75</td>      <td>11.38</td>      <td>14.96</td>      <td>1976-01-01</td>      <td>1</td>      <td>1976</td>      <td>1</td>    </tr>    <tr>      <th>1977-01-01</th>      <td>20.04</td>      <td>11.92</td>      <td>20.25</td>      <td>9.13</td>      <td>9.29</td>      <td>8.04</td>      <td>10.75</td>      <td>5.88</td>      <td>9.00</td>      <td>9.00</td>      <td>14.88</td>      <td>25.70</td>      <td>1977-01-01</td>      <td>1</td>      <td>1977</td>      <td>1</td>    </tr>    <tr>      <th>1978-01-01</th>      <td>8.33</td>      <td>7.12</td>      <td>7.71</td>      <td>3.54</td>      <td>8.50</td>      <td>7.50</td>      <td>14.71</td>      <td>10.00</td>      <td>11.83</td>      <td>10.00</td>      <td>15.09</td>      <td>20.46</td>      <td>1978-01-01</td>      <td>1</td>      <td>1978</td>      <td>1</td>    </tr>  </tbody></table></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">%%time</span><br><span class="line">data[(data[<span class="string">'month'</span>]==<span class="number">1</span>) &amp; (data[<span class="string">'day'</span>]==<span class="number">1</span>)]</span><br></pre></td></tr></table></figure></div><pre><code>Wall time: 997 µs</code></pre><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>RPT</th>      <th>VAL</th>      <th>ROS</th>      <th>KIL</th>      <th>SHA</th>      <th>BIR</th>      <th>DUB</th>      <th>CLA</th>      <th>MUL</th>      <th>CLO</th>      <th>BEL</th>      <th>MAL</th>      <th>date</th>      <th>month</th>      <th>year</th>      <th>day</th>    </tr>    <tr>      <th>Yr_Mo_Dy</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>1961-01-01</th>      <td>15.04</td>      <td>14.96</td>      <td>13.17</td>      <td>9.29</td>      <td>NaN</td>      <td>9.87</td>      <td>13.67</td>      <td>10.25</td>      <td>10.83</td>      <td>12.58</td>      <td>18.50</td>      <td>15.04</td>      <td>1961-01-01</td>      <td>1</td>      <td>1961</td>      <td>1</td>    </tr>    <tr>      <th>1962-01-01</th>      <td>9.29</td>      <td>3.42</td>      <td>11.54</td>      <td>3.50</td>      <td>2.21</td>      <td>1.96</td>      <td>10.41</td>      <td>2.79</td>      <td>3.54</td>      <td>5.17</td>      <td>4.38</td>      <td>7.92</td>      <td>1962-01-01</td>      <td>1</td>      <td>1962</td>      <td>1</td>    </tr>    <tr>      <th>1963-01-01</th>      <td>15.59</td>      <td>13.62</td>      <td>19.79</td>      <td>8.38</td>      <td>12.25</td>      <td>10.00</td>      <td>23.45</td>      <td>15.71</td>      <td>13.59</td>      <td>14.37</td>      <td>17.58</td>      <td>34.13</td>      <td>1963-01-01</td>      <td>1</td>      <td>1963</td>      <td>1</td>    </tr>    <tr>      <th>1964-01-01</th>      <td>25.80</td>      <td>22.13</td>      <td>18.21</td>      <td>13.25</td>      <td>21.29</td>      <td>14.79</td>      <td>14.12</td>      <td>19.58</td>      <td>13.25</td>      <td>16.75</td>      <td>28.96</td>      <td>21.00</td>      <td>1964-01-01</td>      <td>1</td>      <td>1964</td>      <td>1</td>    </tr>    <tr>      <th>1965-01-01</th>      <td>9.54</td>      <td>11.92</td>      <td>9.00</td>      <td>4.38</td>      <td>6.08</td>      <td>5.21</td>      <td>10.25</td>      <td>6.08</td>      <td>5.71</td>      <td>8.63</td>      <td>12.04</td>      <td>17.41</td>      <td>1965-01-01</td>      <td>1</td>      <td>1965</td>      <td>1</td>    </tr>    <tr>      <th>1966-01-01</th>      <td>22.04</td>      <td>21.50</td>      <td>17.08</td>      <td>12.75</td>      <td>22.17</td>      <td>15.59</td>      <td>21.79</td>      <td>18.12</td>      <td>16.66</td>      <td>17.83</td>      <td>28.33</td>      <td>23.79</td>      <td>1966-01-01</td>      <td>1</td>      <td>1966</td>      <td>1</td>    </tr>    <tr>      <th>1967-01-01</th>      <td>6.46</td>      <td>4.46</td>      <td>6.50</td>      <td>3.21</td>      <td>6.67</td>      <td>3.79</td>      <td>11.38</td>      <td>3.83</td>      <td>7.71</td>      <td>9.08</td>      <td>10.67</td>      <td>20.91</td>      <td>1967-01-01</td>      <td>1</td>      <td>1967</td>      <td>1</td>    </tr>    <tr>      <th>1968-01-01</th>      <td>30.04</td>      <td>17.88</td>      <td>16.25</td>      <td>16.25</td>      <td>21.79</td>      <td>12.54</td>      <td>18.16</td>      <td>16.62</td>      <td>18.75</td>      <td>17.62</td>      <td>22.25</td>      <td>27.29</td>      <td>1968-01-01</td>      <td>1</td>      <td>1968</td>      <td>1</td>    </tr>    <tr>      <th>1969-01-01</th>      <td>6.13</td>      <td>1.63</td>      <td>5.41</td>      <td>1.08</td>      <td>2.54</td>      <td>1.00</td>      <td>8.50</td>      <td>2.42</td>      <td>4.58</td>      <td>6.34</td>      <td>9.17</td>      <td>16.71</td>      <td>1969-01-01</td>      <td>1</td>      <td>1969</td>      <td>1</td>    </tr>    <tr>      <th>1970-01-01</th>      <td>9.59</td>      <td>2.96</td>      <td>11.79</td>      <td>3.42</td>      <td>6.13</td>      <td>4.08</td>      <td>9.00</td>      <td>4.46</td>      <td>7.29</td>      <td>3.50</td>      <td>7.33</td>      <td>13.00</td>      <td>1970-01-01</td>      <td>1</td>      <td>1970</td>      <td>1</td>    </tr>    <tr>      <th>1971-01-01</th>      <td>3.71</td>      <td>0.79</td>      <td>4.71</td>      <td>0.17</td>      <td>1.42</td>      <td>1.04</td>      <td>4.63</td>      <td>0.75</td>      <td>1.54</td>      <td>1.08</td>      <td>4.21</td>      <td>9.54</td>      <td>1971-01-01</td>      <td>1</td>      <td>1971</td>      <td>1</td>    </tr>    <tr>      <th>1972-01-01</th>      <td>9.29</td>      <td>3.63</td>      <td>14.54</td>      <td>4.25</td>      <td>6.75</td>      <td>4.42</td>      <td>13.00</td>      <td>5.33</td>      <td>10.04</td>      <td>8.54</td>      <td>8.71</td>      <td>19.17</td>      <td>1972-01-01</td>      <td>1</td>      <td>1972</td>      <td>1</td>    </tr>    <tr>      <th>1973-01-01</th>      <td>16.50</td>      <td>15.92</td>      <td>14.62</td>      <td>7.41</td>      <td>8.29</td>      <td>11.21</td>      <td>13.54</td>      <td>7.79</td>      <td>10.46</td>      <td>10.79</td>      <td>13.37</td>      <td>9.71</td>      <td>1973-01-01</td>      <td>1</td>      <td>1973</td>      <td>1</td>    </tr>    <tr>      <th>1974-01-01</th>      <td>23.21</td>      <td>16.54</td>      <td>16.08</td>      <td>9.75</td>      <td>15.83</td>      <td>11.46</td>      <td>9.54</td>      <td>13.54</td>      <td>13.83</td>      <td>16.66</td>      <td>17.21</td>      <td>25.29</td>      <td>1974-01-01</td>      <td>1</td>      <td>1974</td>      <td>1</td>    </tr>    <tr>      <th>1975-01-01</th>      <td>14.04</td>      <td>13.54</td>      <td>11.29</td>      <td>5.46</td>      <td>12.58</td>      <td>5.58</td>      <td>8.12</td>      <td>8.96</td>      <td>9.29</td>      <td>5.17</td>      <td>7.71</td>      <td>11.63</td>      <td>1975-01-01</td>      <td>1</td>      <td>1975</td>      <td>1</td>    </tr>    <tr>      <th>1976-01-01</th>      <td>18.34</td>      <td>17.67</td>      <td>14.83</td>      <td>8.00</td>      <td>16.62</td>      <td>10.13</td>      <td>13.17</td>      <td>9.04</td>      <td>13.13</td>      <td>5.75</td>      <td>11.38</td>      <td>14.96</td>      <td>1976-01-01</td>      <td>1</td>      <td>1976</td>      <td>1</td>    </tr>    <tr>      <th>1977-01-01</th>      <td>20.04</td>      <td>11.92</td>      <td>20.25</td>      <td>9.13</td>      <td>9.29</td>      <td>8.04</td>      <td>10.75</td>      <td>5.88</td>      <td>9.00</td>      <td>9.00</td>      <td>14.88</td>      <td>25.70</td>      <td>1977-01-01</td>      <td>1</td>      <td>1977</td>      <td>1</td>    </tr>    <tr>      <th>1978-01-01</th>      <td>8.33</td>      <td>7.12</td>      <td>7.71</td>      <td>3.54</td>      <td>8.50</td>      <td>7.50</td>      <td>14.71</td>      <td>10.00</td>      <td>11.83</td>      <td>10.00</td>      <td>15.09</td>      <td>20.46</td>      <td>1978-01-01</td>      <td>1</td>      <td>1978</td>      <td>1</td>    </tr>  </tbody></table></div><h2 id="对于数据记录按照月为频率取样"><a href="#对于数据记录按照月为频率取样" class="headerlink" title="对于数据记录按照月为频率取样"></a>对于数据记录按照月为频率取样</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data[data[<span class="string">"day"</span>]==<span class="number">1</span>]</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>RPT</th>      <th>VAL</th>      <th>ROS</th>      <th>KIL</th>      <th>SHA</th>      <th>BIR</th>      <th>DUB</th>      <th>CLA</th>      <th>MUL</th>      <th>CLO</th>      <th>BEL</th>      <th>MAL</th>      <th>date</th>      <th>month</th>      <th>year</th>      <th>day</th>    </tr>    <tr>      <th>Yr_Mo_Dy</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>1961-01-01</th>      <td>15.04</td>      <td>14.96</td>      <td>13.17</td>      <td>9.29</td>      <td>NaN</td>      <td>9.87</td>      <td>13.67</td>      <td>10.25</td>      <td>10.83</td>      <td>12.58</td>      <td>18.50</td>      <td>15.04</td>      <td>1961-01-01</td>      <td>1</td>      <td>1961</td>      <td>1</td>    </tr>    <tr>      <th>1961-02-01</th>      <td>14.25</td>      <td>15.12</td>      <td>9.04</td>      <td>5.88</td>      <td>12.08</td>      <td>7.17</td>      <td>10.17</td>      <td>3.63</td>      <td>6.50</td>      <td>5.50</td>      <td>9.17</td>      <td>8.00</td>      <td>1961-02-01</td>      <td>2</td>      <td>1961</td>      <td>1</td>    </tr>    <tr>      <th>1961-03-01</th>      <td>12.67</td>      <td>13.13</td>      <td>11.79</td>      <td>6.42</td>      <td>9.79</td>      <td>8.54</td>      <td>10.25</td>      <td>13.29</td>      <td>NaN</td>      <td>12.21</td>      <td>20.62</td>      <td>NaN</td>      <td>1961-03-01</td>      <td>3</td>      <td>1961</td>      <td>1</td>    </tr>    <tr>      <th>1961-04-01</th>      <td>8.38</td>      <td>6.34</td>      <td>8.33</td>      <td>6.75</td>      <td>9.33</td>      <td>9.54</td>      <td>11.67</td>      <td>8.21</td>      <td>11.21</td>      <td>6.46</td>      <td>11.96</td>      <td>7.17</td>      <td>1961-04-01</td>      <td>4</td>      <td>1961</td>      <td>1</td>    </tr>    <tr>      <th>1961-05-01</th>      <td>15.87</td>      <td>13.88</td>      <td>15.37</td>      <td>9.79</td>      <td>13.46</td>      <td>10.17</td>      <td>9.96</td>      <td>14.04</td>      <td>9.75</td>      <td>9.92</td>      <td>18.63</td>      <td>11.12</td>      <td>1961-05-01</td>      <td>5</td>      <td>1961</td>      <td>1</td>    </tr>    <tr>      <th>...</th>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <th>1978-08-01</th>      <td>19.33</td>      <td>15.09</td>      <td>20.17</td>      <td>8.83</td>      <td>12.62</td>      <td>10.41</td>      <td>9.33</td>      <td>12.33</td>      <td>9.50</td>      <td>9.92</td>      <td>15.75</td>      <td>18.00</td>      <td>1978-08-01</td>      <td>8</td>      <td>1978</td>      <td>1</td>    </tr>    <tr>      <th>1978-09-01</th>      <td>8.42</td>      <td>6.13</td>      <td>9.87</td>      <td>5.25</td>      <td>3.21</td>      <td>5.71</td>      <td>7.25</td>      <td>3.50</td>      <td>7.33</td>      <td>6.50</td>      <td>7.62</td>      <td>15.96</td>      <td>1978-09-01</td>      <td>9</td>      <td>1978</td>      <td>1</td>    </tr>    <tr>      <th>1978-10-01</th>      <td>9.50</td>      <td>6.83</td>      <td>10.50</td>      <td>3.88</td>      <td>6.13</td>      <td>4.58</td>      <td>4.21</td>      <td>6.50</td>      <td>6.38</td>      <td>6.54</td>      <td>10.63</td>      <td>14.09</td>      <td>1978-10-01</td>      <td>10</td>      <td>1978</td>      <td>1</td>    </tr>    <tr>      <th>1978-11-01</th>      <td>13.59</td>      <td>16.75</td>      <td>11.25</td>      <td>7.08</td>      <td>11.04</td>      <td>8.33</td>      <td>8.17</td>      <td>11.29</td>      <td>10.75</td>      <td>11.25</td>      <td>23.13</td>      <td>25.00</td>      <td>1978-11-01</td>      <td>11</td>      <td>1978</td>      <td>1</td>    </tr>    <tr>      <th>1978-12-01</th>      <td>21.29</td>      <td>16.29</td>      <td>24.04</td>      <td>12.79</td>      <td>18.21</td>      <td>19.29</td>      <td>21.54</td>      <td>17.21</td>      <td>16.71</td>      <td>17.83</td>      <td>17.75</td>      <td>25.70</td>      <td>1978-12-01</td>      <td>12</td>      <td>1978</td>      <td>1</td>    </tr>  </tbody></table><p>216 rows × 16 columns</p></div><h1 id="探索泰坦尼克灾难数据-数据可视化"><a href="#探索泰坦尼克灾难数据-数据可视化" class="headerlink" title="探索泰坦尼克灾难数据(数据可视化)"></a>探索泰坦尼克灾难数据(数据可视化)</h1><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">%matplotlib inline</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">path7 = <span class="string">'train.csv'</span>  <span class="comment"># train.csv</span></span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">titanic = pd.read_csv(path7)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">titanic.head()</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>PassengerId</th>      <th>Survived</th>      <th>Pclass</th>      <th>Name</th>      <th>Sex</th>      <th>Age</th>      <th>SibSp</th>      <th>Parch</th>      <th>Ticket</th>      <th>Fare</th>      <th>Cabin</th>      <th>Embarked</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>1</td>      <td>0</td>      <td>3</td>      <td>Braund, Mr. Owen Harris</td>      <td>male</td>      <td>22.0</td>      <td>1</td>      <td>0</td>      <td>A/5 21171</td>      <td>7.2500</td>      <td>NaN</td>      <td>S</td>    </tr>    <tr>      <th>1</th>      <td>2</td>      <td>1</td>      <td>1</td>      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>      <td>female</td>      <td>38.0</td>      <td>1</td>      <td>0</td>      <td>PC 17599</td>      <td>71.2833</td>      <td>C85</td>      <td>C</td>    </tr>    <tr>      <th>2</th>      <td>3</td>      <td>1</td>      <td>3</td>      <td>Heikkinen, Miss. Laina</td>      <td>female</td>      <td>26.0</td>      <td>0</td>      <td>0</td>      <td>STON/O2. 3101282</td>      <td>7.9250</td>      <td>NaN</td>      <td>S</td>    </tr>    <tr>      <th>3</th>      <td>4</td>      <td>1</td>      <td>1</td>      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>      <td>female</td>      <td>35.0</td>      <td>1</td>      <td>0</td>      <td>113803</td>      <td>53.1000</td>      <td>C123</td>      <td>S</td>    </tr>    <tr>      <th>4</th>      <td>5</td>      <td>0</td>      <td>3</td>      <td>Allen, Mr. William Henry</td>      <td>male</td>      <td>35.0</td>      <td>0</td>      <td>0</td>      <td>373450</td>      <td>8.0500</td>      <td>NaN</td>      <td>S</td>    </tr>  </tbody></table></div><h2 id="将PassengerId设置为索引"><a href="#将PassengerId设置为索引" class="headerlink" title="将PassengerId设置为索引"></a>将PassengerId设置为索引</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">titanic.set_index(<span class="string">'PassengerId'</span>).head()</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Survived</th>      <th>Pclass</th>      <th>Name</th>      <th>Sex</th>      <th>Age</th>      <th>SibSp</th>      <th>Parch</th>      <th>Ticket</th>      <th>Fare</th>      <th>Cabin</th>      <th>Embarked</th>    </tr>    <tr>      <th>PassengerId</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>1</th>      <td>0</td>      <td>3</td>      <td>Braund, Mr. Owen Harris</td>      <td>male</td>      <td>22.0</td>      <td>1</td>      <td>0</td>      <td>A/5 21171</td>      <td>7.2500</td>      <td>NaN</td>      <td>S</td>    </tr>    <tr>      <th>2</th>      <td>1</td>      <td>1</td>      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>      <td>female</td>      <td>38.0</td>      <td>1</td>      <td>0</td>      <td>PC 17599</td>      <td>71.2833</td>      <td>C85</td>      <td>C</td>    </tr>    <tr>      <th>3</th>      <td>1</td>      <td>3</td>      <td>Heikkinen, Miss. Laina</td>      <td>female</td>      <td>26.0</td>      <td>0</td>      <td>0</td>      <td>STON/O2. 3101282</td>      <td>7.9250</td>      <td>NaN</td>      <td>S</td>    </tr>    <tr>      <th>4</th>      <td>1</td>      <td>1</td>      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>      <td>female</td>      <td>35.0</td>      <td>1</td>      <td>0</td>      <td>113803</td>      <td>53.1000</td>      <td>C123</td>      <td>S</td>    </tr>    <tr>      <th>5</th>      <td>0</td>      <td>3</td>      <td>Allen, Mr. William Henry</td>      <td>male</td>      <td>35.0</td>      <td>0</td>      <td>0</td>      <td>373450</td>      <td>8.0500</td>      <td>NaN</td>      <td>S</td>    </tr>  </tbody></table></div><h2 id="绘制一个展示男女乘客比例的扇形图"><a href="#绘制一个展示男女乘客比例的扇形图" class="headerlink" title="绘制一个展示男女乘客比例的扇形图"></a>绘制一个展示男女乘客比例的扇形图</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 运行以下代码</span></span><br><span class="line"><span class="comment"># sum the instances of males and females</span></span><br><span class="line">males = (titanic[<span class="string">'Sex'</span>] == <span class="string">'male'</span>).sum()</span><br><span class="line">females = (titanic[<span class="string">'Sex'</span>] == <span class="string">'female'</span>).sum()</span><br><span class="line"></span><br><span class="line"><span class="comment"># put them into a list called proportions</span></span><br><span class="line">proportions = [males, females]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create a pie chart</span></span><br><span class="line">plt.pie(</span><br><span class="line">    <span class="comment"># using proportions</span></span><br><span class="line">    proportions,</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># with the labels being officer names</span></span><br><span class="line">    labels = [<span class="string">'Males'</span>, <span class="string">'Females'</span>],</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># with no shadows</span></span><br><span class="line">    shadow = <span class="literal">False</span>,</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># with colors</span></span><br><span class="line">    colors = [<span class="string">'blue'</span>,<span class="string">'red'</span>],</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># with one slide exploded out</span></span><br><span class="line">    explode = (<span class="number">0.15</span> , <span class="number">0</span>),</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># with the start angle at 90%</span></span><br><span class="line">    startangle = <span class="number">90</span>,</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># with the percent listed as a fraction</span></span><br><span class="line">    autopct = <span class="string">'%1.1f%%'</span></span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line"><span class="comment"># View the plot drop above</span></span><br><span class="line">plt.axis(<span class="string">'equal'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Set labels</span></span><br><span class="line">plt.title(<span class="string">"Sex Proportion"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># View the plot</span></span><br><span class="line">plt.tight_layout()</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure></div><p><a href="http://q3zyvka9r.bkt.gdipper.com/output_156_0.png" data-fancybox="group" data-caption="png" class="fancybox"><img alt="png" data-src="http://q3zyvka9r.bkt.gdipper.com/output_156_0.png" class="lazyload" title="png"></a></p><h2 id="绘制一个展示船票Fare-与乘客年龄和性别的散点图"><a href="#绘制一个展示船票Fare-与乘客年龄和性别的散点图" class="headerlink" title="绘制一个展示船票Fare, 与乘客年龄和性别的散点图"></a>绘制一个展示船票Fare, 与乘客年龄和性别的散点图</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 运行以下代码</span></span><br><span class="line"><span class="comment"># creates the plot using</span></span><br><span class="line">lm = sns.lmplot(x = <span class="string">'Age'</span>, y = <span class="string">'Fare'</span>, data = titanic, hue = <span class="string">'Sex'</span>, fit_reg=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># set title</span></span><br><span class="line">lm.set(title = <span class="string">'Fare x Age'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># get the axes object and tweak it</span></span><br><span class="line">axes = lm.axes</span><br><span class="line">axes[<span class="number">0</span>,<span class="number">0</span>].set_ylim(<span class="number">-5</span>,)</span><br><span class="line">axes[<span class="number">0</span>,<span class="number">0</span>].set_xlim(<span class="number">-5</span>,<span class="number">85</span>)</span><br></pre></td></tr></table></figure></div><pre><code>(-5, 85)</code></pre><p><a href="http://q3zyvka9r.bkt.gdipper.com/output_158_1.png" data-fancybox="group" data-caption="png" class="fancybox"><img alt="png" data-src="http://q3zyvka9r.bkt.gdipper.com/output_158_1.png" class="lazyload" title="png"></a></p><h2 id="有多少人生还"><a href="#有多少人生还" class="headerlink" title="有多少人生还"></a>有多少人生还</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">titanic.Survived.sum()</span><br></pre></td></tr></table></figure></div><pre><code>342</code></pre><h2 id="绘制一个展示船票价格的直方图"><a href="#绘制一个展示船票价格的直方图" class="headerlink" title="绘制一个展示船票价格的直方图"></a>绘制一个展示船票价格的直方图</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 运行以下代码</span></span><br><span class="line"><span class="comment"># sort the values from the top to the least value and slice the first 5 items</span></span><br><span class="line">df = titanic.Fare.sort_values(ascending = <span class="literal">False</span>)</span><br><span class="line">df</span><br><span class="line"></span><br><span class="line"><span class="comment"># create bins interval using numpy</span></span><br><span class="line">binsVal = np.arange(<span class="number">0</span>,<span class="number">600</span>,<span class="number">10</span>)</span><br><span class="line">binsVal</span><br><span class="line"></span><br><span class="line"><span class="comment"># create the plot</span></span><br><span class="line">plt.hist(df, bins = binsVal)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Set the title and labels</span></span><br><span class="line">plt.xlabel(<span class="string">'Fare'</span>)</span><br><span class="line">plt.ylabel(<span class="string">'Frequency'</span>)</span><br><span class="line">plt.title(<span class="string">'Fare Payed Histrogram'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># show the plot</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure></div><p><a href="http://q3zyvka9r.bkt.gdipper.com/output_162_0.png" data-fancybox="group" data-caption="png" class="fancybox"><img alt="png" data-src="http://q3zyvka9r.bkt.gdipper.com/output_162_0.png" class="lazyload" title="png"></a></p><h1 id="探索Pokemon数据-创建数据框"><a href="#探索Pokemon数据-创建数据框" class="headerlink" title="探索Pokemon数据(创建数据框)"></a>探索Pokemon数据(创建数据框)</h1><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">raw_data = &#123;<span class="string">"name"</span>: [<span class="string">'Bulbasaur'</span>, <span class="string">'Charmander'</span>,<span class="string">'Squirtle'</span>,<span class="string">'Caterpie'</span>],</span><br><span class="line">            <span class="string">"evolution"</span>: [<span class="string">'Ivysaur'</span>,<span class="string">'Charmeleon'</span>,<span class="string">'Wartortle'</span>,<span class="string">'Metapod'</span>],</span><br><span class="line">            <span class="string">"type"</span>: [<span class="string">'grass'</span>, <span class="string">'fire'</span>, <span class="string">'water'</span>, <span class="string">'bug'</span>],</span><br><span class="line">            <span class="string">"hp"</span>: [<span class="number">45</span>, <span class="number">39</span>, <span class="number">44</span>, <span class="number">45</span>],</span><br><span class="line">            <span class="string">"pokedex"</span>: [<span class="string">'yes'</span>, <span class="string">'no'</span>,<span class="string">'yes'</span>,<span class="string">'no'</span>]                        </span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pokemon = pd.DataFrame(raw_data)</span><br><span class="line">pokemon.head()</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>name</th>      <th>evolution</th>      <th>type</th>      <th>hp</th>      <th>pokedex</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>Bulbasaur</td>      <td>Ivysaur</td>      <td>grass</td>      <td>45</td>      <td>yes</td>    </tr>    <tr>      <th>1</th>      <td>Charmander</td>      <td>Charmeleon</td>      <td>fire</td>      <td>39</td>      <td>no</td>    </tr>    <tr>      <th>2</th>      <td>Squirtle</td>      <td>Wartortle</td>      <td>water</td>      <td>44</td>      <td>yes</td>    </tr>    <tr>      <th>3</th>      <td>Caterpie</td>      <td>Metapod</td>      <td>bug</td>      <td>45</td>      <td>no</td>    </tr>  </tbody></table></div><h2 id="数据框的列排序是字母顺序，请重新修改为name-type-hp-evolution-pokedex这个顺序"><a href="#数据框的列排序是字母顺序，请重新修改为name-type-hp-evolution-pokedex这个顺序" class="headerlink" title="数据框的列排序是字母顺序，请重新修改为name, type, hp, evolution, pokedex这个顺序"></a>数据框的列排序是字母顺序，请重新修改为name, type, hp, evolution, pokedex这个顺序</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pokemon = pokemon[[<span class="string">'name'</span>, <span class="string">'type'</span>, <span class="string">'hp'</span>, <span class="string">'evolution'</span>,<span class="string">'pokedex'</span>]]</span><br><span class="line">pokemon</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>name</th>      <th>type</th>      <th>hp</th>      <th>evolution</th>      <th>pokedex</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>Bulbasaur</td>      <td>grass</td>      <td>45</td>      <td>Ivysaur</td>      <td>yes</td>    </tr>    <tr>      <th>1</th>      <td>Charmander</td>      <td>fire</td>      <td>39</td>      <td>Charmeleon</td>      <td>no</td>    </tr>    <tr>      <th>2</th>      <td>Squirtle</td>      <td>water</td>      <td>44</td>      <td>Wartortle</td>      <td>yes</td>    </tr>    <tr>      <th>3</th>      <td>Caterpie</td>      <td>bug</td>      <td>45</td>      <td>Metapod</td>      <td>no</td>    </tr>  </tbody></table></div><h2 id="添加一个列place"><a href="#添加一个列place" class="headerlink" title="添加一个列place"></a>添加一个列place</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pokemon[<span class="string">'place'</span>] = [<span class="string">'park'</span>,<span class="string">'street'</span>,<span class="string">'lake'</span>,<span class="string">'forest'</span>]</span><br><span class="line">pokemon</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>name</th>      <th>type</th>      <th>hp</th>      <th>evolution</th>      <th>pokedex</th>      <th>place</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>Bulbasaur</td>      <td>grass</td>      <td>45</td>      <td>Ivysaur</td>      <td>yes</td>      <td>park</td>    </tr>    <tr>      <th>1</th>      <td>Charmander</td>      <td>fire</td>      <td>39</td>      <td>Charmeleon</td>      <td>no</td>      <td>street</td>    </tr>    <tr>      <th>2</th>      <td>Squirtle</td>      <td>water</td>      <td>44</td>      <td>Wartortle</td>      <td>yes</td>      <td>lake</td>    </tr>    <tr>      <th>3</th>      <td>Caterpie</td>      <td>bug</td>      <td>45</td>      <td>Metapod</td>      <td>no</td>      <td>forest</td>    </tr>  </tbody></table></div><h2 id="查看每个列的数据类型"><a href="#查看每个列的数据类型" class="headerlink" title="查看每个列的数据类型"></a>查看每个列的数据类型</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pokemon.dtypes</span><br></pre></td></tr></table></figure></div><pre><code>name         objecttype         objecthp            int64evolution    objectpokedex      objectplace        objectdtype: object</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pokemon.info()</span><br></pre></td></tr></table></figure></div><pre><code>&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;RangeIndex: 4 entries, 0 to 3Data columns (total 6 columns):name         4 non-null objecttype         4 non-null objecthp           4 non-null int64evolution    4 non-null objectpokedex      4 non-null objectplace        4 non-null objectdtypes: int64(1), object(5)memory usage: 320.0+ bytes</code></pre><h1 id="探索Apple公司股价数据-时间序列"><a href="#探索Apple公司股价数据-时间序列" class="headerlink" title="探索Apple公司股价数据(时间序列)"></a>探索Apple公司股价数据(时间序列)</h1><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 运行以下代码</span></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment"># visualization</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">%matplotlib inline</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">path9 = <span class="string">'Apple_stock.csv'</span></span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apple = pd.read_csv(path9)</span><br><span class="line">apple.head()</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Date</th>      <th>Open</th>      <th>High</th>      <th>Low</th>      <th>Close</th>      <th>Volume</th>      <th>Adj Close</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>2014-07-08</td>      <td>96.27</td>      <td>96.80</td>      <td>93.92</td>      <td>95.35</td>      <td>65130000</td>      <td>95.35</td>    </tr>    <tr>      <th>1</th>      <td>2014-07-07</td>      <td>94.14</td>      <td>95.99</td>      <td>94.10</td>      <td>95.97</td>      <td>56305400</td>      <td>95.97</td>    </tr>    <tr>      <th>2</th>      <td>2014-07-03</td>      <td>93.67</td>      <td>94.10</td>      <td>93.20</td>      <td>94.03</td>      <td>22891800</td>      <td>94.03</td>    </tr>    <tr>      <th>3</th>      <td>2014-07-02</td>      <td>93.87</td>      <td>94.06</td>      <td>93.09</td>      <td>93.48</td>      <td>28420900</td>      <td>93.48</td>    </tr>    <tr>      <th>4</th>      <td>2014-07-01</td>      <td>93.52</td>      <td>94.07</td>      <td>93.13</td>      <td>93.52</td>      <td>38170200</td>      <td>93.52</td>    </tr>  </tbody></table></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apple.dtypes</span><br></pre></td></tr></table></figure></div><pre><code>Date          objectOpen         float64High         float64Low          float64Close        float64Volume         int64Adj Close    float64dtype: object</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apple.info()</span><br></pre></td></tr></table></figure></div><pre><code>&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;RangeIndex: 8465 entries, 0 to 8464Data columns (total 7 columns):Date         8465 non-null objectOpen         8465 non-null float64High         8465 non-null float64Low          8465 non-null float64Close        8465 non-null float64Volume       8465 non-null int64Adj Close    8465 non-null float64dtypes: float64(5), int64(1), object(1)memory usage: 463.1+ KB</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apple.describe()</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Open</th>      <th>High</th>      <th>Low</th>      <th>Close</th>      <th>Volume</th>      <th>Adj Close</th>    </tr>  </thead>  <tbody>    <tr>      <th>count</th>      <td>8465.000000</td>      <td>8465.000000</td>      <td>8465.000000</td>      <td>8465.000000</td>      <td>8.465000e+03</td>      <td>8465.000000</td>    </tr>    <tr>      <th>mean</th>      <td>98.593926</td>      <td>99.848683</td>      <td>97.226790</td>      <td>98.549199</td>      <td>9.391214e+07</td>      <td>11.095014</td>    </tr>    <tr>      <th>std</th>      <td>141.965350</td>      <td>143.155674</td>      <td>140.548326</td>      <td>141.877244</td>      <td>8.993202e+07</td>      <td>21.133016</td>    </tr>    <tr>      <th>min</th>      <td>11.120000</td>      <td>11.120000</td>      <td>11.000000</td>      <td>11.000000</td>      <td>2.504000e+05</td>      <td>0.170000</td>    </tr>    <tr>      <th>25%</th>      <td>25.750000</td>      <td>26.000000</td>      <td>25.120000</td>      <td>25.630000</td>      <td>3.704960e+07</td>      <td>0.900000</td>    </tr>    <tr>      <th>50%</th>      <td>40.750000</td>      <td>41.500000</td>      <td>40.000000</td>      <td>40.750000</td>      <td>6.636000e+07</td>      <td>1.410000</td>    </tr>    <tr>      <th>75%</th>      <td>79.500000</td>      <td>81.000000</td>      <td>78.740000</td>      <td>80.000000</td>      <td>1.177701e+08</td>      <td>8.660000</td>    </tr>    <tr>      <th>max</th>      <td>702.410000</td>      <td>705.070000</td>      <td>699.570000</td>      <td>702.100000</td>      <td>1.855410e+09</td>      <td>96.280000</td>    </tr>  </tbody></table></div><h2 id="将Date这个列转换为datetime类型"><a href="#将Date这个列转换为datetime类型" class="headerlink" title="将Date这个列转换为datetime类型"></a>将Date这个列转换为datetime类型</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apple[<span class="string">'Date'</span>] = pd.to_datetime(apple[<span class="string">'Date'</span>])</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apple.dtypes</span><br></pre></td></tr></table></figure></div><pre><code>Date         datetime64[ns]Open                float64High                float64Low                 float64Close               float64Volume                int64Adj Close           float64dtype: object</code></pre><h2 id="将Date设置为索引"><a href="#将Date设置为索引" class="headerlink" title="将Date设置为索引"></a>将Date设置为索引</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apple = apple.set_index(<span class="string">'Date'</span>)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apple.head()</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Open</th>      <th>High</th>      <th>Low</th>      <th>Close</th>      <th>Volume</th>      <th>Adj Close</th>    </tr>    <tr>      <th>Date</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>2014-07-08</th>      <td>96.27</td>      <td>96.80</td>      <td>93.92</td>      <td>95.35</td>      <td>65130000</td>      <td>95.35</td>    </tr>    <tr>      <th>2014-07-07</th>      <td>94.14</td>      <td>95.99</td>      <td>94.10</td>      <td>95.97</td>      <td>56305400</td>      <td>95.97</td>    </tr>    <tr>      <th>2014-07-03</th>      <td>93.67</td>      <td>94.10</td>      <td>93.20</td>      <td>94.03</td>      <td>22891800</td>      <td>94.03</td>    </tr>    <tr>      <th>2014-07-02</th>      <td>93.87</td>      <td>94.06</td>      <td>93.09</td>      <td>93.48</td>      <td>28420900</td>      <td>93.48</td>    </tr>    <tr>      <th>2014-07-01</th>      <td>93.52</td>      <td>94.07</td>      <td>93.13</td>      <td>93.52</td>      <td>38170200</td>      <td>93.52</td>    </tr>  </tbody></table></div><h2 id="有重复的日期吗？"><a href="#有重复的日期吗？" class="headerlink" title="有重复的日期吗？"></a>有重复的日期吗？</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">len(apple.index) - len(apple.index.unique())</span><br></pre></td></tr></table></figure></div><pre><code>0</code></pre><p>官方解法</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apple.index.is_unique</span><br></pre></td></tr></table></figure></div><pre><code>True</code></pre><h2 id="将index设置为升序"><a href="#将index设置为升序" class="headerlink" title="将index设置为升序"></a>将index设置为升序</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apple.sort_index(ascending=<span class="literal">True</span>, inplace=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apple.head()</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Open</th>      <th>High</th>      <th>Low</th>      <th>Close</th>      <th>Volume</th>      <th>Adj Close</th>    </tr>    <tr>      <th>Date</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>1980-12-12</th>      <td>28.75</td>      <td>28.87</td>      <td>28.75</td>      <td>28.75</td>      <td>117258400</td>      <td>0.45</td>    </tr>    <tr>      <th>1980-12-15</th>      <td>27.38</td>      <td>27.38</td>      <td>27.25</td>      <td>27.25</td>      <td>43971200</td>      <td>0.42</td>    </tr>    <tr>      <th>1980-12-16</th>      <td>25.37</td>      <td>25.37</td>      <td>25.25</td>      <td>25.25</td>      <td>26432000</td>      <td>0.39</td>    </tr>    <tr>      <th>1980-12-17</th>      <td>25.87</td>      <td>26.00</td>      <td>25.87</td>      <td>25.87</td>      <td>21610400</td>      <td>0.40</td>    </tr>    <tr>      <th>1980-12-18</th>      <td>26.63</td>      <td>26.75</td>      <td>26.63</td>      <td>26.63</td>      <td>18362400</td>      <td>0.41</td>    </tr>  </tbody></table></div><h2 id="找到每个月的最后一个交易日-business-day"><a href="#找到每个月的最后一个交易日-business-day" class="headerlink" title="找到每个月的最后一个交易日(business day)"></a>找到每个月的最后一个交易日(business day)</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apple[<span class="string">'year'</span>]=apple.index.year</span><br><span class="line">apple[<span class="string">'month'</span>]=apple.index.month</span><br><span class="line">apple[<span class="string">'day'</span>]=apple.index.day</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apple.day.shift(<span class="number">-1</span>).fillna(<span class="number">100</span>)</span><br></pre></td></tr></table></figure></div><pre><code>Date1980-12-12     15.01980-12-15     16.01980-12-16     17.01980-12-17     18.01980-12-18     19.0              ...  2014-07-01      2.02014-07-02      3.02014-07-03      7.02014-07-07      8.02014-07-08    100.0Name: day, Length: 8465, dtype: float64</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">diff = apple.day - apple.day.shift(<span class="number">-1</span>).fillna(<span class="number">100</span>)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apple.loc[diff[diff&gt;<span class="number">0</span>].index]</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Open</th>      <th>High</th>      <th>Low</th>      <th>Close</th>      <th>Volume</th>      <th>Adj Close</th>      <th>year</th>      <th>month</th>      <th>day</th>    </tr>    <tr>      <th>Date</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>1980-12-31</th>      <td>34.25</td>      <td>34.25</td>      <td>34.13</td>      <td>34.13</td>      <td>8937600</td>      <td>0.53</td>      <td>1980</td>      <td>12</td>      <td>31</td>    </tr>    <tr>      <th>1981-01-30</th>      <td>28.50</td>      <td>28.50</td>      <td>28.25</td>      <td>28.25</td>      <td>11547200</td>      <td>0.44</td>      <td>1981</td>      <td>1</td>      <td>30</td>    </tr>    <tr>      <th>1981-02-27</th>      <td>26.50</td>      <td>26.75</td>      <td>26.50</td>      <td>26.50</td>      <td>3690400</td>      <td>0.41</td>      <td>1981</td>      <td>2</td>      <td>27</td>    </tr>    <tr>      <th>1981-03-31</th>      <td>24.75</td>      <td>24.75</td>      <td>24.50</td>      <td>24.50</td>      <td>3998400</td>      <td>0.38</td>      <td>1981</td>      <td>3</td>      <td>31</td>    </tr>    <tr>      <th>1981-04-30</th>      <td>28.38</td>      <td>28.62</td>      <td>28.38</td>      <td>28.38</td>      <td>3152800</td>      <td>0.44</td>      <td>1981</td>      <td>4</td>      <td>30</td>    </tr>    <tr>      <th>...</th>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <th>2014-02-28</th>      <td>529.08</td>      <td>532.75</td>      <td>522.12</td>      <td>526.24</td>      <td>92992200</td>      <td>74.76</td>      <td>2014</td>      <td>2</td>      <td>28</td>    </tr>    <tr>      <th>2014-03-31</th>      <td>539.23</td>      <td>540.81</td>      <td>535.93</td>      <td>536.74</td>      <td>42167300</td>      <td>76.25</td>      <td>2014</td>      <td>3</td>      <td>31</td>    </tr>    <tr>      <th>2014-04-30</th>      <td>592.64</td>      <td>599.43</td>      <td>589.80</td>      <td>590.09</td>      <td>114160200</td>      <td>83.83</td>      <td>2014</td>      <td>4</td>      <td>30</td>    </tr>    <tr>      <th>2014-05-30</th>      <td>637.98</td>      <td>644.17</td>      <td>628.90</td>      <td>633.00</td>      <td>141005200</td>      <td>90.43</td>      <td>2014</td>      <td>5</td>      <td>30</td>    </tr>    <tr>      <th>2014-06-30</th>      <td>92.10</td>      <td>93.73</td>      <td>92.09</td>      <td>92.93</td>      <td>49482300</td>      <td>92.93</td>      <td>2014</td>      <td>6</td>      <td>30</td>    </tr>  </tbody></table><p>403 rows × 9 columns</p></div><h2 id="数据集中最早的日期和最晚的日期相差多少天"><a href="#数据集中最早的日期和最晚的日期相差多少天" class="headerlink" title="数据集中最早的日期和最晚的日期相差多少天"></a>数据集中最早的日期和最晚的日期相差多少天</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apple.index.max()-apple.index.min()</span><br></pre></td></tr></table></figure></div><pre><code>Timedelta(&#39;12261 days 00:00:00&#39;)</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(apple.index.max()-apple.index.min()).days</span><br></pre></td></tr></table></figure></div><pre><code>12261</code></pre><h2 id="在数据中一共有多少个月？"><a href="#在数据中一共有多少个月？" class="headerlink" title="在数据中一共有多少个月？"></a>在数据中一共有多少个月？</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apple_months = apple.resample(<span class="string">'BM'</span>).mean()</span><br><span class="line">len(apple_months.index)</span><br></pre></td></tr></table></figure></div><pre><code>404</code></pre><h2 id="按照时间顺序可视化Adj-Close值"><a href="#按照时间顺序可视化Adj-Close值" class="headerlink" title="按照时间顺序可视化Adj Close值"></a>按照时间顺序可视化Adj Close值</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 运行以下代码</span></span><br><span class="line"><span class="comment"># makes the plot and assign it to a variable</span></span><br><span class="line">appl_open = apple[<span class="string">'Adj Close'</span>].plot(title = <span class="string">"Apple Stock"</span>)</span><br></pre></td></tr></table></figure></div><p><a href="http://q3zyvka9r.bkt.gdipper.com/output_204_0.png" data-fancybox="group" data-caption="png" class="fancybox"><img alt="png" data-src="http://q3zyvka9r.bkt.gdipper.com/output_204_0.png" class="lazyload" title="png"></a></p><h1 id="探索Iris纸鸢花数据-删除数据"><a href="#探索Iris纸鸢花数据-删除数据" class="headerlink" title="探索Iris纸鸢花数据(删除数据)"></a>探索Iris纸鸢花数据(删除数据)</h1><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">path10 =<span class="string">'iris.csv'</span>   <span class="comment"># iris.csv</span></span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">iris = pd.read_csv(path10,header=<span class="literal">None</span>)</span><br><span class="line">iris.head()</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>0</th>      <th>1</th>      <th>2</th>      <th>3</th>      <th>4</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>5.1</td>      <td>3.5</td>      <td>1.4</td>      <td>0.2</td>      <td>Iris-setosa</td>    </tr>    <tr>      <th>1</th>      <td>4.9</td>      <td>3.0</td>      <td>1.4</td>      <td>0.2</td>      <td>Iris-setosa</td>    </tr>    <tr>      <th>2</th>      <td>4.7</td>      <td>3.2</td>      <td>1.3</td>      <td>0.2</td>      <td>Iris-setosa</td>    </tr>    <tr>      <th>3</th>      <td>4.6</td>      <td>3.1</td>      <td>1.5</td>      <td>0.2</td>      <td>Iris-setosa</td>    </tr>    <tr>      <th>4</th>      <td>5.0</td>      <td>3.6</td>      <td>1.4</td>      <td>0.2</td>      <td>Iris-setosa</td>    </tr>  </tbody></table></div><h2 id="创建数据框的列名称"><a href="#创建数据框的列名称" class="headerlink" title="创建数据框的列名称"></a>创建数据框的列名称</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iris.columns=([<span class="string">'sepal_length'</span>,<span class="string">'sepal_width'</span>, <span class="string">'petal_length'</span>, <span class="string">'petal_width'</span>, <span class="string">'class'</span>])</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iris.head()</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>sepal_length</th>      <th>sepal_width</th>      <th>petal_length</th>      <th>petal_width</th>      <th>class</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>5.1</td>      <td>3.5</td>      <td>1.4</td>      <td>0.2</td>      <td>Iris-setosa</td>    </tr>    <tr>      <th>1</th>      <td>4.9</td>      <td>3.0</td>      <td>1.4</td>      <td>0.2</td>      <td>Iris-setosa</td>    </tr>    <tr>      <th>2</th>      <td>4.7</td>      <td>3.2</td>      <td>1.3</td>      <td>0.2</td>      <td>Iris-setosa</td>    </tr>    <tr>      <th>3</th>      <td>4.6</td>      <td>3.1</td>      <td>1.5</td>      <td>0.2</td>      <td>Iris-setosa</td>    </tr>    <tr>      <th>4</th>      <td>5.0</td>      <td>3.6</td>      <td>1.4</td>      <td>0.2</td>      <td>Iris-setosa</td>    </tr>  </tbody></table></div><h2 id="数据框中有缺失值吗"><a href="#数据框中有缺失值吗" class="headerlink" title="数据框中有缺失值吗"></a>数据框中有缺失值吗</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iris.isnull().any()</span><br></pre></td></tr></table></figure></div><pre><code>sepal_length    Falsesepal_width     Falsepetal_length    Falsepetal_width     Falseclass           Falsedtype: bool</code></pre><h2 id="将列petal-length的第10到19行设置为缺失值"><a href="#将列petal-length的第10到19行设置为缺失值" class="headerlink" title="将列petal_length的第10到19行设置为缺失值"></a>将列petal_length的第10到19行设置为缺失值</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iris.loc[<span class="number">10</span>:<span class="number">20</span>, <span class="string">'petal_length'</span>] = np.nan</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iris.loc[<span class="number">10</span>:<span class="number">20</span>,:]</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>sepal_length</th>      <th>sepal_width</th>      <th>petal_length</th>      <th>petal_width</th>      <th>class</th>    </tr>  </thead>  <tbody>    <tr>      <th>10</th>      <td>5.4</td>      <td>3.7</td>      <td>NaN</td>      <td>0.2</td>      <td>Iris-setosa</td>    </tr>    <tr>      <th>11</th>      <td>4.8</td>      <td>3.4</td>      <td>NaN</td>      <td>0.2</td>      <td>Iris-setosa</td>    </tr>    <tr>      <th>12</th>      <td>4.8</td>      <td>3.0</td>      <td>NaN</td>      <td>0.1</td>      <td>Iris-setosa</td>    </tr>    <tr>      <th>13</th>      <td>4.3</td>      <td>3.0</td>      <td>NaN</td>      <td>0.1</td>      <td>Iris-setosa</td>    </tr>    <tr>      <th>14</th>      <td>5.8</td>      <td>4.0</td>      <td>NaN</td>      <td>0.2</td>      <td>Iris-setosa</td>    </tr>    <tr>      <th>15</th>      <td>5.7</td>      <td>4.4</td>      <td>NaN</td>      <td>0.4</td>      <td>Iris-setosa</td>    </tr>    <tr>      <th>16</th>      <td>5.4</td>      <td>3.9</td>      <td>NaN</td>      <td>0.4</td>      <td>Iris-setosa</td>    </tr>    <tr>      <th>17</th>      <td>5.1</td>      <td>3.5</td>      <td>NaN</td>      <td>0.3</td>      <td>Iris-setosa</td>    </tr>    <tr>      <th>18</th>      <td>5.7</td>      <td>3.8</td>      <td>NaN</td>      <td>0.3</td>      <td>Iris-setosa</td>    </tr>    <tr>      <th>19</th>      <td>5.1</td>      <td>3.8</td>      <td>NaN</td>      <td>0.3</td>      <td>Iris-setosa</td>    </tr>    <tr>      <th>20</th>      <td>5.4</td>      <td>3.4</td>      <td>NaN</td>      <td>0.2</td>      <td>Iris-setosa</td>    </tr>  </tbody></table></div><h2 id="将缺失值全部替换为1-0"><a href="#将缺失值全部替换为1-0" class="headerlink" title="将缺失值全部替换为1.0"></a>将缺失值全部替换为1.0</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iris = iris.fillna(<span class="number">1.0</span>)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iris.head(<span class="number">20</span>)</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>sepal_length</th>      <th>sepal_width</th>      <th>petal_length</th>      <th>petal_width</th>      <th>class</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>5.1</td>      <td>3.5</td>      <td>1.4</td>      <td>0.2</td>      <td>Iris-setosa</td>    </tr>    <tr>      <th>1</th>      <td>4.9</td>      <td>3.0</td>      <td>1.4</td>      <td>0.2</td>      <td>Iris-setosa</td>    </tr>    <tr>      <th>2</th>      <td>4.7</td>      <td>3.2</td>      <td>1.3</td>      <td>0.2</td>      <td>Iris-setosa</td>    </tr>    <tr>      <th>3</th>      <td>4.6</td>      <td>3.1</td>      <td>1.5</td>      <td>0.2</td>      <td>Iris-setosa</td>    </tr>    <tr>      <th>4</th>      <td>5.0</td>      <td>3.6</td>      <td>1.4</td>      <td>0.2</td>      <td>Iris-setosa</td>    </tr>    <tr>      <th>5</th>      <td>5.4</td>      <td>3.9</td>      <td>1.7</td>      <td>0.4</td>      <td>Iris-setosa</td>    </tr>    <tr>      <th>6</th>      <td>4.6</td>      <td>3.4</td>      <td>1.4</td>      <td>0.3</td>      <td>Iris-setosa</td>    </tr>    <tr>      <th>7</th>      <td>5.0</td>      <td>3.4</td>      <td>1.5</td>      <td>0.2</td>      <td>Iris-setosa</td>    </tr>    <tr>      <th>8</th>      <td>4.4</td>      <td>2.9</td>      <td>1.4</td>      <td>0.2</td>      <td>Iris-setosa</td>    </tr>    <tr>      <th>9</th>      <td>4.9</td>      <td>3.1</td>      <td>1.5</td>      <td>0.1</td>      <td>Iris-setosa</td>    </tr>    <tr>      <th>10</th>      <td>5.4</td>      <td>3.7</td>      <td>1.0</td>      <td>0.2</td>      <td>Iris-setosa</td>    </tr>    <tr>      <th>11</th>      <td>4.8</td>      <td>3.4</td>      <td>1.0</td>      <td>0.2</td>      <td>Iris-setosa</td>    </tr>    <tr>      <th>12</th>      <td>4.8</td>      <td>3.0</td>      <td>1.0</td>      <td>0.1</td>      <td>Iris-setosa</td>    </tr>    <tr>      <th>13</th>      <td>4.3</td>      <td>3.0</td>      <td>1.0</td>      <td>0.1</td>      <td>Iris-setosa</td>    </tr>    <tr>      <th>14</th>      <td>5.8</td>      <td>4.0</td>      <td>1.0</td>      <td>0.2</td>      <td>Iris-setosa</td>    </tr>    <tr>      <th>15</th>      <td>5.7</td>      <td>4.4</td>      <td>1.0</td>      <td>0.4</td>      <td>Iris-setosa</td>    </tr>    <tr>      <th>16</th>      <td>5.4</td>      <td>3.9</td>      <td>1.0</td>      <td>0.4</td>      <td>Iris-setosa</td>    </tr>    <tr>      <th>17</th>      <td>5.1</td>      <td>3.5</td>      <td>1.0</td>      <td>0.3</td>      <td>Iris-setosa</td>    </tr>    <tr>      <th>18</th>      <td>5.7</td>      <td>3.8</td>      <td>1.0</td>      <td>0.3</td>      <td>Iris-setosa</td>    </tr>    <tr>      <th>19</th>      <td>5.1</td>      <td>3.8</td>      <td>1.0</td>      <td>0.3</td>      <td>Iris-setosa</td>    </tr>  </tbody></table></div><h2 id="删除列class"><a href="#删除列class" class="headerlink" title="删除列class"></a>删除列class</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iris.drop(<span class="string">'class'</span>,inplace=<span class="literal">True</span>,axis=<span class="number">1</span>)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iris.head()</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>sepal_length</th>      <th>sepal_width</th>      <th>petal_length</th>      <th>petal_width</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>5.1</td>      <td>3.5</td>      <td>1.4</td>      <td>0.2</td>    </tr>    <tr>      <th>1</th>      <td>4.9</td>      <td>3.0</td>      <td>1.4</td>      <td>0.2</td>    </tr>    <tr>      <th>2</th>      <td>4.7</td>      <td>3.2</td>      <td>1.3</td>      <td>0.2</td>    </tr>    <tr>      <th>3</th>      <td>4.6</td>      <td>3.1</td>      <td>1.5</td>      <td>0.2</td>    </tr>    <tr>      <th>4</th>      <td>5.0</td>      <td>3.6</td>      <td>1.4</td>      <td>0.2</td>    </tr>  </tbody></table></div><h2 id="将数据框前三行设置为缺失值"><a href="#将数据框前三行设置为缺失值" class="headerlink" title="将数据框前三行设置为缺失值"></a>将数据框前三行设置为缺失值</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">iris.iloc[<span class="number">0</span>:<span class="number">3</span>, :] = np.nan</span><br><span class="line">iris</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>sepal_length</th>      <th>sepal_width</th>      <th>petal_length</th>      <th>petal_width</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <th>1</th>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <th>2</th>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <th>3</th>      <td>4.6</td>      <td>3.1</td>      <td>1.5</td>      <td>0.2</td>    </tr>    <tr>      <th>4</th>      <td>5.0</td>      <td>3.6</td>      <td>1.4</td>      <td>0.2</td>    </tr>    <tr>      <th>...</th>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <th>145</th>      <td>6.7</td>      <td>3.0</td>      <td>5.2</td>      <td>2.3</td>    </tr>    <tr>      <th>146</th>      <td>6.3</td>      <td>2.5</td>      <td>5.0</td>      <td>1.9</td>    </tr>    <tr>      <th>147</th>      <td>6.5</td>      <td>3.0</td>      <td>5.2</td>      <td>2.0</td>    </tr>    <tr>      <th>148</th>      <td>6.2</td>      <td>3.4</td>      <td>5.4</td>      <td>2.3</td>    </tr>    <tr>      <th>149</th>      <td>5.9</td>      <td>3.0</td>      <td>5.1</td>      <td>1.8</td>    </tr>  </tbody></table><p>150 rows × 4 columns</p></div><h2 id="删除有缺失值的行"><a href="#删除有缺失值的行" class="headerlink" title="删除有缺失值的行"></a>删除有缺失值的行</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iris.dropna(axis=<span class="number">0</span>, inplace=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iris</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>sepal_length</th>      <th>sepal_width</th>      <th>petal_length</th>      <th>petal_width</th>    </tr>  </thead>  <tbody>    <tr>      <th>3</th>      <td>4.6</td>      <td>3.1</td>      <td>1.5</td>      <td>0.2</td>    </tr>    <tr>      <th>4</th>      <td>5.0</td>      <td>3.6</td>      <td>1.4</td>      <td>0.2</td>    </tr>    <tr>      <th>5</th>      <td>5.4</td>      <td>3.9</td>      <td>1.7</td>      <td>0.4</td>    </tr>    <tr>      <th>6</th>      <td>4.6</td>      <td>3.4</td>      <td>1.4</td>      <td>0.3</td>    </tr>    <tr>      <th>7</th>      <td>5.0</td>      <td>3.4</td>      <td>1.5</td>      <td>0.2</td>    </tr>    <tr>      <th>...</th>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <th>145</th>      <td>6.7</td>      <td>3.0</td>      <td>5.2</td>      <td>2.3</td>    </tr>    <tr>      <th>146</th>      <td>6.3</td>      <td>2.5</td>      <td>5.0</td>      <td>1.9</td>    </tr>    <tr>      <th>147</th>      <td>6.5</td>      <td>3.0</td>      <td>5.2</td>      <td>2.0</td>    </tr>    <tr>      <th>148</th>      <td>6.2</td>      <td>3.4</td>      <td>5.4</td>      <td>2.3</td>    </tr>    <tr>      <th>149</th>      <td>5.9</td>      <td>3.0</td>      <td>5.1</td>      <td>1.8</td>    </tr>  </tbody></table><p>147 rows × 4 columns</p></div><h2 id="重新设置索引"><a href="#重新设置索引" class="headerlink" title="重新设置索引"></a>重新设置索引</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">iris.reset_index(inplace=<span class="literal">True</span>, drop=<span class="literal">True</span>)</span><br><span class="line">iris</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>sepal_length</th>      <th>sepal_width</th>      <th>petal_length</th>      <th>petal_width</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>4.6</td>      <td>3.1</td>      <td>1.5</td>      <td>0.2</td>    </tr>    <tr>      <th>1</th>      <td>5.0</td>      <td>3.6</td>      <td>1.4</td>      <td>0.2</td>    </tr>    <tr>      <th>2</th>      <td>5.4</td>      <td>3.9</td>      <td>1.7</td>      <td>0.4</td>    </tr>    <tr>      <th>3</th>      <td>4.6</td>      <td>3.4</td>      <td>1.4</td>      <td>0.3</td>    </tr>    <tr>      <th>4</th>      <td>5.0</td>      <td>3.4</td>      <td>1.5</td>      <td>0.2</td>    </tr>    <tr>      <th>...</th>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <th>142</th>      <td>6.7</td>      <td>3.0</td>      <td>5.2</td>      <td>2.3</td>    </tr>    <tr>      <th>143</th>      <td>6.3</td>      <td>2.5</td>      <td>5.0</td>      <td>1.9</td>    </tr>    <tr>      <th>144</th>      <td>6.5</td>      <td>3.0</td>      <td>5.2</td>      <td>2.0</td>    </tr>    <tr>      <th>145</th>      <td>6.2</td>      <td>3.4</td>      <td>5.4</td>      <td>2.3</td>    </tr>    <tr>      <th>146</th>      <td>5.9</td>      <td>3.0</td>      <td>5.1</td>      <td>1.8</td>    </tr>  </tbody></table><p>147 rows × 4 columns</p></div>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
          <category> kesci_notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> pandas </tag>
            
            <tag> kesci </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pandas datetime notes</title>
      <link href="/2020/01/15/python/basics/pandas_datetime_notes/"/>
      <url>/2020/01/15/python/basics/pandas_datetime_notes/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="datetime-如何加特定的-offset"><a href="#datetime-如何加特定的-offset" class="headerlink" title="datetime 如何加特定的 offset"></a>datetime 如何加特定的 offset</h1><p><a href="https://blog.csdn.net/AlanGuoo/article/details/89022135" target="_blank" rel="external nofollow noopener noreferrer">https://blog.csdn.net/AlanGuoo/article/details/89022135</a></p><h1 id="datetime-介绍-blog"><a href="#datetime-介绍-blog" class="headerlink" title="datetime 介绍 blog"></a>datetime 介绍 blog</h1><p><a href="https://www.jianshu.com/p/96ea42c58abe" target="_blank" rel="external nofollow noopener noreferrer">https://www.jianshu.com/p/96ea42c58abe</a></p><h1 id="datetime详细处理"><a href="#datetime详细处理" class="headerlink" title="datetime详细处理"></a>datetime详细处理</h1><p><a href="https://blog.csdn.net/onemorepoint/article/details/86158127" target="_blank" rel="external nofollow noopener noreferrer">https://blog.csdn.net/onemorepoint/article/details/86158127</a></p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
          <category> basics </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> pandas </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pandas 基础命令速查表</title>
      <link href="/2020/01/14/python/kesci_notes/pandas%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4%E9%80%9F%E6%9F%A5%E8%A1%A8/"/>
      <url>/2020/01/14/python/kesci_notes/pandas%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4%E9%80%9F%E6%9F%A5%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><font size="72">pandas 基础命令复习</font><p>此notebook为kesci.com的pandas基础命令速查表项目。<br>网址链接：<br><a href="https://www.kesci.com/home/project/59e389b54663f7655c48f518" target="_blank" rel="external nofollow noopener noreferrer">pandas基础命令速查表</a></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br></pre></td></tr></table></figure></div><h2 id="数据导入"><a href="#数据导入" class="headerlink" title="数据导入"></a>数据导入</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">pd.read_csv(filename) <span class="comment"># 导入csv格式文件中的数据</span></span><br><span class="line">pd.read_table(filename) <span class="comment"># 导入有分隔符的文本 (如TSV) 中的数据</span></span><br><span class="line">pd.read_excel(filename) <span class="comment"># 导入Excel格式文件中的数据</span></span><br><span class="line">pd.read_sql(query, connection_object) <span class="comment"># 导入SQL数据表/数据库中的数据</span></span><br><span class="line">pd.read_json(json_string) <span class="comment"># 导入JSON格式的字符，URL地址或者文件中的数据</span></span><br><span class="line">pd.read_html(url) <span class="comment"># 导入经过解析的URL地址中包含的数据框 (DataFrame) 数据</span></span><br><span class="line">pd.read_clipmboard() <span class="comment"># 导入系统粘贴板里面的数据</span></span><br><span class="line">pd.DataFrame(dict)  <span class="comment"># 导入Python字典 (dict) 里面的数据，其中key是数据框的表头，value是数据框的内容。</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">parse_dates = [[<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>]]可以合并读入数据的前三列变成一个datetime的序列</span><br></pre></td></tr></table></figure></div><h2 id="数据导出"><a href="#数据导出" class="headerlink" title="数据导出"></a>数据导出</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">df.to_csv(filename) <span class="comment"># 将数据框 (DataFrame)中的数据导入csv格式的文件中</span></span><br><span class="line">df.to_excel(filename) <span class="comment"># 将数据框 (DataFrame)中的数据导入Excel格式的文件中</span></span><br><span class="line">df.to_sql(table_name,connection_object) <span class="comment"># 将数据框 (DataFrame)中的数据导入SQL数据表/数据库中</span></span><br><span class="line">df.to_json(filename) <span class="comment"># 将数据框 (DataFrame)中的数据导入JSON格式的文件中</span></span><br></pre></td></tr></table></figure></div><h2 id="创建测试对象"><a href="#创建测试对象" class="headerlink" title="创建测试对象"></a>创建测试对象</h2><h3 id="numpy-array-创建"><a href="#numpy-array-创建" class="headerlink" title="numpy array 创建"></a>numpy array 创建</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pd.DataFrame(np.random.rand(<span class="number">10</span>, <span class="number">5</span>))</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>0</th>      <th>1</th>      <th>2</th>      <th>3</th>      <th>4</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>0.585777</td>      <td>0.433112</td>      <td>0.338235</td>      <td>0.291173</td>      <td>0.031913</td>    </tr>    <tr>      <th>1</th>      <td>0.624464</td>      <td>0.895368</td>      <td>0.292560</td>      <td>0.080429</td>      <td>0.495787</td>    </tr>    <tr>      <th>2</th>      <td>0.816629</td>      <td>0.563991</td>      <td>0.189032</td>      <td>0.114238</td>      <td>0.524798</td>    </tr>    <tr>      <th>3</th>      <td>0.065594</td>      <td>0.794394</td>      <td>0.699740</td>      <td>0.413209</td>      <td>0.630886</td>    </tr>    <tr>      <th>4</th>      <td>0.001313</td>      <td>0.100108</td>      <td>0.882507</td>      <td>0.498680</td>      <td>0.108653</td>    </tr>    <tr>      <th>5</th>      <td>0.777563</td>      <td>0.892090</td>      <td>0.950747</td>      <td>0.869066</td>      <td>0.405635</td>    </tr>    <tr>      <th>6</th>      <td>0.597492</td>      <td>0.794607</td>      <td>0.345172</td>      <td>0.685253</td>      <td>0.434808</td>    </tr>    <tr>      <th>7</th>      <td>0.263838</td>      <td>0.649635</td>      <td>0.828545</td>      <td>0.859189</td>      <td>0.090903</td>    </tr>    <tr>      <th>8</th>      <td>0.074650</td>      <td>0.448147</td>      <td>0.905926</td>      <td>0.283079</td>      <td>0.618817</td>    </tr>    <tr>      <th>9</th>      <td>0.117861</td>      <td>0.120424</td>      <td>0.063917</td>      <td>0.605063</td>      <td>0.954940</td>    </tr>  </tbody></table></div><h3 id="list-创建"><a href="#list-创建" class="headerlink" title="list 创建"></a>list 创建</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">my_list = [<span class="string">'Kesci'</span>,<span class="number">100</span>,<span class="string">'欢迎来到科赛网'</span>]</span><br><span class="line">pd.Series(my_list)</span><br></pre></td></tr></table></figure></div><pre><code>0      Kesci1        1002    欢迎来到科赛网dtype: object</code></pre><p>添加一个日期索引</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">df = pd.DataFrame(np.random.rand(<span class="number">10</span>,<span class="number">5</span>))</span><br><span class="line">df.index = pd.date_range(<span class="string">'2017/1/1'</span>, periods=df.shape[<span class="number">0</span>])</span><br><span class="line">df</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>0</th>      <th>1</th>      <th>2</th>      <th>3</th>      <th>4</th>    </tr>  </thead>  <tbody>    <tr>      <th>2017-01-01</th>      <td>0.828249</td>      <td>0.792735</td>      <td>0.512458</td>      <td>0.961731</td>      <td>0.917472</td>    </tr>    <tr>      <th>2017-01-02</th>      <td>0.566537</td>      <td>0.754457</td>      <td>0.235026</td>      <td>0.795147</td>      <td>0.245506</td>    </tr>    <tr>      <th>2017-01-03</th>      <td>0.468922</td>      <td>0.852834</td>      <td>0.549959</td>      <td>0.124779</td>      <td>0.219038</td>    </tr>    <tr>      <th>2017-01-04</th>      <td>0.467536</td>      <td>0.482505</td>      <td>0.238425</td>      <td>0.604942</td>      <td>0.921739</td>    </tr>    <tr>      <th>2017-01-05</th>      <td>0.599552</td>      <td>0.123519</td>      <td>0.814959</td>      <td>0.329789</td>      <td>0.696340</td>    </tr>    <tr>      <th>2017-01-06</th>      <td>0.946407</td>      <td>0.780112</td>      <td>0.965793</td>      <td>0.743042</td>      <td>0.613386</td>    </tr>    <tr>      <th>2017-01-07</th>      <td>0.791554</td>      <td>0.015501</td>      <td>0.500903</td>      <td>0.797965</td>      <td>0.856116</td>    </tr>    <tr>      <th>2017-01-08</th>      <td>0.052724</td>      <td>0.335682</td>      <td>0.253801</td>      <td>0.277599</td>      <td>0.525408</td>    </tr>    <tr>      <th>2017-01-09</th>      <td>0.492461</td>      <td>0.140432</td>      <td>0.316593</td>      <td>0.727536</td>      <td>0.958459</td>    </tr>    <tr>      <th>2017-01-10</th>      <td>0.562764</td>      <td>0.952519</td>      <td>0.256441</td>      <td>0.942915</td>      <td>0.152228</td>    </tr>  </tbody></table></div><h3 id="用普通字典创建"><a href="#用普通字典创建" class="headerlink" title="用普通字典创建"></a>用普通字典创建</h3><p>注意此法不能保证顺序</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">new_dict = &#123;&#125;</span><br><span class="line">new_dict[<span class="string">'foo'</span>] = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>] </span><br><span class="line">new_dict[<span class="string">'bar'</span>] = [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]</span><br><span class="line">df = pd.DataFrame(new_dict)</span><br><span class="line">df</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>foo</th>      <th>bar</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>1</td>      <td>4</td>    </tr>    <tr>      <th>1</th>      <td>2</td>      <td>5</td>    </tr>    <tr>      <th>2</th>      <td>3</td>      <td>6</td>    </tr>  </tbody></table></div><h3 id="用orderdict创建"><a href="#用orderdict创建" class="headerlink" title="用orderdict创建"></a>用orderdict创建</h3><p>此法一定能够按照顺序创建</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> OrderedDict</span><br><span class="line"></span><br><span class="line">order_dict = OrderedDict()</span><br><span class="line">order_dict[<span class="string">'foo'</span>] = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">order_dict[<span class="string">'bar'</span>] = [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]</span><br><span class="line"></span><br><span class="line">order_dict</span><br><span class="line"></span><br><span class="line">df = pd.DataFrame(order_dict)</span><br><span class="line">df</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>foo</th>      <th>bar</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>1</td>      <td>4</td>    </tr>    <tr>      <th>1</th>      <td>2</td>      <td>5</td>    </tr>    <tr>      <th>2</th>      <td>3</td>      <td>6</td>    </tr>  </tbody></table></div><h2 id="数据的查看与检查"><a href="#数据的查看与检查" class="headerlink" title="数据的查看与检查"></a>数据的查看与检查</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.head(<span class="number">3</span>)</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>0</th>      <th>1</th>      <th>2</th>      <th>3</th>      <th>4</th>    </tr>  </thead>  <tbody>    <tr>      <th>2017-01-01</th>      <td>0.933522</td>      <td>0.245400</td>      <td>0.293748</td>      <td>0.723707</td>      <td>0.844672</td>    </tr>    <tr>      <th>2017-01-02</th>      <td>0.583137</td>      <td>0.717747</td>      <td>0.409480</td>      <td>0.489166</td>      <td>0.788739</td>    </tr>    <tr>      <th>2017-01-03</th>      <td>0.234310</td>      <td>0.287521</td>      <td>0.574982</td>      <td>0.845111</td>      <td>0.817525</td>    </tr>  </tbody></table></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.tail(<span class="number">3</span>)</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>0</th>      <th>1</th>      <th>2</th>      <th>3</th>      <th>4</th>    </tr>  </thead>  <tbody>    <tr>      <th>2017-01-08</th>      <td>0.551200</td>      <td>0.934601</td>      <td>0.933677</td>      <td>0.792482</td>      <td>0.532230</td>    </tr>    <tr>      <th>2017-01-09</th>      <td>0.126025</td>      <td>0.033953</td>      <td>0.284972</td>      <td>0.715794</td>      <td>0.083033</td>    </tr>    <tr>      <th>2017-01-10</th>      <td>0.138878</td>      <td>0.834870</td>      <td>0.065170</td>      <td>0.289762</td>      <td>0.456829</td>    </tr>  </tbody></table></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.shape</span><br></pre></td></tr></table></figure></div><pre><code>(10, 5)</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.info()</span><br></pre></td></tr></table></figure></div><pre><code>&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;DatetimeIndex: 10 entries, 2017-01-01 to 2017-01-10Freq: DData columns (total 5 columns):0    10 non-null float641    10 non-null float642    10 non-null float643    10 non-null float644    10 non-null float64dtypes: float64(5)memory usage: 800.0 bytes</code></pre><h3 id="数据描述"><a href="#数据描述" class="headerlink" title="数据描述"></a>数据描述</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.describe()</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>0</th>      <th>1</th>      <th>2</th>      <th>3</th>      <th>4</th>    </tr>  </thead>  <tbody>    <tr>      <th>count</th>      <td>10.000000</td>      <td>10.000000</td>      <td>10.000000</td>      <td>10.000000</td>      <td>10.000000</td>    </tr>    <tr>      <th>mean</th>      <td>0.497133</td>      <td>0.390297</td>      <td>0.444135</td>      <td>0.700152</td>      <td>0.542396</td>    </tr>    <tr>      <th>std</th>      <td>0.290880</td>      <td>0.333661</td>      <td>0.281356</td>      <td>0.193923</td>      <td>0.272418</td>    </tr>    <tr>      <th>min</th>      <td>0.126025</td>      <td>0.033116</td>      <td>0.065170</td>      <td>0.289762</td>      <td>0.083033</td>    </tr>    <tr>      <th>25%</th>      <td>0.277898</td>      <td>0.142655</td>      <td>0.287166</td>      <td>0.649304</td>      <td>0.376368</td>    </tr>    <tr>      <th>50%</th>      <td>0.492851</td>      <td>0.266461</td>      <td>0.378556</td>      <td>0.719751</td>      <td>0.516397</td>    </tr>    <tr>      <th>75%</th>      <td>0.608873</td>      <td>0.659798</td>      <td>0.637238</td>      <td>0.831953</td>      <td>0.810329</td>    </tr>    <tr>      <th>max</th>      <td>0.943647</td>      <td>0.934601</td>      <td>0.933677</td>      <td>0.921472</td>      <td>0.844672</td>    </tr>  </tbody></table></div><h3 id="单列数值次数统计"><a href="#单列数值次数统计" class="headerlink" title="单列数值次数统计"></a>单列数值次数统计</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.loc[:, <span class="number">0</span>].value_counts(dropna=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure></div><pre><code>0.943647    10.617452    10.583137    10.551200    10.234310    10.933522    10.138878    10.408662    10.126025    10.434502    1Name: 0, dtype: int64</code></pre><h3 id="查询数据框-Data-Frame-中每个列的独特数据值出现次数统计"><a href="#查询数据框-Data-Frame-中每个列的独特数据值出现次数统计" class="headerlink" title="查询数据框 (Data Frame) 中每个列的独特数据值出现次数统计"></a>查询数据框 (Data Frame) 中每个列的独特数据值出现次数统计</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.apply(pd.Series.value_counts)</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>0</th>      <th>1</th>      <th>2</th>      <th>3</th>      <th>4</th>    </tr>  </thead>  <tbody>    <tr>      <th>0.033116</th>      <td>NaN</td>      <td>1.0</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <th>0.033953</th>      <td>NaN</td>      <td>1.0</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <th>0.065170</th>      <td>NaN</td>      <td>NaN</td>      <td>1.0</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <th>0.083033</th>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>1.0</td>    </tr>    <tr>      <th>0.114544</th>      <td>NaN</td>      <td>NaN</td>      <td>1.0</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <th>0.120403</th>      <td>NaN</td>      <td>1.0</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <th>0.126025</th>      <td>1.0</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <th>0.138878</th>      <td>1.0</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <th>0.209412</th>      <td>NaN</td>      <td>1.0</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <th>0.223586</th>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>1.0</td>    </tr>    <tr>      <th>0.234310</th>      <td>1.0</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <th>0.245400</th>      <td>NaN</td>      <td>1.0</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <th>0.284972</th>      <td>NaN</td>      <td>NaN</td>      <td>1.0</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <th>0.287521</th>      <td>NaN</td>      <td>1.0</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <th>0.289762</th>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>1.0</td>      <td>NaN</td>    </tr>    <tr>      <th>0.293748</th>      <td>NaN</td>      <td>NaN</td>      <td>1.0</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <th>0.347632</th>      <td>NaN</td>      <td>NaN</td>      <td>1.0</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <th>0.349548</th>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>1.0</td>    </tr>    <tr>      <th>0.408662</th>      <td>1.0</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <th>0.409480</th>      <td>NaN</td>      <td>NaN</td>      <td>1.0</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <th>0.434502</th>      <td>1.0</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <th>0.456829</th>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>1.0</td>    </tr>    <tr>      <th>0.485952</th>      <td>NaN</td>      <td>1.0</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <th>0.489166</th>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>1.0</td>      <td>NaN</td>    </tr>    <tr>      <th>0.500563</th>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>1.0</td>    </tr>    <tr>      <th>0.532230</th>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>1.0</td>    </tr>    <tr>      <th>0.551200</th>      <td>1.0</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <th>0.574982</th>      <td>NaN</td>      <td>NaN</td>      <td>1.0</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <th>0.583137</th>      <td>1.0</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <th>0.617452</th>      <td>1.0</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <th>0.639218</th>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>1.0</td>      <td>NaN</td>    </tr>    <tr>      <th>0.657990</th>      <td>NaN</td>      <td>NaN</td>      <td>1.0</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <th>0.679562</th>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>1.0</td>      <td>NaN</td>    </tr>    <tr>      <th>0.715794</th>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>1.0</td>      <td>NaN</td>    </tr>    <tr>      <th>0.717747</th>      <td>NaN</td>      <td>1.0</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <th>0.723707</th>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>1.0</td>      <td>NaN</td>    </tr>    <tr>      <th>0.759157</th>      <td>NaN</td>      <td>NaN</td>      <td>1.0</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <th>0.788739</th>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>1.0</td>    </tr>    <tr>      <th>0.792482</th>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>1.0</td>      <td>NaN</td>    </tr>    <tr>      <th>0.817525</th>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>1.0</td>    </tr>    <tr>      <th>0.827238</th>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>1.0</td>    </tr>    <tr>      <th>0.834870</th>      <td>NaN</td>      <td>1.0</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <th>0.844672</th>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>1.0</td>    </tr>    <tr>      <th>0.845111</th>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>1.0</td>      <td>NaN</td>    </tr>    <tr>      <th>0.905241</th>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>1.0</td>      <td>NaN</td>    </tr>    <tr>      <th>0.921472</th>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>1.0</td>      <td>NaN</td>    </tr>    <tr>      <th>0.933522</th>      <td>1.0</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <th>0.933677</th>      <td>NaN</td>      <td>NaN</td>      <td>1.0</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <th>0.934601</th>      <td>NaN</td>      <td>1.0</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <th>0.943647</th>      <td>1.0</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>    </tr>  </tbody></table></div><h3 id="分类计数"><a href="#分类计数" class="headerlink" title="分类计数"></a>分类计数</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> OrderedDict</span><br><span class="line">order_dict = OrderedDict()</span><br><span class="line">order_dict[<span class="string">'foo'</span>] = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">1</span>]</span><br><span class="line">order_dict[<span class="string">'bar'</span>] = [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">5</span>]</span><br><span class="line">df = pd.DataFrame(order_dict)</span><br><span class="line">df</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>foo</th>      <th>bar</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>1</td>      <td>4</td>    </tr>    <tr>      <th>1</th>      <td>2</td>      <td>5</td>    </tr>    <tr>      <th>2</th>      <td>3</td>      <td>6</td>    </tr>    <tr>      <th>3</th>      <td>3</td>      <td>5</td>    </tr>    <tr>      <th>4</th>      <td>1</td>      <td>5</td>    </tr>  </tbody></table></div><p>样本分类统计个数</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.loc[:, <span class="string">'foo'</span>].value_counts().head(<span class="number">20</span>)</span><br></pre></td></tr></table></figure></div><pre><code>3    21    22    1Name: foo, dtype: int64</code></pre><h3 id="样本类型个数"><a href="#样本类型个数" class="headerlink" title="样本类型个数"></a>样本类型个数</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.loc[:, <span class="string">'foo'</span>].nunique()</span><br></pre></td></tr></table></figure></div><pre><code>3</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.loc[:, <span class="string">'foo'</span>].value_counts().shape[<span class="number">0</span>]</span><br></pre></td></tr></table></figure></div><pre><code>3</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">len(df.loc[:, <span class="string">'foo'</span>].unique())</span><br></pre></td></tr></table></figure></div><pre><code>3</code></pre><h2 id="数据的选取"><a href="#数据的选取" class="headerlink" title="数据的选取"></a>数据的选取</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>0</th>      <th>1</th>      <th>2</th>      <th>3</th>      <th>4</th>    </tr>  </thead>  <tbody>    <tr>      <th>2017-01-01</th>      <td>0.933522</td>      <td>0.245400</td>      <td>0.293748</td>      <td>0.723707</td>      <td>0.844672</td>    </tr>    <tr>      <th>2017-01-02</th>      <td>0.583137</td>      <td>0.717747</td>      <td>0.409480</td>      <td>0.489166</td>      <td>0.788739</td>    </tr>    <tr>      <th>2017-01-03</th>      <td>0.234310</td>      <td>0.287521</td>      <td>0.574982</td>      <td>0.845111</td>      <td>0.817525</td>    </tr>    <tr>      <th>2017-01-04</th>      <td>0.434502</td>      <td>0.120403</td>      <td>0.347632</td>      <td>0.639218</td>      <td>0.223586</td>    </tr>    <tr>      <th>2017-01-05</th>      <td>0.408662</td>      <td>0.209412</td>      <td>0.657990</td>      <td>0.679562</td>      <td>0.349548</td>    </tr>    <tr>      <th>2017-01-06</th>      <td>0.617452</td>      <td>0.033116</td>      <td>0.759157</td>      <td>0.921472</td>      <td>0.827238</td>    </tr>    <tr>      <th>2017-01-07</th>      <td>0.943647</td>      <td>0.485952</td>      <td>0.114544</td>      <td>0.905241</td>      <td>0.500563</td>    </tr>    <tr>      <th>2017-01-08</th>      <td>0.551200</td>      <td>0.934601</td>      <td>0.933677</td>      <td>0.792482</td>      <td>0.532230</td>    </tr>    <tr>      <th>2017-01-09</th>      <td>0.126025</td>      <td>0.033953</td>      <td>0.284972</td>      <td>0.715794</td>      <td>0.083033</td>    </tr>    <tr>      <th>2017-01-10</th>      <td>0.138878</td>      <td>0.834870</td>      <td>0.065170</td>      <td>0.289762</td>      <td>0.456829</td>    </tr>  </tbody></table></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.loc[<span class="string">'2017-01-01'</span>, <span class="number">1</span>]</span><br></pre></td></tr></table></figure></div><pre><code>0.24540013304048203</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.ix[<span class="string">'2017-01-01'</span>, <span class="number">1</span>]</span><br></pre></td></tr></table></figure></div><pre><code>C:\Users\yxion\Anaconda3\envs\py37\lib\site-packages\ipykernel_launcher.py:1: FutureWarning: .ix is deprecated. Please use.loc for label based indexing or.iloc for positional indexingSee the documentation here:http://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#ix-indexer-is-deprecated  &quot;&quot;&quot;Entry point for launching an IPython kernel.0.24540013304048203</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.iloc[<span class="number">0</span>, <span class="number">1</span>]</span><br></pre></td></tr></table></figure></div><pre><code>0.24540013304048203</code></pre><h2 id="数据的清洗"><a href="#数据的清洗" class="headerlink" title="数据的清洗"></a>数据的清洗</h2><h3 id="数据列的重命名"><a href="#数据列的重命名" class="headerlink" title="数据列的重命名"></a>数据列的重命名</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>0</th>      <th>1</th>      <th>2</th>      <th>3</th>      <th>4</th>    </tr>  </thead>  <tbody>    <tr>      <th>2017-01-01</th>      <td>0.828249</td>      <td>0.792735</td>      <td>0.512458</td>      <td>0.961731</td>      <td>0.917472</td>    </tr>    <tr>      <th>2017-01-02</th>      <td>0.566537</td>      <td>0.754457</td>      <td>0.235026</td>      <td>0.795147</td>      <td>0.245506</td>    </tr>    <tr>      <th>2017-01-03</th>      <td>0.468922</td>      <td>0.852834</td>      <td>0.549959</td>      <td>0.124779</td>      <td>0.219038</td>    </tr>    <tr>      <th>2017-01-04</th>      <td>0.467536</td>      <td>0.482505</td>      <td>0.238425</td>      <td>0.604942</td>      <td>0.921739</td>    </tr>    <tr>      <th>2017-01-05</th>      <td>0.599552</td>      <td>0.123519</td>      <td>0.814959</td>      <td>0.329789</td>      <td>0.696340</td>    </tr>    <tr>      <th>2017-01-06</th>      <td>0.946407</td>      <td>0.780112</td>      <td>0.965793</td>      <td>0.743042</td>      <td>0.613386</td>    </tr>    <tr>      <th>2017-01-07</th>      <td>0.791554</td>      <td>0.015501</td>      <td>0.500903</td>      <td>0.797965</td>      <td>0.856116</td>    </tr>    <tr>      <th>2017-01-08</th>      <td>0.052724</td>      <td>0.335682</td>      <td>0.253801</td>      <td>0.277599</td>      <td>0.525408</td>    </tr>    <tr>      <th>2017-01-09</th>      <td>0.492461</td>      <td>0.140432</td>      <td>0.316593</td>      <td>0.727536</td>      <td>0.958459</td>    </tr>    <tr>      <th>2017-01-10</th>      <td>0.562764</td>      <td>0.952519</td>      <td>0.256441</td>      <td>0.942915</td>      <td>0.152228</td>    </tr>  </tbody></table></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.columns = [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>]</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>a</th>      <th>b</th>      <th>c</th>      <th>d</th>      <th>e</th>    </tr>  </thead>  <tbody>    <tr>      <th>2017-01-01</th>      <td>0.828249</td>      <td>0.792735</td>      <td>0.512458</td>      <td>0.961731</td>      <td>0.917472</td>    </tr>    <tr>      <th>2017-01-02</th>      <td>0.566537</td>      <td>0.754457</td>      <td>0.235026</td>      <td>0.795147</td>      <td>0.245506</td>    </tr>    <tr>      <th>2017-01-03</th>      <td>0.468922</td>      <td>0.852834</td>      <td>0.549959</td>      <td>0.124779</td>      <td>0.219038</td>    </tr>    <tr>      <th>2017-01-04</th>      <td>0.467536</td>      <td>0.482505</td>      <td>0.238425</td>      <td>0.604942</td>      <td>0.921739</td>    </tr>    <tr>      <th>2017-01-05</th>      <td>0.599552</td>      <td>0.123519</td>      <td>0.814959</td>      <td>0.329789</td>      <td>0.696340</td>    </tr>    <tr>      <th>2017-01-06</th>      <td>0.946407</td>      <td>0.780112</td>      <td>0.965793</td>      <td>0.743042</td>      <td>0.613386</td>    </tr>    <tr>      <th>2017-01-07</th>      <td>0.791554</td>      <td>0.015501</td>      <td>0.500903</td>      <td>0.797965</td>      <td>0.856116</td>    </tr>    <tr>      <th>2017-01-08</th>      <td>0.052724</td>      <td>0.335682</td>      <td>0.253801</td>      <td>0.277599</td>      <td>0.525408</td>    </tr>    <tr>      <th>2017-01-09</th>      <td>0.492461</td>      <td>0.140432</td>      <td>0.316593</td>      <td>0.727536</td>      <td>0.958459</td>    </tr>    <tr>      <th>2017-01-10</th>      <td>0.562764</td>      <td>0.952519</td>      <td>0.256441</td>      <td>0.942915</td>      <td>0.152228</td>    </tr>  </tbody></table></div><p>df.rename不会替换原dataframe</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.rename(columns=<span class="keyword">lambda</span> x: x+<span class="string">'changed'</span>)</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>achanged</th>      <th>bchanged</th>      <th>cchanged</th>      <th>dchanged</th>      <th>echanged</th>    </tr>  </thead>  <tbody>    <tr>      <th>2017-01-01</th>      <td>0.828249</td>      <td>0.792735</td>      <td>0.512458</td>      <td>0.961731</td>      <td>0.917472</td>    </tr>    <tr>      <th>2017-01-02</th>      <td>0.566537</td>      <td>0.754457</td>      <td>0.235026</td>      <td>0.795147</td>      <td>0.245506</td>    </tr>    <tr>      <th>2017-01-03</th>      <td>0.468922</td>      <td>0.852834</td>      <td>0.549959</td>      <td>0.124779</td>      <td>0.219038</td>    </tr>    <tr>      <th>2017-01-04</th>      <td>0.467536</td>      <td>0.482505</td>      <td>0.238425</td>      <td>0.604942</td>      <td>0.921739</td>    </tr>    <tr>      <th>2017-01-05</th>      <td>0.599552</td>      <td>0.123519</td>      <td>0.814959</td>      <td>0.329789</td>      <td>0.696340</td>    </tr>    <tr>      <th>2017-01-06</th>      <td>0.946407</td>      <td>0.780112</td>      <td>0.965793</td>      <td>0.743042</td>      <td>0.613386</td>    </tr>    <tr>      <th>2017-01-07</th>      <td>0.791554</td>      <td>0.015501</td>      <td>0.500903</td>      <td>0.797965</td>      <td>0.856116</td>    </tr>    <tr>      <th>2017-01-08</th>      <td>0.052724</td>      <td>0.335682</td>      <td>0.253801</td>      <td>0.277599</td>      <td>0.525408</td>    </tr>    <tr>      <th>2017-01-09</th>      <td>0.492461</td>      <td>0.140432</td>      <td>0.316593</td>      <td>0.727536</td>      <td>0.958459</td>    </tr>    <tr>      <th>2017-01-10</th>      <td>0.562764</td>      <td>0.952519</td>      <td>0.256441</td>      <td>0.942915</td>      <td>0.152228</td>    </tr>  </tbody></table></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.rename(columns=&#123;<span class="string">'a'</span>:<span class="string">'newA'</span>,<span class="string">'c'</span>:<span class="string">'newC'</span>&#125;)</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>newA</th>      <th>b</th>      <th>newC</th>      <th>d</th>      <th>e</th>    </tr>  </thead>  <tbody>    <tr>      <th>2017-01-01</th>      <td>0.828249</td>      <td>0.792735</td>      <td>0.512458</td>      <td>0.961731</td>      <td>0.917472</td>    </tr>    <tr>      <th>2017-01-02</th>      <td>0.566537</td>      <td>0.754457</td>      <td>0.235026</td>      <td>0.795147</td>      <td>0.245506</td>    </tr>    <tr>      <th>2017-01-03</th>      <td>0.468922</td>      <td>0.852834</td>      <td>0.549959</td>      <td>0.124779</td>      <td>0.219038</td>    </tr>    <tr>      <th>2017-01-04</th>      <td>0.467536</td>      <td>0.482505</td>      <td>0.238425</td>      <td>0.604942</td>      <td>0.921739</td>    </tr>    <tr>      <th>2017-01-05</th>      <td>0.599552</td>      <td>0.123519</td>      <td>0.814959</td>      <td>0.329789</td>      <td>0.696340</td>    </tr>    <tr>      <th>2017-01-06</th>      <td>0.946407</td>      <td>0.780112</td>      <td>0.965793</td>      <td>0.743042</td>      <td>0.613386</td>    </tr>    <tr>      <th>2017-01-07</th>      <td>0.791554</td>      <td>0.015501</td>      <td>0.500903</td>      <td>0.797965</td>      <td>0.856116</td>    </tr>    <tr>      <th>2017-01-08</th>      <td>0.052724</td>      <td>0.335682</td>      <td>0.253801</td>      <td>0.277599</td>      <td>0.525408</td>    </tr>    <tr>      <th>2017-01-09</th>      <td>0.492461</td>      <td>0.140432</td>      <td>0.316593</td>      <td>0.727536</td>      <td>0.958459</td>    </tr>    <tr>      <th>2017-01-10</th>      <td>0.562764</td>      <td>0.952519</td>      <td>0.256441</td>      <td>0.942915</td>      <td>0.152228</td>    </tr>  </tbody></table></div><h3 id="数据行的重命名"><a href="#数据行的重命名" class="headerlink" title="数据行的重命名"></a>数据行的重命名</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.index = [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>, <span class="string">'f'</span>, <span class="string">'g'</span>, <span class="string">'h'</span>, <span class="string">'i'</span>, <span class="string">'j'</span>]</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>a</th>      <th>b</th>      <th>c</th>      <th>d</th>      <th>e</th>    </tr>  </thead>  <tbody>    <tr>      <th>a</th>      <td>0.828249</td>      <td>0.792735</td>      <td>0.512458</td>      <td>0.961731</td>      <td>0.917472</td>    </tr>    <tr>      <th>b</th>      <td>0.566537</td>      <td>0.754457</td>      <td>0.235026</td>      <td>0.795147</td>      <td>0.245506</td>    </tr>    <tr>      <th>c</th>      <td>0.468922</td>      <td>0.852834</td>      <td>0.549959</td>      <td>0.124779</td>      <td>0.219038</td>    </tr>    <tr>      <th>d</th>      <td>0.467536</td>      <td>0.482505</td>      <td>0.238425</td>      <td>0.604942</td>      <td>0.921739</td>    </tr>    <tr>      <th>e</th>      <td>0.599552</td>      <td>0.123519</td>      <td>0.814959</td>      <td>0.329789</td>      <td>0.696340</td>    </tr>    <tr>      <th>f</th>      <td>0.946407</td>      <td>0.780112</td>      <td>0.965793</td>      <td>0.743042</td>      <td>0.613386</td>    </tr>    <tr>      <th>g</th>      <td>0.791554</td>      <td>0.015501</td>      <td>0.500903</td>      <td>0.797965</td>      <td>0.856116</td>    </tr>    <tr>      <th>h</th>      <td>0.052724</td>      <td>0.335682</td>      <td>0.253801</td>      <td>0.277599</td>      <td>0.525408</td>    </tr>    <tr>      <th>i</th>      <td>0.492461</td>      <td>0.140432</td>      <td>0.316593</td>      <td>0.727536</td>      <td>0.958459</td>    </tr>    <tr>      <th>j</th>      <td>0.562764</td>      <td>0.952519</td>      <td>0.256441</td>      <td>0.942915</td>      <td>0.152228</td>    </tr>  </tbody></table></div><h3 id="使用特定列作为行索引"><a href="#使用特定列作为行索引" class="headerlink" title="使用特定列作为行索引"></a>使用特定列作为行索引</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>a</th>      <th>b</th>      <th>c</th>      <th>d</th>      <th>e</th>    </tr>  </thead>  <tbody>    <tr>      <th>a</th>      <td>0.828249</td>      <td>0.792735</td>      <td>0.512458</td>      <td>0.961731</td>      <td>0.917472</td>    </tr>    <tr>      <th>b</th>      <td>0.566537</td>      <td>0.754457</td>      <td>0.235026</td>      <td>0.795147</td>      <td>0.245506</td>    </tr>    <tr>      <th>c</th>      <td>0.468922</td>      <td>0.852834</td>      <td>0.549959</td>      <td>0.124779</td>      <td>0.219038</td>    </tr>    <tr>      <th>d</th>      <td>0.467536</td>      <td>0.482505</td>      <td>0.238425</td>      <td>0.604942</td>      <td>0.921739</td>    </tr>    <tr>      <th>e</th>      <td>0.599552</td>      <td>0.123519</td>      <td>0.814959</td>      <td>0.329789</td>      <td>0.696340</td>    </tr>    <tr>      <th>f</th>      <td>0.946407</td>      <td>0.780112</td>      <td>0.965793</td>      <td>0.743042</td>      <td>0.613386</td>    </tr>    <tr>      <th>g</th>      <td>0.791554</td>      <td>0.015501</td>      <td>0.500903</td>      <td>0.797965</td>      <td>0.856116</td>    </tr>    <tr>      <th>h</th>      <td>0.052724</td>      <td>0.335682</td>      <td>0.253801</td>      <td>0.277599</td>      <td>0.525408</td>    </tr>    <tr>      <th>i</th>      <td>0.492461</td>      <td>0.140432</td>      <td>0.316593</td>      <td>0.727536</td>      <td>0.958459</td>    </tr>    <tr>      <th>j</th>      <td>0.562764</td>      <td>0.952519</td>      <td>0.256441</td>      <td>0.942915</td>      <td>0.152228</td>    </tr>  </tbody></table></div><p>例如把a这列变成index</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df1 = df.set_index(<span class="string">'a'</span>)</span><br><span class="line">df1</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>b</th>      <th>c</th>      <th>d</th>      <th>e</th>    </tr>    <tr>      <th>a</th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>0.828249</th>      <td>0.792735</td>      <td>0.512458</td>      <td>0.961731</td>      <td>0.917472</td>    </tr>    <tr>      <th>0.566537</th>      <td>0.754457</td>      <td>0.235026</td>      <td>0.795147</td>      <td>0.245506</td>    </tr>    <tr>      <th>0.468922</th>      <td>0.852834</td>      <td>0.549959</td>      <td>0.124779</td>      <td>0.219038</td>    </tr>    <tr>      <th>0.467536</th>      <td>0.482505</td>      <td>0.238425</td>      <td>0.604942</td>      <td>0.921739</td>    </tr>    <tr>      <th>0.599552</th>      <td>0.123519</td>      <td>0.814959</td>      <td>0.329789</td>      <td>0.696340</td>    </tr>    <tr>      <th>0.946407</th>      <td>0.780112</td>      <td>0.965793</td>      <td>0.743042</td>      <td>0.613386</td>    </tr>    <tr>      <th>0.791554</th>      <td>0.015501</td>      <td>0.500903</td>      <td>0.797965</td>      <td>0.856116</td>    </tr>    <tr>      <th>0.052724</th>      <td>0.335682</td>      <td>0.253801</td>      <td>0.277599</td>      <td>0.525408</td>    </tr>    <tr>      <th>0.492461</th>      <td>0.140432</td>      <td>0.316593</td>      <td>0.727536</td>      <td>0.958459</td>    </tr>    <tr>      <th>0.562764</th>      <td>0.952519</td>      <td>0.256441</td>      <td>0.942915</td>      <td>0.152228</td>    </tr>  </tbody></table></div><p>还原index, 把index列变回数据</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df2 = df1.reset_index()</span><br><span class="line">df2</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>a</th>      <th>b</th>      <th>c</th>      <th>d</th>      <th>e</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>0.828249</td>      <td>0.792735</td>      <td>0.512458</td>      <td>0.961731</td>      <td>0.917472</td>    </tr>    <tr>      <th>1</th>      <td>0.566537</td>      <td>0.754457</td>      <td>0.235026</td>      <td>0.795147</td>      <td>0.245506</td>    </tr>    <tr>      <th>2</th>      <td>0.468922</td>      <td>0.852834</td>      <td>0.549959</td>      <td>0.124779</td>      <td>0.219038</td>    </tr>    <tr>      <th>3</th>      <td>0.467536</td>      <td>0.482505</td>      <td>0.238425</td>      <td>0.604942</td>      <td>0.921739</td>    </tr>    <tr>      <th>4</th>      <td>0.599552</td>      <td>0.123519</td>      <td>0.814959</td>      <td>0.329789</td>      <td>0.696340</td>    </tr>    <tr>      <th>5</th>      <td>0.946407</td>      <td>0.780112</td>      <td>0.965793</td>      <td>0.743042</td>      <td>0.613386</td>    </tr>    <tr>      <th>6</th>      <td>0.791554</td>      <td>0.015501</td>      <td>0.500903</td>      <td>0.797965</td>      <td>0.856116</td>    </tr>    <tr>      <th>7</th>      <td>0.052724</td>      <td>0.335682</td>      <td>0.253801</td>      <td>0.277599</td>      <td>0.525408</td>    </tr>    <tr>      <th>8</th>      <td>0.492461</td>      <td>0.140432</td>      <td>0.316593</td>      <td>0.727536</td>      <td>0.958459</td>    </tr>    <tr>      <th>9</th>      <td>0.562764</td>      <td>0.952519</td>      <td>0.256441</td>      <td>0.942915</td>      <td>0.152228</td>    </tr>  </tbody></table></div><h3 id="检查空值"><a href="#检查空值" class="headerlink" title="检查空值"></a>检查空值</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">df = pd.DataFrame(&#123;<span class="string">'A'</span>:np.array([<span class="number">1</span>,np.nan,<span class="number">2</span>,<span class="number">3</span>,<span class="number">6</span>,np.nan]),</span><br><span class="line">                 <span class="string">'B'</span>:np.array([np.nan,<span class="number">4</span>,np.nan,<span class="number">5</span>,<span class="number">9</span>,np.nan]),</span><br><span class="line">                  <span class="string">'C'</span>:<span class="string">'foo'</span>&#125;)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>A</th>      <th>B</th>      <th>C</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>1.0</td>      <td>NaN</td>      <td>foo</td>    </tr>    <tr>      <th>1</th>      <td>NaN</td>      <td>4.0</td>      <td>foo</td>    </tr>    <tr>      <th>2</th>      <td>2.0</td>      <td>NaN</td>      <td>foo</td>    </tr>    <tr>      <th>3</th>      <td>3.0</td>      <td>5.0</td>      <td>foo</td>    </tr>    <tr>      <th>4</th>      <td>6.0</td>      <td>9.0</td>      <td>foo</td>    </tr>    <tr>      <th>5</th>      <td>NaN</td>      <td>NaN</td>      <td>foo</td>    </tr>  </tbody></table></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pd.isnull(df)</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>A</th>      <th>B</th>      <th>C</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>False</td>      <td>True</td>      <td>False</td>    </tr>    <tr>      <th>1</th>      <td>True</td>      <td>False</td>      <td>False</td>    </tr>    <tr>      <th>2</th>      <td>False</td>      <td>True</td>      <td>False</td>    </tr>    <tr>      <th>3</th>      <td>False</td>      <td>False</td>      <td>False</td>    </tr>    <tr>      <th>4</th>      <td>False</td>      <td>False</td>      <td>False</td>    </tr>    <tr>      <th>5</th>      <td>True</td>      <td>True</td>      <td>False</td>    </tr>  </tbody></table></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pd.notnull(df)</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>A</th>      <th>B</th>      <th>C</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>True</td>      <td>False</td>      <td>True</td>    </tr>    <tr>      <th>1</th>      <td>False</td>      <td>True</td>      <td>True</td>    </tr>    <tr>      <th>2</th>      <td>True</td>      <td>False</td>      <td>True</td>    </tr>    <tr>      <th>3</th>      <td>True</td>      <td>True</td>      <td>True</td>    </tr>    <tr>      <th>4</th>      <td>True</td>      <td>True</td>      <td>True</td>    </tr>    <tr>      <th>5</th>      <td>False</td>      <td>False</td>      <td>True</td>    </tr>  </tbody></table></div><h3 id="移除空值行"><a href="#移除空值行" class="headerlink" title="移除空值行"></a>移除空值行</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.dropna()</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>A</th>      <th>B</th>      <th>C</th>    </tr>  </thead>  <tbody>    <tr>      <th>3</th>      <td>3.0</td>      <td>5.0</td>      <td>foo</td>    </tr>    <tr>      <th>4</th>      <td>6.0</td>      <td>9.0</td>      <td>foo</td>    </tr>  </tbody></table></div><h3 id="移除空值列"><a href="#移除空值列" class="headerlink" title="移除空值列"></a>移除空值列</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.dropna(axis=<span class="number">1</span>)</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>C</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>foo</td>    </tr>    <tr>      <th>1</th>      <td>foo</td>    </tr>    <tr>      <th>2</th>      <td>foo</td>    </tr>    <tr>      <th>3</th>      <td>foo</td>    </tr>    <tr>      <th>4</th>      <td>foo</td>    </tr>    <tr>      <th>5</th>      <td>foo</td>    </tr>  </tbody></table></div><h3 id="移除超过n个空值的列"><a href="#移除超过n个空值的列" class="headerlink" title="移除超过n个空值的列"></a>移除超过n个空值的列</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.dropna(axis=<span class="number">1</span>,thresh=<span class="number">1</span>)</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>A</th>      <th>B</th>      <th>C</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>1.0</td>      <td>NaN</td>      <td>foo</td>    </tr>    <tr>      <th>1</th>      <td>NaN</td>      <td>4.0</td>      <td>foo</td>    </tr>    <tr>      <th>2</th>      <td>2.0</td>      <td>NaN</td>      <td>foo</td>    </tr>    <tr>      <th>3</th>      <td>3.0</td>      <td>5.0</td>      <td>foo</td>    </tr>    <tr>      <th>4</th>      <td>6.0</td>      <td>9.0</td>      <td>foo</td>    </tr>    <tr>      <th>5</th>      <td>NaN</td>      <td>NaN</td>      <td>foo</td>    </tr>  </tbody></table></div><h3 id="填充空值为常数"><a href="#填充空值为常数" class="headerlink" title="填充空值为常数"></a>填充空值为常数</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.fillna(<span class="string">'Test'</span>)</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>A</th>      <th>B</th>      <th>C</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>1</td>      <td>Test</td>      <td>foo</td>    </tr>    <tr>      <th>1</th>      <td>Test</td>      <td>4</td>      <td>foo</td>    </tr>    <tr>      <th>2</th>      <td>2</td>      <td>Test</td>      <td>foo</td>    </tr>    <tr>      <th>3</th>      <td>3</td>      <td>5</td>      <td>foo</td>    </tr>    <tr>      <th>4</th>      <td>6</td>      <td>9</td>      <td>foo</td>    </tr>    <tr>      <th>5</th>      <td>Test</td>      <td>Test</td>      <td>foo</td>    </tr>  </tbody></table></div><h3 id="填充空值为均值"><a href="#填充空值为均值" class="headerlink" title="填充空值为均值"></a>填充空值为均值</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.fillna(df.mean())</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>A</th>      <th>B</th>      <th>C</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>1.0</td>      <td>6.0</td>      <td>foo</td>    </tr>    <tr>      <th>1</th>      <td>3.0</td>      <td>4.0</td>      <td>foo</td>    </tr>    <tr>      <th>2</th>      <td>2.0</td>      <td>6.0</td>      <td>foo</td>    </tr>    <tr>      <th>3</th>      <td>3.0</td>      <td>5.0</td>      <td>foo</td>    </tr>    <tr>      <th>4</th>      <td>6.0</td>      <td>9.0</td>      <td>foo</td>    </tr>    <tr>      <th>5</th>      <td>3.0</td>      <td>6.0</td>      <td>foo</td>    </tr>  </tbody></table></div><h3 id="转换数据类型"><a href="#转换数据类型" class="headerlink" title="转换数据类型"></a>转换数据类型</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.loc[:, <span class="string">'A'</span>].astype(np.float64)</span><br></pre></td></tr></table></figure></div><pre><code>0    1.01    NaN2    2.03    3.04    6.05    NaNName: A, dtype: float64</code></pre><h3 id="替换特定数据"><a href="#替换特定数据" class="headerlink" title="替换特定数据"></a>替换特定数据</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">s = pd.Series([<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,np.nan,<span class="number">7</span>,<span class="number">9</span>,<span class="number">9</span>])</span><br><span class="line">s.replace(<span class="number">1</span>, <span class="string">'one'</span>)</span><br></pre></td></tr></table></figure></div><pre><code>0    one1      32      53    NaN4      75      96      9dtype: object</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s</span><br></pre></td></tr></table></figure></div><pre><code>0    1.01    3.02    5.03    NaN4    7.05    9.06    9.0dtype: float64</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s.replace([<span class="number">1</span>,<span class="number">3</span>],[<span class="string">'one'</span>,<span class="string">'three'</span>])</span><br></pre></td></tr></table></figure></div><pre><code>0      one1    three2        53      NaN4        75        96        9dtype: object</code></pre><h3 id="删除列或者行"><a href="#删除列或者行" class="headerlink" title="删除列或者行"></a>删除列或者行</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> OrderedDict</span><br><span class="line"></span><br><span class="line">order_dict = OrderedDict()</span><br><span class="line">order_dict[<span class="string">'foo'</span>] = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">order_dict[<span class="string">'bar'</span>] = [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]</span><br><span class="line"></span><br><span class="line">order_dict</span><br><span class="line"></span><br><span class="line">df = pd.DataFrame(order_dict)</span><br><span class="line">df</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>foo</th>      <th>bar</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>1</td>      <td>4</td>    </tr>    <tr>      <th>1</th>      <td>2</td>      <td>5</td>    </tr>    <tr>      <th>2</th>      <td>3</td>      <td>6</td>    </tr>  </tbody></table></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.drop(<span class="string">'foo'</span>, axis=<span class="number">1</span>)</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>bar</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>4</td>    </tr>    <tr>      <th>1</th>      <td>5</td>    </tr>    <tr>      <th>2</th>      <td>6</td>    </tr>  </tbody></table></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.drop(<span class="number">0</span>, axis=<span class="number">0</span>)</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>foo</th>      <th>bar</th>    </tr>  </thead>  <tbody>    <tr>      <th>1</th>      <td>2</td>      <td>5</td>    </tr>    <tr>      <th>2</th>      <td>3</td>      <td>6</td>    </tr>  </tbody></table></div><h2 id="数据过滤-排序-分组"><a href="#数据过滤-排序-分组" class="headerlink" title="数据过滤,排序,分组"></a>数据过滤,排序,分组</h2><h3 id="过滤"><a href="#过滤" class="headerlink" title="过滤"></a>过滤</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">df = pd.DataFrame(np.random.rand(<span class="number">10</span>,<span class="number">5</span>))</span><br><span class="line">df.index = pd.date_range(<span class="string">'2017/1/1'</span>, periods=df.shape[<span class="number">0</span>])</span><br><span class="line">df</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>0</th>      <th>1</th>      <th>2</th>      <th>3</th>      <th>4</th>    </tr>  </thead>  <tbody>    <tr>      <th>2017-01-01</th>      <td>0.462320</td>      <td>0.641626</td>      <td>0.783622</td>      <td>0.405599</td>      <td>0.086237</td>    </tr>    <tr>      <th>2017-01-02</th>      <td>0.860784</td>      <td>0.463871</td>      <td>0.671531</td>      <td>0.276455</td>      <td>0.033289</td>    </tr>    <tr>      <th>2017-01-03</th>      <td>0.980626</td>      <td>0.996484</td>      <td>0.772686</td>      <td>0.711433</td>      <td>0.129981</td>    </tr>    <tr>      <th>2017-01-04</th>      <td>0.863321</td>      <td>0.884043</td>      <td>0.182961</td>      <td>0.889572</td>      <td>0.916571</td>    </tr>    <tr>      <th>2017-01-05</th>      <td>0.111071</td>      <td>0.927398</td>      <td>0.636951</td>      <td>0.709890</td>      <td>0.589606</td>    </tr>    <tr>      <th>2017-01-06</th>      <td>0.115526</td>      <td>0.935115</td>      <td>0.506834</td>      <td>0.305816</td>      <td>0.235401</td>    </tr>    <tr>      <th>2017-01-07</th>      <td>0.498320</td>      <td>0.330181</td>      <td>0.905941</td>      <td>0.135436</td>      <td>0.360116</td>    </tr>    <tr>      <th>2017-01-08</th>      <td>0.730144</td>      <td>0.045433</td>      <td>0.698341</td>      <td>0.929830</td>      <td>0.060545</td>    </tr>    <tr>      <th>2017-01-09</th>      <td>0.889181</td>      <td>0.189442</td>      <td>0.832306</td>      <td>0.776265</td>      <td>0.129116</td>    </tr>    <tr>      <th>2017-01-10</th>      <td>0.709422</td>      <td>0.344869</td>      <td>0.889001</td>      <td>0.007639</td>      <td>0.354979</td>    </tr>  </tbody></table></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.loc[df[<span class="number">0</span>]&gt;<span class="number">0.5</span>]</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>0</th>      <th>1</th>      <th>2</th>      <th>3</th>      <th>4</th>    </tr>  </thead>  <tbody>    <tr>      <th>2017-01-02</th>      <td>0.860784</td>      <td>0.463871</td>      <td>0.671531</td>      <td>0.276455</td>      <td>0.033289</td>    </tr>    <tr>      <th>2017-01-03</th>      <td>0.980626</td>      <td>0.996484</td>      <td>0.772686</td>      <td>0.711433</td>      <td>0.129981</td>    </tr>    <tr>      <th>2017-01-04</th>      <td>0.863321</td>      <td>0.884043</td>      <td>0.182961</td>      <td>0.889572</td>      <td>0.916571</td>    </tr>    <tr>      <th>2017-01-08</th>      <td>0.730144</td>      <td>0.045433</td>      <td>0.698341</td>      <td>0.929830</td>      <td>0.060545</td>    </tr>    <tr>      <th>2017-01-09</th>      <td>0.889181</td>      <td>0.189442</td>      <td>0.832306</td>      <td>0.776265</td>      <td>0.129116</td>    </tr>    <tr>      <th>2017-01-10</th>      <td>0.709422</td>      <td>0.344869</td>      <td>0.889001</td>      <td>0.007639</td>      <td>0.354979</td>    </tr>  </tbody></table></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[df[<span class="number">0</span>]&gt;<span class="number">0.5</span>]</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>0</th>      <th>1</th>      <th>2</th>      <th>3</th>      <th>4</th>    </tr>  </thead>  <tbody>    <tr>      <th>2017-01-02</th>      <td>0.860784</td>      <td>0.463871</td>      <td>0.671531</td>      <td>0.276455</td>      <td>0.033289</td>    </tr>    <tr>      <th>2017-01-03</th>      <td>0.980626</td>      <td>0.996484</td>      <td>0.772686</td>      <td>0.711433</td>      <td>0.129981</td>    </tr>    <tr>      <th>2017-01-04</th>      <td>0.863321</td>      <td>0.884043</td>      <td>0.182961</td>      <td>0.889572</td>      <td>0.916571</td>    </tr>    <tr>      <th>2017-01-08</th>      <td>0.730144</td>      <td>0.045433</td>      <td>0.698341</td>      <td>0.929830</td>      <td>0.060545</td>    </tr>    <tr>      <th>2017-01-09</th>      <td>0.889181</td>      <td>0.189442</td>      <td>0.832306</td>      <td>0.776265</td>      <td>0.129116</td>    </tr>    <tr>      <th>2017-01-10</th>      <td>0.709422</td>      <td>0.344869</td>      <td>0.889001</td>      <td>0.007639</td>      <td>0.354979</td>    </tr>  </tbody></table></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[(df[<span class="number">0</span>]&gt;<span class="number">0.5</span>) &amp; (df[<span class="number">1</span>]&gt;<span class="number">0.5</span>)]</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>0</th>      <th>1</th>      <th>2</th>      <th>3</th>      <th>4</th>    </tr>  </thead>  <tbody>    <tr>      <th>2017-01-03</th>      <td>0.980626</td>      <td>0.996484</td>      <td>0.772686</td>      <td>0.711433</td>      <td>0.129981</td>    </tr>    <tr>      <th>2017-01-04</th>      <td>0.863321</td>      <td>0.884043</td>      <td>0.182961</td>      <td>0.889572</td>      <td>0.916571</td>    </tr>  </tbody></table></div><p>isin 的用法</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> OrderedDict</span><br><span class="line"></span><br><span class="line">order_dict = OrderedDict()</span><br><span class="line">order_dict[<span class="string">'foo'</span>] = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">order_dict[<span class="string">'bar'</span>] = [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]</span><br><span class="line"></span><br><span class="line">order_dict</span><br><span class="line"></span><br><span class="line">df = pd.DataFrame(order_dict)</span><br><span class="line">df</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>foo</th>      <th>bar</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>1</td>      <td>4</td>    </tr>    <tr>      <th>1</th>      <td>2</td>      <td>5</td>    </tr>    <tr>      <th>2</th>      <td>3</td>      <td>6</td>    </tr>  </tbody></table></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%timeit df.loc[df.loc[:,<span class="string">'foo'</span>].isin([<span class="number">1</span>,<span class="number">2</span>]),<span class="string">'foo'</span>]</span><br></pre></td></tr></table></figure></div><pre><code>407 µs ± 7.45 µs per loop (mean ± std. dev. of 7 runs, 1000 loops each)</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%timeit df.loc[df.foo.isin([<span class="number">1</span>,<span class="number">2</span>]),<span class="string">'foo'</span>]</span><br></pre></td></tr></table></figure></div><pre><code>375 µs ± 2.49 µs per loop (mean ± std. dev. of 7 runs, 1000 loops each)</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%timeit df[df.foo.isin([<span class="number">1</span>,<span class="number">2</span>])].foo</span><br></pre></td></tr></table></figure></div><pre><code>523 µs ± 14.3 µs per loop (mean ± std. dev. of 7 runs, 1000 loops each)</code></pre><h3 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h3><p>单列</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.sort_values(<span class="string">'a'</span>,ascending=<span class="literal">False</span>, na_position=<span class="string">'first'</span>)</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>a</th>      <th>b</th>      <th>c</th>      <th>d</th>      <th>e</th>    </tr>  </thead>  <tbody>    <tr>      <th>f</th>      <td>0.946407</td>      <td>0.780112</td>      <td>0.965793</td>      <td>0.743042</td>      <td>0.613386</td>    </tr>    <tr>      <th>a</th>      <td>0.828249</td>      <td>0.792735</td>      <td>0.512458</td>      <td>0.961731</td>      <td>0.917472</td>    </tr>    <tr>      <th>g</th>      <td>0.791554</td>      <td>0.015501</td>      <td>0.500903</td>      <td>0.797965</td>      <td>0.856116</td>    </tr>    <tr>      <th>e</th>      <td>0.599552</td>      <td>0.123519</td>      <td>0.814959</td>      <td>0.329789</td>      <td>0.696340</td>    </tr>    <tr>      <th>b</th>      <td>0.566537</td>      <td>0.754457</td>      <td>0.235026</td>      <td>0.795147</td>      <td>0.245506</td>    </tr>    <tr>      <th>j</th>      <td>0.562764</td>      <td>0.952519</td>      <td>0.256441</td>      <td>0.942915</td>      <td>0.152228</td>    </tr>    <tr>      <th>i</th>      <td>0.492461</td>      <td>0.140432</td>      <td>0.316593</td>      <td>0.727536</td>      <td>0.958459</td>    </tr>    <tr>      <th>c</th>      <td>0.468922</td>      <td>0.852834</td>      <td>0.549959</td>      <td>0.124779</td>      <td>0.219038</td>    </tr>    <tr>      <th>d</th>      <td>0.467536</td>      <td>0.482505</td>      <td>0.238425</td>      <td>0.604942</td>      <td>0.921739</td>    </tr>    <tr>      <th>h</th>      <td>0.052724</td>      <td>0.335682</td>      <td>0.253801</td>      <td>0.277599</td>      <td>0.525408</td>    </tr>  </tbody></table></div><p>同时排序两列, 第一列先排</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.sort_values([<span class="string">'a'</span>, <span class="string">'b'</span>],ascending=[<span class="literal">False</span>,<span class="literal">False</span>])</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>a</th>      <th>b</th>      <th>c</th>      <th>d</th>      <th>e</th>    </tr>  </thead>  <tbody>    <tr>      <th>f</th>      <td>0.946407</td>      <td>0.780112</td>      <td>0.965793</td>      <td>0.743042</td>      <td>0.613386</td>    </tr>    <tr>      <th>a</th>      <td>0.828249</td>      <td>0.792735</td>      <td>0.512458</td>      <td>0.961731</td>      <td>0.917472</td>    </tr>    <tr>      <th>g</th>      <td>0.791554</td>      <td>0.015501</td>      <td>0.500903</td>      <td>0.797965</td>      <td>0.856116</td>    </tr>    <tr>      <th>e</th>      <td>0.599552</td>      <td>0.123519</td>      <td>0.814959</td>      <td>0.329789</td>      <td>0.696340</td>    </tr>    <tr>      <th>b</th>      <td>0.566537</td>      <td>0.754457</td>      <td>0.235026</td>      <td>0.795147</td>      <td>0.245506</td>    </tr>    <tr>      <th>j</th>      <td>0.562764</td>      <td>0.952519</td>      <td>0.256441</td>      <td>0.942915</td>      <td>0.152228</td>    </tr>    <tr>      <th>i</th>      <td>0.492461</td>      <td>0.140432</td>      <td>0.316593</td>      <td>0.727536</td>      <td>0.958459</td>    </tr>    <tr>      <th>c</th>      <td>0.468922</td>      <td>0.852834</td>      <td>0.549959</td>      <td>0.124779</td>      <td>0.219038</td>    </tr>    <tr>      <th>d</th>      <td>0.467536</td>      <td>0.482505</td>      <td>0.238425</td>      <td>0.604942</td>      <td>0.921739</td>    </tr>    <tr>      <th>h</th>      <td>0.052724</td>      <td>0.335682</td>      <td>0.253801</td>      <td>0.277599</td>      <td>0.525408</td>    </tr>  </tbody></table></div><h3 id="分组"><a href="#分组" class="headerlink" title="分组"></a>分组</h3><p>类似于excel pivot table的一些功能</p><p>单列</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">df = pd.DataFrame(&#123;<span class="string">'A'</span>:np.array([<span class="string">'foo'</span>,<span class="string">'foo'</span>,<span class="string">'foo'</span>,<span class="string">'foo'</span>,<span class="string">'bar'</span>,<span class="string">'bar'</span>]),</span><br><span class="line">      <span class="string">'B'</span>:np.array([<span class="string">'one'</span>,<span class="string">'one'</span>,<span class="string">'two'</span>,<span class="string">'two'</span>,<span class="string">'three'</span>,<span class="string">'three'</span>]),</span><br><span class="line">     <span class="string">'C'</span>:np.array([<span class="string">'small'</span>,<span class="string">'medium'</span>,<span class="string">'large'</span>,<span class="string">'large'</span>,<span class="string">'small'</span>,<span class="string">'small'</span>]),</span><br><span class="line">     <span class="string">'D'</span>:np.array([<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">5</span>])&#125;)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>A</th>      <th>B</th>      <th>C</th>      <th>D</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>foo</td>      <td>one</td>      <td>small</td>      <td>1</td>    </tr>    <tr>      <th>1</th>      <td>foo</td>      <td>one</td>      <td>medium</td>      <td>2</td>    </tr>    <tr>      <th>2</th>      <td>foo</td>      <td>two</td>      <td>large</td>      <td>2</td>    </tr>    <tr>      <th>3</th>      <td>foo</td>      <td>two</td>      <td>large</td>      <td>3</td>    </tr>    <tr>      <th>4</th>      <td>bar</td>      <td>three</td>      <td>small</td>      <td>3</td>    </tr>    <tr>      <th>5</th>      <td>bar</td>      <td>three</td>      <td>small</td>      <td>5</td>    </tr>  </tbody></table></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.groupby(<span class="string">'C'</span>).count()</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>A</th>      <th>B</th>      <th>D</th>    </tr>    <tr>      <th>C</th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>large</th>      <td>2</td>      <td>2</td>      <td>2</td>    </tr>    <tr>      <th>medium</th>      <td>1</td>      <td>1</td>      <td>1</td>    </tr>    <tr>      <th>small</th>      <td>3</td>      <td>3</td>      <td>3</td>    </tr>  </tbody></table></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.groupby([<span class="string">'B'</span>,<span class="string">'C'</span>]).mean()</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th></th>      <th>D</th>    </tr>    <tr>      <th>B</th>      <th>C</th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th rowspan="2" valign="top">one</th>      <th>medium</th>      <td>2.0</td>    </tr>    <tr>      <th>small</th>      <td>1.0</td>    </tr>    <tr>      <th>three</th>      <th>small</th>      <td>4.0</td>    </tr>    <tr>      <th>two</th>      <th>large</th>      <td>2.5</td>    </tr>  </tbody></table></div><p>按照列B对数据框df做分组处理后，返回对应的D的平均值</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.groupby(<span class="string">'B'</span>)[<span class="string">'D'</span>].mean()</span><br></pre></td></tr></table></figure></div><pre><code>Bone      1.5three    4.0two      2.5Name: D, dtype: float64</code></pre><p>自定义函数</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.groupby(<span class="string">'C'</span>).agg(np.mean)</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>D</th>    </tr>    <tr>      <th>C</th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>large</th>      <td>2.5</td>    </tr>    <tr>      <th>medium</th>      <td>2.0</td>    </tr>    <tr>      <th>small</th>      <td>3.0</td>    </tr>  </tbody></table></div><p>官方相同效果函数如下</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.groupby(<span class="string">'C'</span>).mean()</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>D</th>    </tr>    <tr>      <th>C</th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>large</th>      <td>2.5</td>    </tr>    <tr>      <th>medium</th>      <td>2.0</td>    </tr>    <tr>      <th>small</th>      <td>3.0</td>    </tr>  </tbody></table></div><p>多组同时搞事</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.groupby(<span class="string">'C'</span>).agg(&#123;<span class="string">'A'</span>:<span class="string">'describe'</span>, <span class="string">'B'</span>:<span class="string">'sum'</span>&#125;)</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead tr th {        text-align: left;    }    .dataframe thead tr:last-of-type th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr>      <th></th>      <th colspan="4" halign="left">A</th>      <th>B</th>    </tr>    <tr>      <th></th>      <th>count</th>      <th>unique</th>      <th>top</th>      <th>freq</th>      <th>B</th>    </tr>    <tr>      <th>C</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>large</th>      <td>2</td>      <td>1</td>      <td>foo</td>      <td>2</td>      <td>twotwo</td>    </tr>    <tr>      <th>medium</th>      <td>1</td>      <td>1</td>      <td>foo</td>      <td>1</td>      <td>one</td>    </tr>    <tr>      <th>small</th>      <td>3</td>      <td>2</td>      <td>bar</td>      <td>2</td>      <td>onethreethree</td>    </tr>  </tbody></table></div><h3 id="透视表"><a href="#透视表" class="headerlink" title="透视表"></a>透视表</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">df = pd.DataFrame(&#123;<span class="string">'A'</span>:np.array([<span class="string">'foo'</span>,<span class="string">'foo'</span>,<span class="string">'foo'</span>,<span class="string">'foo'</span>,<span class="string">'bar'</span>,<span class="string">'bar'</span>]),</span><br><span class="line">      <span class="string">'B'</span>:np.array([<span class="string">'one'</span>,<span class="string">'one'</span>,<span class="string">'two'</span>,<span class="string">'two'</span>,<span class="string">'three'</span>,<span class="string">'three'</span>]),</span><br><span class="line">     <span class="string">'C'</span>:np.array([<span class="string">'small'</span>,<span class="string">'medium'</span>,<span class="string">'large'</span>,<span class="string">'large'</span>,<span class="string">'small'</span>,<span class="string">'small'</span>]),</span><br><span class="line">     <span class="string">'D'</span>:np.array([<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">5</span>])&#125;)</span><br><span class="line">df</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>A</th>      <th>B</th>      <th>C</th>      <th>D</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>foo</td>      <td>one</td>      <td>small</td>      <td>1</td>    </tr>    <tr>      <th>1</th>      <td>foo</td>      <td>one</td>      <td>medium</td>      <td>2</td>    </tr>    <tr>      <th>2</th>      <td>foo</td>      <td>two</td>      <td>large</td>      <td>2</td>    </tr>    <tr>      <th>3</th>      <td>foo</td>      <td>two</td>      <td>large</td>      <td>3</td>    </tr>    <tr>      <th>4</th>      <td>bar</td>      <td>three</td>      <td>small</td>      <td>3</td>    </tr>    <tr>      <th>5</th>      <td>bar</td>      <td>three</td>      <td>small</td>      <td>5</td>    </tr>  </tbody></table></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df.pivot_table(df,index=[<span class="string">'A'</span>,<span class="string">'B'</span>],</span><br><span class="line">               columns=[<span class="string">'C'</span>],aggfunc=np.sum)</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead tr th {        text-align: left;    }    .dataframe thead tr:last-of-type th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr>      <th></th>      <th></th>      <th colspan="3" halign="left">D</th>    </tr>    <tr>      <th></th>      <th>C</th>      <th>large</th>      <th>medium</th>      <th>small</th>    </tr>    <tr>      <th>A</th>      <th>B</th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>bar</th>      <th>three</th>      <td>NaN</td>      <td>NaN</td>      <td>8.0</td>    </tr>    <tr>      <th rowspan="2" valign="top">foo</th>      <th>one</th>      <td>NaN</td>      <td>2.0</td>      <td>1.0</td>    </tr>    <tr>      <th>two</th>      <td>5.0</td>      <td>NaN</td>      <td>NaN</td>    </tr>  </tbody></table></div><h2 id="对数据使用函数"><a href="#对数据使用函数" class="headerlink" title="对数据使用函数"></a>对数据使用函数</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df = pd.DataFrame(np.random.rand(<span class="number">10</span>,<span class="number">5</span>),columns=list(<span class="string">'ABCDE'</span>))</span><br><span class="line">df</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>A</th>      <th>B</th>      <th>C</th>      <th>D</th>      <th>E</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>0.411040</td>      <td>0.192597</td>      <td>0.498276</td>      <td>0.629785</td>      <td>0.619616</td>    </tr>    <tr>      <th>1</th>      <td>0.845691</td>      <td>0.510586</td>      <td>0.299651</td>      <td>0.998108</td>      <td>0.304747</td>    </tr>    <tr>      <th>2</th>      <td>0.623651</td>      <td>0.208694</td>      <td>0.756371</td>      <td>0.460918</td>      <td>0.648548</td>    </tr>    <tr>      <th>3</th>      <td>0.345734</td>      <td>0.498705</td>      <td>0.809781</td>      <td>0.584406</td>      <td>0.679397</td>    </tr>    <tr>      <th>4</th>      <td>0.131337</td>      <td>0.700264</td>      <td>0.274539</td>      <td>0.606103</td>      <td>0.509637</td>    </tr>    <tr>      <th>5</th>      <td>0.849646</td>      <td>0.230177</td>      <td>0.805004</td>      <td>0.407902</td>      <td>0.625412</td>    </tr>    <tr>      <th>6</th>      <td>0.754866</td>      <td>0.470509</td>      <td>0.944374</td>      <td>0.740570</td>      <td>0.605332</td>    </tr>    <tr>      <th>7</th>      <td>0.179676</td>      <td>0.956882</td>      <td>0.886308</td>      <td>0.038653</td>      <td>0.694814</td>    </tr>    <tr>      <th>8</th>      <td>0.197512</td>      <td>0.464496</td>      <td>0.476800</td>      <td>0.682217</td>      <td>0.345192</td>    </tr>    <tr>      <th>9</th>      <td>0.215948</td>      <td>0.092079</td>      <td>0.023335</td>      <td>0.246493</td>      <td>0.971298</td>    </tr>  </tbody></table></div><h3 id="对每一列使用函数"><a href="#对每一列使用函数" class="headerlink" title="对每一列使用函数"></a>对每一列使用函数</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.apply(np.mean)</span><br></pre></td></tr></table></figure></div><pre><code>A    0.455510B    0.432499C    0.577444D    0.539515E    0.600399dtype: float64</code></pre><h3 id="对每一行使用函数"><a href="#对每一行使用函数" class="headerlink" title="对每一行使用函数"></a>对每一行使用函数</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.apply(np.mean, axis=<span class="number">1</span>)</span><br></pre></td></tr></table></figure></div><pre><code>0    0.4702631    0.5917572    0.5396363    0.5836054    0.4443765    0.5836286    0.7031307    0.5512678    0.4332439    0.309831dtype: float64</code></pre><h2 id="数据的连接-组合-插入"><a href="#数据的连接-组合-插入" class="headerlink" title="数据的连接, 组合, 插入"></a>数据的连接, 组合, 插入</h2><h3 id="末尾拼接两个dataframe"><a href="#末尾拼接两个dataframe" class="headerlink" title="末尾拼接两个dataframe"></a>末尾拼接两个dataframe</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">df1 = pd.DataFrame(&#123;<span class="string">'A'</span>: [<span class="string">'A0'</span>, <span class="string">'A1'</span>, <span class="string">'A2'</span>, <span class="string">'A3'</span>],</span><br><span class="line">                    <span class="string">'B'</span>: [<span class="string">'B0'</span>, <span class="string">'B1'</span>, <span class="string">'B2'</span>, <span class="string">'B3'</span>],</span><br><span class="line">                    <span class="string">'C'</span>: [<span class="string">'C0'</span>, <span class="string">'C1'</span>, <span class="string">'C2'</span>, <span class="string">'C3'</span>],</span><br><span class="line">                    <span class="string">'D'</span>: [<span class="string">'D0'</span>, <span class="string">'D1'</span>, <span class="string">'D2'</span>, <span class="string">'D3'</span>]&#125;,</span><br><span class="line">                   index=[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line">df2 = pd.DataFrame(&#123;<span class="string">'A'</span>: [<span class="string">'A4'</span>, <span class="string">'A5'</span>, <span class="string">'A6'</span>, <span class="string">'A7'</span>],</span><br><span class="line">                    <span class="string">'B'</span>: [<span class="string">'B4'</span>, <span class="string">'B5'</span>, <span class="string">'B6'</span>, <span class="string">'B7'</span>],</span><br><span class="line">                    <span class="string">'C'</span>: [<span class="string">'C4'</span>, <span class="string">'C5'</span>, <span class="string">'C6'</span>, <span class="string">'C7'</span>],</span><br><span class="line">                    <span class="string">'D'</span>: [<span class="string">'D4'</span>, <span class="string">'D5'</span>, <span class="string">'D6'</span>, <span class="string">'D7'</span>]&#125;,</span><br><span class="line">                   index=[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df1</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>A</th>      <th>B</th>      <th>C</th>      <th>D</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>A0</td>      <td>B0</td>      <td>C0</td>      <td>D0</td>    </tr>    <tr>      <th>1</th>      <td>A1</td>      <td>B1</td>      <td>C1</td>      <td>D1</td>    </tr>    <tr>      <th>2</th>      <td>A2</td>      <td>B2</td>      <td>C2</td>      <td>D2</td>    </tr>    <tr>      <th>3</th>      <td>A3</td>      <td>B3</td>      <td>C3</td>      <td>D3</td>    </tr>  </tbody></table></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>A</th>      <th>B</th>      <th>C</th>      <th>D</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>A4</td>      <td>B4</td>      <td>C4</td>      <td>D4</td>    </tr>    <tr>      <th>1</th>      <td>A5</td>      <td>B5</td>      <td>C5</td>      <td>D5</td>    </tr>    <tr>      <th>2</th>      <td>A6</td>      <td>B6</td>      <td>C6</td>      <td>D6</td>    </tr>    <tr>      <th>3</th>      <td>A7</td>      <td>B7</td>      <td>C7</td>      <td>D7</td>    </tr>  </tbody></table></div><p>append只能拼接行</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df1.append(df2)</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>A</th>      <th>B</th>      <th>C</th>      <th>D</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>A0</td>      <td>B0</td>      <td>C0</td>      <td>D0</td>    </tr>    <tr>      <th>1</th>      <td>A1</td>      <td>B1</td>      <td>C1</td>      <td>D1</td>    </tr>    <tr>      <th>2</th>      <td>A2</td>      <td>B2</td>      <td>C2</td>      <td>D2</td>    </tr>    <tr>      <th>3</th>      <td>A3</td>      <td>B3</td>      <td>C3</td>      <td>D3</td>    </tr>    <tr>      <th>0</th>      <td>A4</td>      <td>B4</td>      <td>C4</td>      <td>D4</td>    </tr>    <tr>      <th>1</th>      <td>A5</td>      <td>B5</td>      <td>C5</td>      <td>D5</td>    </tr>    <tr>      <th>2</th>      <td>A6</td>      <td>B6</td>      <td>C6</td>      <td>D6</td>    </tr>    <tr>      <th>3</th>      <td>A7</td>      <td>B7</td>      <td>C7</td>      <td>D7</td>    </tr>  </tbody></table></div><p>concat可以拼接列以及行,要注意index和column的重复</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pd.concat([df1,df2],axis=<span class="number">0</span>)</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>A</th>      <th>B</th>      <th>C</th>      <th>D</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>A0</td>      <td>B0</td>      <td>C0</td>      <td>D0</td>    </tr>    <tr>      <th>1</th>      <td>A1</td>      <td>B1</td>      <td>C1</td>      <td>D1</td>    </tr>    <tr>      <th>2</th>      <td>A2</td>      <td>B2</td>      <td>C2</td>      <td>D2</td>    </tr>    <tr>      <th>3</th>      <td>A3</td>      <td>B3</td>      <td>C3</td>      <td>D3</td>    </tr>    <tr>      <th>0</th>      <td>A4</td>      <td>B4</td>      <td>C4</td>      <td>D4</td>    </tr>    <tr>      <th>1</th>      <td>A5</td>      <td>B5</td>      <td>C5</td>      <td>D5</td>    </tr>    <tr>      <th>2</th>      <td>A6</td>      <td>B6</td>      <td>C6</td>      <td>D6</td>    </tr>    <tr>      <th>3</th>      <td>A7</td>      <td>B7</td>      <td>C7</td>      <td>D7</td>    </tr>  </tbody></table></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pd.concat([df1,df2],axis=<span class="number">1</span>)</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>A</th>      <th>B</th>      <th>C</th>      <th>D</th>      <th>A</th>      <th>B</th>      <th>C</th>      <th>D</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>A0</td>      <td>B0</td>      <td>C0</td>      <td>D0</td>      <td>A4</td>      <td>B4</td>      <td>C4</td>      <td>D4</td>    </tr>    <tr>      <th>1</th>      <td>A1</td>      <td>B1</td>      <td>C1</td>      <td>D1</td>      <td>A5</td>      <td>B5</td>      <td>C5</td>      <td>D5</td>    </tr>    <tr>      <th>2</th>      <td>A2</td>      <td>B2</td>      <td>C2</td>      <td>D2</td>      <td>A6</td>      <td>B6</td>      <td>C6</td>      <td>D6</td>    </tr>    <tr>      <th>3</th>      <td>A3</td>      <td>B3</td>      <td>C3</td>      <td>D3</td>      <td>A7</td>      <td>B7</td>      <td>C7</td>      <td>D7</td>    </tr>  </tbody></table></div><h3 id="按loc末尾直接加入行或列"><a href="#按loc末尾直接加入行或列" class="headerlink" title="按loc末尾直接加入行或列"></a>按loc末尾直接加入行或列</h3><p>按loc大法只能拼一列或者一行到末尾</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df1</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>A</th>      <th>B</th>      <th>C</th>      <th>D</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>A0</td>      <td>B0</td>      <td>C0</td>      <td>D0</td>    </tr>    <tr>      <th>1</th>      <td>A1</td>      <td>B1</td>      <td>C1</td>      <td>D1</td>    </tr>    <tr>      <th>2</th>      <td>A2</td>      <td>B2</td>      <td>C2</td>      <td>D2</td>    </tr>    <tr>      <th>3</th>      <td>A3</td>      <td>B3</td>      <td>C3</td>      <td>D3</td>    </tr>  </tbody></table></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df1.loc[<span class="number">5</span>] = list(<span class="string">'EFGH'</span>)</span><br><span class="line">df1</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>A</th>      <th>B</th>      <th>C</th>      <th>D</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>A0</td>      <td>B0</td>      <td>C0</td>      <td>D0</td>    </tr>    <tr>      <th>1</th>      <td>A1</td>      <td>B1</td>      <td>C1</td>      <td>D1</td>    </tr>    <tr>      <th>2</th>      <td>A2</td>      <td>B2</td>      <td>C2</td>      <td>D2</td>    </tr>    <tr>      <th>3</th>      <td>A3</td>      <td>B3</td>      <td>C3</td>      <td>D3</td>    </tr>    <tr>      <th>5</th>      <td>E</td>      <td>F</td>      <td>G</td>      <td>H</td>    </tr>  </tbody></table></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df1.loc[:,<span class="string">'E'</span>] = list(<span class="string">'EFGHI'</span>)</span><br><span class="line">df1</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>A</th>      <th>B</th>      <th>C</th>      <th>D</th>      <th>E</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>A0</td>      <td>B0</td>      <td>C0</td>      <td>D0</td>      <td>E</td>    </tr>    <tr>      <th>1</th>      <td>A1</td>      <td>B1</td>      <td>C1</td>      <td>D1</td>      <td>F</td>    </tr>    <tr>      <th>2</th>      <td>A2</td>      <td>B2</td>      <td>C2</td>      <td>D2</td>      <td>G</td>    </tr>    <tr>      <th>3</th>      <td>A3</td>      <td>B3</td>      <td>C3</td>      <td>D3</td>      <td>H</td>    </tr>    <tr>      <th>5</th>      <td>E</td>      <td>F</td>      <td>G</td>      <td>H</td>      <td>I</td>    </tr>  </tbody></table></div><h3 id="两个dafaframe组合"><a href="#两个dafaframe组合" class="headerlink" title="两个dafaframe组合"></a>两个dafaframe组合</h3><p>df1.join(df2)</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">df1 = pd.DataFrame(&#123;<span class="string">'A'</span>: [<span class="string">'A0'</span>, <span class="string">'A1'</span>, <span class="string">'A2'</span>, <span class="string">'A3'</span>],           </span><br><span class="line">                     <span class="string">'B'</span>: [<span class="string">'B0'</span>, <span class="string">'B1'</span>, <span class="string">'B2'</span>, <span class="string">'B3'</span>]&#125;,</span><br><span class="line">                     index=[<span class="string">'K0'</span>, <span class="string">'K1'</span>, <span class="string">'K0'</span>, <span class="string">'K1'</span>])</span><br><span class="line">   </span><br><span class="line"></span><br><span class="line">df2 = pd.DataFrame(&#123;<span class="string">'C'</span>: [<span class="string">'C0'</span>, <span class="string">'C1'</span>],</span><br><span class="line">                      <span class="string">'D'</span>: [<span class="string">'D0'</span>, <span class="string">'D1'</span>]&#125;,</span><br><span class="line">                     index=[<span class="string">'K0'</span>, <span class="string">'K1'</span>])</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df1.join(df2)</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>A</th>      <th>B</th>      <th>C</th>      <th>D</th>    </tr>  </thead>  <tbody>    <tr>      <th>K0</th>      <td>A0</td>      <td>B0</td>      <td>C0</td>      <td>D0</td>    </tr>    <tr>      <th>K0</th>      <td>A2</td>      <td>B2</td>      <td>C0</td>      <td>D0</td>    </tr>    <tr>      <th>K1</th>      <td>A1</td>      <td>B1</td>      <td>C1</td>      <td>D1</td>    </tr>    <tr>      <th>K1</th>      <td>A3</td>      <td>B3</td>      <td>C1</td>      <td>D1</td>    </tr>  </tbody></table></div><h3 id="插入特定行"><a href="#插入特定行" class="headerlink" title="插入特定行"></a>插入特定行</h3><p>特定的行插入一个dataframe</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">df1 = pd.DataFrame(&#123;<span class="string">'A'</span>: [<span class="string">'A0'</span>, <span class="string">'A1'</span>, <span class="string">'A2'</span>, <span class="string">'A3'</span>],           </span><br><span class="line">                     <span class="string">'B'</span>: [<span class="string">'B0'</span>, <span class="string">'B1'</span>, <span class="string">'B2'</span>, <span class="string">'B3'</span>]&#125;)</span><br><span class="line">   </span><br><span class="line"></span><br><span class="line">df2 = pd.DataFrame(&#123;<span class="string">'A'</span>: [<span class="string">'C0'</span>, <span class="string">'C1'</span>],</span><br><span class="line">                      <span class="string">'B'</span>: [<span class="string">'D0'</span>, <span class="string">'D1'</span>]&#125;)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df1</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>A</th>      <th>B</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>A0</td>      <td>B0</td>    </tr>    <tr>      <th>1</th>      <td>A1</td>      <td>B1</td>    </tr>    <tr>      <th>2</th>      <td>A2</td>      <td>B2</td>    </tr>    <tr>      <th>3</th>      <td>A3</td>      <td>B3</td>    </tr>  </tbody></table></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>A</th>      <th>B</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>C0</td>      <td>D0</td>    </tr>    <tr>      <th>1</th>      <td>C1</td>      <td>D1</td>    </tr>  </tbody></table></div><p>定义一个在第n行后插入dataframe的函数</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">insert_row</span><span class="params">(idx, df, df_insert)</span>:</span></span><br><span class="line">    dfA = df.iloc[:idx, ]</span><br><span class="line">    dfB = df.iloc[idx:, ]</span><br><span class="line"></span><br><span class="line">    df = dfA.append(df_insert).append(dfB)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> df</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df1_inserted = insert_row(<span class="number">2</span>, df1, df2)</span><br><span class="line">df1_inserted</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>A</th>      <th>B</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>A0</td>      <td>B0</td>    </tr>    <tr>      <th>1</th>      <td>A1</td>      <td>B1</td>    </tr>    <tr>      <th>0</th>      <td>C0</td>      <td>D0</td>    </tr>    <tr>      <th>1</th>      <td>C1</td>      <td>D1</td>    </tr>    <tr>      <th>2</th>      <td>A2</td>      <td>B2</td>    </tr>    <tr>      <th>3</th>      <td>A3</td>      <td>B3</td>    </tr>  </tbody></table></div><h3 id="插入特定列"><a href="#插入特定列" class="headerlink" title="插入特定列"></a>插入特定列</h3><p>自带函数df.insert可在第n列插入一列新的数据</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df1</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>C</th>      <th>A</th>      <th>B</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>A</td>      <td>A0</td>      <td>B0</td>    </tr>    <tr>      <th>1</th>      <td>B</td>      <td>A1</td>      <td>B1</td>    </tr>    <tr>      <th>2</th>      <td>C</td>      <td>A2</td>      <td>B2</td>    </tr>    <tr>      <th>3</th>      <td>D</td>      <td>A3</td>      <td>B3</td>    </tr>  </tbody></table></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df1.insert(<span class="number">1</span>,<span class="string">'D'</span>, list(<span class="string">'ABCD'</span>))</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df1</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>C</th>      <th>D</th>      <th>A</th>      <th>B</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>A</td>      <td>A</td>      <td>A0</td>      <td>B0</td>    </tr>    <tr>      <th>1</th>      <td>B</td>      <td>B</td>      <td>A1</td>      <td>B1</td>    </tr>    <tr>      <th>2</th>      <td>C</td>      <td>C</td>      <td>A2</td>      <td>B2</td>    </tr>    <tr>      <th>3</th>      <td>D</td>      <td>D</td>      <td>A3</td>      <td>B3</td>    </tr>  </tbody></table></div><p>如果要在特定位置插入多列数据只能用这个</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">insert_column</span><span class="params">(idx, df, df_insert)</span>:</span></span><br><span class="line">    dfA = df.iloc[:,:idx]</span><br><span class="line">    dfB = df.iloc[:,idx:]</span><br><span class="line"></span><br><span class="line">    df = pd.concat([pd.concat([dfA, df_insert], axis=<span class="number">1</span>),dfB], axis=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> df</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">df1 = pd.DataFrame(&#123;<span class="string">'A'</span>: [<span class="string">'A0'</span>, <span class="string">'A1'</span>, <span class="string">'A2'</span>, <span class="string">'A3'</span>],           </span><br><span class="line">                     <span class="string">'B'</span>: [<span class="string">'B0'</span>, <span class="string">'B1'</span>, <span class="string">'B2'</span>, <span class="string">'B3'</span>],</span><br><span class="line">                      <span class="string">'C'</span>: [<span class="string">'B0'</span>, <span class="string">'B1'</span>, <span class="string">'B2'</span>, <span class="string">'B3'</span>]&#125;)</span><br><span class="line">   </span><br><span class="line">df2 = pd.DataFrame(&#123;<span class="string">'D'</span>: [<span class="string">'B0'</span>, <span class="string">'B1'</span>, <span class="string">'B2'</span>, <span class="string">'B3'</span>],</span><br><span class="line">                    <span class="string">'E'</span>: [<span class="string">'B0'</span>, <span class="string">'B1'</span>, <span class="string">'B2'</span>, <span class="string">'B3'</span>]&#125;)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insert_column(<span class="number">1</span>, df1, df2)</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>A</th>      <th>D</th>      <th>E</th>      <th>B</th>      <th>C</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>A0</td>      <td>B0</td>      <td>B0</td>      <td>B0</td>      <td>B0</td>    </tr>    <tr>      <th>1</th>      <td>A1</td>      <td>B1</td>      <td>B1</td>      <td>B1</td>      <td>B1</td>    </tr>    <tr>      <th>2</th>      <td>A2</td>      <td>B2</td>      <td>B2</td>      <td>B2</td>      <td>B2</td>    </tr>    <tr>      <th>3</th>      <td>A3</td>      <td>B3</td>      <td>B3</td>      <td>B3</td>      <td>B3</td>    </tr>  </tbody></table></div><h3 id="利用groupby和条件增加列"><a href="#利用groupby和条件增加列" class="headerlink" title="利用groupby和条件增加列"></a>利用groupby和条件增加列</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">df = pd.DataFrame(&#123;<span class="string">'A'</span>:np.array([<span class="string">'foo'</span>,<span class="string">'foo'</span>,<span class="string">'foo'</span>,<span class="string">'foo'</span>,<span class="string">'bar'</span>,<span class="string">'bar'</span>]),</span><br><span class="line">      <span class="string">'B'</span>:np.array([<span class="string">'one'</span>,<span class="string">'one'</span>,<span class="string">'two'</span>,<span class="string">'two'</span>,<span class="string">'three'</span>,<span class="string">'three'</span>]),</span><br><span class="line">     <span class="string">'C'</span>:np.array([<span class="string">'small'</span>,<span class="string">'medium'</span>,<span class="string">'large'</span>,<span class="string">'large'</span>,<span class="string">'small'</span>,<span class="string">'small'</span>]),</span><br><span class="line">     <span class="string">'D'</span>:np.array([<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">5</span>])&#125;)</span><br><span class="line">df</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>A</th>      <th>B</th>      <th>C</th>      <th>D</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>foo</td>      <td>one</td>      <td>small</td>      <td>1</td>    </tr>    <tr>      <th>1</th>      <td>foo</td>      <td>one</td>      <td>medium</td>      <td>2</td>    </tr>    <tr>      <th>2</th>      <td>foo</td>      <td>two</td>      <td>large</td>      <td>2</td>    </tr>    <tr>      <th>3</th>      <td>foo</td>      <td>two</td>      <td>large</td>      <td>3</td>    </tr>    <tr>      <th>4</th>      <td>bar</td>      <td>three</td>      <td>small</td>      <td>3</td>    </tr>    <tr>      <th>5</th>      <td>bar</td>      <td>three</td>      <td>small</td>      <td>5</td>    </tr>  </tbody></table></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">(df)</span>:</span></span><br><span class="line">    df[<span class="string">'D_sum'</span>] = df[<span class="string">'D'</span>].sum()</span><br><span class="line">    <span class="keyword">return</span> df</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.groupby(<span class="string">'D'</span>).apply(func)</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>A</th>      <th>B</th>      <th>C</th>      <th>D</th>      <th>D_sum</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>foo</td>      <td>one</td>      <td>small</td>      <td>1</td>      <td>1</td>    </tr>    <tr>      <th>1</th>      <td>foo</td>      <td>one</td>      <td>medium</td>      <td>2</td>      <td>4</td>    </tr>    <tr>      <th>2</th>      <td>foo</td>      <td>two</td>      <td>large</td>      <td>2</td>      <td>4</td>    </tr>    <tr>      <th>3</th>      <td>foo</td>      <td>two</td>      <td>large</td>      <td>3</td>      <td>6</td>    </tr>    <tr>      <th>4</th>      <td>bar</td>      <td>three</td>      <td>small</td>      <td>3</td>      <td>6</td>    </tr>    <tr>      <th>5</th>      <td>bar</td>      <td>three</td>      <td>small</td>      <td>5</td>      <td>5</td>    </tr>  </tbody></table></div><h3 id="利用apply函数增加列"><a href="#利用apply函数增加列" class="headerlink" title="利用apply函数增加列"></a>利用apply函数增加列</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">df = pd.DataFrame(&#123;<span class="string">'A'</span>:np.array([<span class="string">'foo'</span>,<span class="string">'foo'</span>,<span class="string">'foo'</span>,<span class="string">'foo'</span>,<span class="string">'bar'</span>,<span class="string">'bar'</span>]),</span><br><span class="line">      <span class="string">'B'</span>:np.array([<span class="string">'one'</span>,<span class="string">'one'</span>,<span class="string">'two'</span>,<span class="string">'two'</span>,<span class="string">'three'</span>,<span class="string">'three'</span>]),</span><br><span class="line">     <span class="string">'C'</span>:np.array([<span class="string">'small'</span>,<span class="string">'medium'</span>,<span class="string">'large'</span>,<span class="string">'large'</span>,<span class="string">'small'</span>,<span class="string">'small'</span>]),</span><br><span class="line">     <span class="string">'D'</span>:np.array([<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">5</span>])&#125;)</span><br><span class="line">df</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>A</th>      <th>B</th>      <th>C</th>      <th>D</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>foo</td>      <td>one</td>      <td>small</td>      <td>1</td>    </tr>    <tr>      <th>1</th>      <td>foo</td>      <td>one</td>      <td>medium</td>      <td>2</td>    </tr>    <tr>      <th>2</th>      <td>foo</td>      <td>two</td>      <td>large</td>      <td>2</td>    </tr>    <tr>      <th>3</th>      <td>foo</td>      <td>two</td>      <td>large</td>      <td>3</td>    </tr>    <tr>      <th>4</th>      <td>bar</td>      <td>three</td>      <td>small</td>      <td>3</td>    </tr>    <tr>      <th>5</th>      <td>bar</td>      <td>three</td>      <td>small</td>      <td>5</td>    </tr>  </tbody></table></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">(a, b)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span> <span class="keyword">if</span> a==<span class="string">'foo'</span> <span class="keyword">else</span> <span class="number">0</span></span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.apply(<span class="keyword">lambda</span> column: func(column[<span class="string">'A'</span>], column[<span class="string">'B'</span>]), axis=<span class="number">1</span>)</span><br></pre></td></tr></table></figure></div><pre><code>0    11    12    13    14    05    0dtype: int64</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">(df)</span>:</span></span><br><span class="line">    df[<span class="string">'A_equal_foo'</span>] = <span class="number">1</span> <span class="keyword">if</span> df[<span class="string">'A'</span>]==<span class="string">'foo'</span> <span class="keyword">else</span> <span class="number">0</span></span><br><span class="line">    <span class="keyword">return</span> df</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.apply(func, axis=<span class="number">1</span>)</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>A</th>      <th>B</th>      <th>C</th>      <th>D</th>      <th>A_equal_foo</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>foo</td>      <td>one</td>      <td>small</td>      <td>1</td>      <td>1</td>    </tr>    <tr>      <th>1</th>      <td>foo</td>      <td>one</td>      <td>medium</td>      <td>2</td>      <td>1</td>    </tr>    <tr>      <th>2</th>      <td>foo</td>      <td>two</td>      <td>large</td>      <td>2</td>      <td>1</td>    </tr>    <tr>      <th>3</th>      <td>foo</td>      <td>two</td>      <td>large</td>      <td>3</td>      <td>1</td>    </tr>    <tr>      <th>4</th>      <td>bar</td>      <td>three</td>      <td>small</td>      <td>3</td>      <td>0</td>    </tr>    <tr>      <th>5</th>      <td>bar</td>      <td>three</td>      <td>small</td>      <td>5</td>      <td>0</td>    </tr>  </tbody></table></div><h3 id="database式merge数据"><a href="#database式merge数据" class="headerlink" title="database式merge数据"></a>database式merge数据</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>df1 = pd.DataFrame(&#123;<span class="string">'lkey'</span>: [<span class="string">'foo'</span>, <span class="string">'bar'</span>, <span class="string">'baz'</span>, <span class="string">'foo'</span>],</span><br><span class="line"><span class="meta">... </span>                    <span class="string">'value'</span>: [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>]&#125;)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>df2 = pd.DataFrame(&#123;<span class="string">'rkey'</span>: [<span class="string">'foo'</span>, <span class="string">'bar'</span>, <span class="string">'baz'</span>, <span class="string">'foo'</span>],</span><br><span class="line"><span class="meta">... </span>                    <span class="string">'value'</span>: [<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>]&#125;)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df1.merge(df2, on=<span class="string">'value'</span>,how=<span class="string">'inner'</span>)</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>lkey</th>      <th>value</th>      <th>rkey</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>foo</td>      <td>5</td>      <td>foo</td>    </tr>  </tbody></table></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df1.merge(df2, on=<span class="string">'value'</span>,how=<span class="string">'outer'</span>)</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>lkey</th>      <th>value</th>      <th>rkey</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>foo</td>      <td>1</td>      <td>NaN</td>    </tr>    <tr>      <th>1</th>      <td>bar</td>      <td>2</td>      <td>NaN</td>    </tr>    <tr>      <th>2</th>      <td>baz</td>      <td>3</td>      <td>NaN</td>    </tr>    <tr>      <th>3</th>      <td>foo</td>      <td>5</td>      <td>foo</td>    </tr>    <tr>      <th>4</th>      <td>NaN</td>      <td>6</td>      <td>bar</td>    </tr>    <tr>      <th>5</th>      <td>NaN</td>      <td>7</td>      <td>baz</td>    </tr>    <tr>      <th>6</th>      <td>NaN</td>      <td>8</td>      <td>foo</td>    </tr>  </tbody></table></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df1.merge(df2, left_on=<span class="string">'value'</span>, right_on=<span class="string">'value'</span>,how=<span class="string">'inner'</span>)</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>lkey</th>      <th>value</th>      <th>rkey</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>foo</td>      <td>5</td>      <td>foo</td>    </tr>  </tbody></table></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df1.merge(df2, left_on=<span class="string">'value'</span>, right_on=<span class="string">'value'</span>,how=<span class="string">'outer'</span>)</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>lkey</th>      <th>value</th>      <th>rkey</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>foo</td>      <td>1</td>      <td>NaN</td>    </tr>    <tr>      <th>1</th>      <td>bar</td>      <td>2</td>      <td>NaN</td>    </tr>    <tr>      <th>2</th>      <td>baz</td>      <td>3</td>      <td>NaN</td>    </tr>    <tr>      <th>3</th>      <td>foo</td>      <td>5</td>      <td>foo</td>    </tr>    <tr>      <th>4</th>      <td>NaN</td>      <td>6</td>      <td>bar</td>    </tr>    <tr>      <th>5</th>      <td>NaN</td>      <td>7</td>      <td>baz</td>    </tr>    <tr>      <th>6</th>      <td>NaN</td>      <td>8</td>      <td>foo</td>    </tr>  </tbody></table></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df1.merge(df2, left_on=<span class="string">'lkey'</span>, right_on=<span class="string">'rkey'</span>)</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>lkey</th>      <th>value_x</th>      <th>rkey</th>      <th>value_y</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>foo</td>      <td>1</td>      <td>foo</td>      <td>5</td>    </tr>    <tr>      <th>1</th>      <td>foo</td>      <td>1</td>      <td>foo</td>      <td>8</td>    </tr>    <tr>      <th>2</th>      <td>foo</td>      <td>5</td>      <td>foo</td>      <td>5</td>    </tr>    <tr>      <th>3</th>      <td>foo</td>      <td>5</td>      <td>foo</td>      <td>8</td>    </tr>    <tr>      <th>4</th>      <td>bar</td>      <td>2</td>      <td>bar</td>      <td>6</td>    </tr>    <tr>      <th>5</th>      <td>baz</td>      <td>3</td>      <td>baz</td>      <td>7</td>    </tr>  </tbody></table></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df1.merge(df2, left_on=<span class="string">'lkey'</span>, right_on=<span class="string">'rkey'</span>, suffixes=(<span class="string">'_left'</span>, <span class="string">'_right'</span>))</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>lkey</th>      <th>value_left</th>      <th>rkey</th>      <th>value_right</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>foo</td>      <td>1</td>      <td>foo</td>      <td>5</td>    </tr>    <tr>      <th>1</th>      <td>foo</td>      <td>1</td>      <td>foo</td>      <td>8</td>    </tr>    <tr>      <th>2</th>      <td>foo</td>      <td>5</td>      <td>foo</td>      <td>5</td>    </tr>    <tr>      <th>3</th>      <td>foo</td>      <td>5</td>      <td>foo</td>      <td>8</td>    </tr>    <tr>      <th>4</th>      <td>bar</td>      <td>2</td>      <td>bar</td>      <td>6</td>    </tr>    <tr>      <th>5</th>      <td>baz</td>      <td>3</td>      <td>baz</td>      <td>7</td>    </tr>  </tbody></table></div><h2 id="数据统计"><a href="#数据统计" class="headerlink" title="数据统计"></a>数据统计</h2><h3 id="基本统计"><a href="#基本统计" class="headerlink" title="基本统计"></a>基本统计</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df = pd.DataFrame(np.random.rand(<span class="number">10</span>,<span class="number">5</span>),columns=list(<span class="string">'ABCDE'</span>))</span><br><span class="line">df.describe()</span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>A</th>      <th>B</th>      <th>C</th>      <th>D</th>      <th>E</th>    </tr>  </thead>  <tbody>    <tr>      <th>count</th>      <td>10.000000</td>      <td>10.000000</td>      <td>10.000000</td>      <td>10.000000</td>      <td>10.000000</td>    </tr>    <tr>      <th>mean</th>      <td>0.548176</td>      <td>0.581951</td>      <td>0.492730</td>      <td>0.362844</td>      <td>0.464692</td>    </tr>    <tr>      <th>std</th>      <td>0.269487</td>      <td>0.296894</td>      <td>0.344442</td>      <td>0.314646</td>      <td>0.205078</td>    </tr>    <tr>      <th>min</th>      <td>0.139214</td>      <td>0.152646</td>      <td>0.032955</td>      <td>0.003880</td>      <td>0.142789</td>    </tr>    <tr>      <th>25%</th>      <td>0.328505</td>      <td>0.284380</td>      <td>0.224993</td>      <td>0.093924</td>      <td>0.339452</td>    </tr>    <tr>      <th>50%</th>      <td>0.597528</td>      <td>0.747586</td>      <td>0.538701</td>      <td>0.325856</td>      <td>0.453823</td>    </tr>    <tr>      <th>75%</th>      <td>0.715508</td>      <td>0.819579</td>      <td>0.799554</td>      <td>0.563304</td>      <td>0.653605</td>    </tr>    <tr>      <th>max</th>      <td>0.964156</td>      <td>0.871106</td>      <td>0.920916</td>      <td>0.841107</td>      <td>0.703043</td>    </tr>  </tbody></table></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.mean() <span class="comment"># 得到数据框df中每一列的平均值</span></span><br></pre></td></tr></table></figure></div><pre><code>A    0.548176B    0.581951C    0.492730D    0.362844E    0.464692dtype: float64</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.corr() <span class="comment"># 得到数据框df中每一列与其他列的相关系数</span></span><br></pre></td></tr></table></figure></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }    .dataframe thead th {        text-align: right;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>A</th>      <th>B</th>      <th>C</th>      <th>D</th>      <th>E</th>    </tr>  </thead>  <tbody>    <tr>      <th>A</th>      <td>1.000000</td>      <td>0.097622</td>      <td>-0.571543</td>      <td>0.364524</td>      <td>-0.083053</td>    </tr>    <tr>      <th>B</th>      <td>0.097622</td>      <td>1.000000</td>      <td>-0.058487</td>      <td>-0.347005</td>      <td>-0.603136</td>    </tr>    <tr>      <th>C</th>      <td>-0.571543</td>      <td>-0.058487</td>      <td>1.000000</td>      <td>-0.369241</td>      <td>0.222586</td>    </tr>    <tr>      <th>D</th>      <td>0.364524</td>      <td>-0.347005</td>      <td>-0.369241</td>      <td>1.000000</td>      <td>0.232339</td>    </tr>    <tr>      <th>E</th>      <td>-0.083053</td>      <td>-0.603136</td>      <td>0.222586</td>      <td>0.232339</td>      <td>1.000000</td>    </tr>  </tbody></table></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.count() <span class="comment"># 得到数据框df中每一列的非空值个数</span></span><br></pre></td></tr></table></figure></div><pre><code>A    10B    10C    10D    10E    10dtype: int64</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.max() <span class="comment"># 得到数据框df中每一列的最大值</span></span><br></pre></td></tr></table></figure></div><pre><code>A    0.964156B    0.871106C    0.920916D    0.841107E    0.703043dtype: float64</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.min() <span class="comment"># 得到数据框df中每一列的最小值</span></span><br></pre></td></tr></table></figure></div><pre><code>A    0.139214B    0.152646C    0.032955D    0.003880E    0.142789dtype: float64</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.median() <span class="comment"># 得到数据框df中每一列的中位数</span></span><br></pre></td></tr></table></figure></div><pre><code>A    0.597528B    0.747586C    0.538701D    0.325856E    0.453823dtype: float64</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.std() <span class="comment"># 得到数据框df中每一列的标准差</span></span><br></pre></td></tr></table></figure></div><pre><code>A    0.269487B    0.296894C    0.344442D    0.314646E    0.205078dtype: float64</code></pre><p>对所有值进行描述统计</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.stack().std(ddof=<span class="number">1</span>)</span><br></pre></td></tr></table></figure></div><pre><code>0.2882311219915606</code></pre><p>numpy求法, ddof是degree of freedom</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.values.std(ddof=<span class="number">1</span>)</span><br></pre></td></tr></table></figure></div><pre><code>0.2882311219915606</code></pre><h3 id="最大值索引"><a href="#最大值索引" class="headerlink" title="最大值索引"></a>最大值索引</h3><p>每一列的最大值的索引</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.idxmax()</span><br></pre></td></tr></table></figure></div><pre><code>A    8B    3C    2D    1E    9dtype: int64</code></pre><h2 id="时间序列"><a href="#时间序列" class="headerlink" title="时间序列"></a>时间序列</h2><h3 id="构建时间索引"><a href="#构建时间索引" class="headerlink" title="构建时间索引"></a>构建时间索引</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">i = pd.date_range(<span class="string">'20000101'</span>,periods=<span class="number">100</span>)</span><br><span class="line">i[<span class="number">0</span>:<span class="number">5</span>]</span><br></pre></td></tr></table></figure></div><pre><code>DatetimeIndex([&#39;2000-01-01&#39;, &#39;2000-01-02&#39;, &#39;2000-01-03&#39;, &#39;2000-01-04&#39;,               &#39;2000-01-05&#39;],              dtype=&#39;datetime64[ns]&#39;, freq=&#39;D&#39;)</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">i.year[<span class="number">0</span>:<span class="number">5</span>]</span><br></pre></td></tr></table></figure></div><pre><code>Int64Index([2000, 2000, 2000, 2000, 2000], dtype=&#39;int64&#39;)</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">i.day[<span class="number">0</span>:<span class="number">5</span>]</span><br></pre></td></tr></table></figure></div><pre><code>Int64Index([1, 2, 3, 4, 5], dtype=&#39;int64&#39;)</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">i.month[<span class="number">0</span>:<span class="number">5</span>]</span><br></pre></td></tr></table></figure></div><pre><code>Int64Index([1, 1, 1, 1, 1], dtype=&#39;int64&#39;)</code></pre><h3 id="转换时间格式"><a href="#转换时间格式" class="headerlink" title="转换时间格式"></a>转换时间格式</h3><p>通过整数序列来转换时间序列</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>i = pd.date_range(<span class="string">'20000101'</span>,periods=<span class="number">100</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>df = pd.DataFrame(dict(year = i.year, month = i.month, day = i.day))</span><br><span class="line">time_series = df.year*<span class="number">10000</span> + df.month*<span class="number">100</span> + df.day</span><br><span class="line">time_series</span><br></pre></td></tr></table></figure></div><pre><code>0     200001011     200001022     200001033     200001044     20000105        ...   95    2000040596    2000040697    2000040798    2000040899    20000409Length: 100, dtype: int64</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pd.to_datetime(time_series, format=<span class="string">'%Y%m%d'</span>)</span><br></pre></td></tr></table></figure></div><pre><code>0    2000-01-011    2000-01-022    2000-01-033    2000-01-044    2000-01-05        ...    95   2000-04-0596   2000-04-0697   2000-04-0798   2000-04-0899   2000-04-09Length: 100, dtype: datetime64[ns]</code></pre><p>通过String来转换时间序列</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">df = df.astype(str)</span><br><span class="line">time_string = df.day + df.month + df.year</span><br><span class="line">time_string</span><br></pre></td></tr></table></figure></div><pre><code>0     1120001     2120002     3120003     4120004     512000       ...  95    54200096    64200097    74200098    84200099    942000Length: 100, dtype: object</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pd.to_datetime(time_string, format=<span class="string">"%d%m%Y"</span>)</span><br></pre></td></tr></table></figure></div><pre><code>0    2000-01-011    2000-01-022    2000-01-033    2000-01-044    2000-01-05        ...    95   2000-04-0596   2000-04-0697   2000-04-0798   2000-04-0899   2000-04-09Length: 100, dtype: datetime64[ns]</code></pre><h3 id="时间格式采样"><a href="#时间格式采样" class="headerlink" title="时间格式采样"></a>时间格式采样</h3><p><strong>时间频率如下</strong></p><p>B       business day frequency<br>C       custom business day frequency (experimental)<br>D       calendar day frequency<br>W       weekly frequency<br>M       month end frequency<br>BM      business month end frequency<br>CBM     custom business month end frequency<br>MS      month start frequency<br>BMS     business month start frequency<br>CBMS    custom business month start frequency<br>Q       quarter end frequency<br>BQ      business quarter endfrequency<br>QS      quarter start frequency<br>BQS     business quarter start frequency<br>A       year end frequency<br>BA      business year end frequency<br>AS      year start frequency<br>BAS     business year start frequency<br>BH      business hour frequency<br>H       hourly frequency<br>T       minutely frequency<br>S       secondly frequency<br>L       milliseonds<br>U       microseconds<br>N       nanoseconds</p><p>原文链接：<a href="https://blog.csdn.net/qq_41996090/article/details/87555618" target="_blank" rel="external nofollow noopener noreferrer">https://blog.csdn.net/qq_41996090/article/details/87555618</a></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">index = pd.date_range(<span class="string">'1/1/2000'</span>, periods=<span class="number">9</span>, freq=<span class="string">'T'</span>)</span><br><span class="line">series = pd.Series(range(<span class="number">9</span>), index=index)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">series</span><br></pre></td></tr></table></figure></div><pre><code>2000-01-01 00:00:00    02000-01-01 00:01:00    12000-01-01 00:02:00    22000-01-01 00:03:00    32000-01-01 00:04:00    42000-01-01 00:05:00    52000-01-01 00:06:00    62000-01-01 00:07:00    72000-01-01 00:08:00    8Freq: T, dtype: int64</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">series.resample(<span class="string">'3T'</span>).sum()</span><br></pre></td></tr></table></figure></div><pre><code>2000-01-01 00:00:00     32000-01-01 00:03:00    122000-01-01 00:06:00    21Freq: 3T, dtype: int64</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">series.resample(<span class="string">'3T'</span>, label=<span class="string">'right'</span>, closed=<span class="string">'right'</span>).sum()</span><br></pre></td></tr></table></figure></div><pre><code>2000-01-01 00:00:00     02000-01-01 00:03:00     62000-01-01 00:06:00    152000-01-01 00:09:00    15Freq: 3T, dtype: int64</code></pre><p>采样的频率</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">series.resample(<span class="string">'10S'</span>).asfreq().head()</span><br></pre></td></tr></table></figure></div><pre><code>2000-01-01 00:00:00    0.02000-01-01 00:00:10    NaN2000-01-01 00:00:20    NaN2000-01-01 00:00:30    NaN2000-01-01 00:00:40    NaNFreq: 10S, dtype: float64</code></pre><p>自定义函数</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">custom_resampler</span><span class="params">(array_like)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> np.sum(array_like) + <span class="number">5</span></span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">series.resample(<span class="string">'3T'</span>).apply(custom_resampler)</span><br></pre></td></tr></table></figure></div><pre><code>2000-01-01 00:00:00     82000-01-01 00:03:00    172000-01-01 00:06:00    26Freq: 3T, dtype: int64</code></pre>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
          <category> kesci_notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> pandas </tag>
            
            <tag> kesci </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>windows_10_tricks.md</title>
      <link href="/2020/01/14/random_notes/windows_10_tricks/"/>
      <url>/2020/01/14/random_notes/windows_10_tricks/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="windows10-小技巧"><a href="#windows10-小技巧" class="headerlink" title="windows10 小技巧"></a>windows10 小技巧</h1><p><a href="https://baijiahao.baidu.com/s?id=1611688517160115695&amp;wfr=spider&amp;for=pc" target="_blank" rel="external nofollow noopener noreferrer">https://baijiahao.baidu.com/s?id=1611688517160115695&amp;wfr=spider&amp;for=pc</a></p><h1 id="windows10-虚拟桌面"><a href="#windows10-虚拟桌面" class="headerlink" title="windows10 虚拟桌面"></a>windows10 虚拟桌面</h1><p><a href="https://baijiahao.baidu.com/s?id=1618114653250855544&amp;wfr=spider&amp;for=pc" target="_blank" rel="external nofollow noopener noreferrer">https://baijiahao.baidu.com/s?id=1618114653250855544&amp;wfr=spider&amp;for=pc</a></p><h1 id="windows10-快捷键"><a href="#windows10-快捷键" class="headerlink" title="windows10 快捷键"></a>windows10 快捷键</h1><p><a href="https://zhuanlan.zhihu.com/p/99240964?utm_source=wechat_session" target="_blank" rel="external nofollow noopener noreferrer">https://zhuanlan.zhihu.com/p/99240964?utm_source=wechat_session</a></p>]]></content>
      
      
      <categories>
          
          <category> random_notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows10 </tag>
            
            <tag> operation_system </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jupyter_notebook_notes</title>
      <link href="/2020/01/13/random_notes/jupyter_notebook_notes/"/>
      <url>/2020/01/13/random_notes/jupyter_notebook_notes/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="jupyter-基础安装"><a href="#jupyter-基础安装" class="headerlink" title="jupyter 基础安装"></a>jupyter 基础安装</h1><h2 id="jupyter-如何顺利安装并开启conda-kernels"><a href="#jupyter-如何顺利安装并开启conda-kernels" class="headerlink" title="jupyter 如何顺利安装并开启conda kernels"></a>jupyter 如何顺利安装并开启conda kernels</h2><p>这个太坑了…<br>需要如下安装:<br><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">conda install jupyter</span><br><span class="line">conda install jupyter lab</span><br><span class="line">conda install ipykernel </span><br><span class="line">conda install nb_conda</span><br><span class="line">conda install nb_conda_kernels</span><br></pre></td></tr></table></figure></div><br>另外的插件看下面.</p><h1 id="jupyter-notebook"><a href="#jupyter-notebook" class="headerlink" title="jupyter notebook"></a>jupyter notebook</h1><h2 id="jupyter-notebook-幻灯片插件"><a href="#jupyter-notebook-幻灯片插件" class="headerlink" title="jupyter notebook 幻灯片插件"></a>jupyter notebook 幻灯片插件</h2><p><a href="https://blog.csdn.net/blmoistawinde/article/details/85009603" target="_blank" rel="external nofollow noopener noreferrer">https://blog.csdn.net/blmoistawinde/article/details/85009603</a></p><p><a href="https://blog.csdn.net/qq_27825451/article/details/85050496" target="_blank" rel="external nofollow noopener noreferrer">https://blog.csdn.net/qq_27825451/article/details/85050496</a></p><h2 id="jupyter-notebook-插件"><a href="#jupyter-notebook-插件" class="headerlink" title="jupyter notebook 插件"></a>jupyter notebook 插件</h2><p><a href="https://www.wandouip.com/t5i186155/" target="_blank" rel="external nofollow noopener noreferrer">https://www.wandouip.com/t5i186155/</a></p><h2 id="jupyter-notebook-神奇技巧"><a href="#jupyter-notebook-神奇技巧" class="headerlink" title="jupyter notebook 神奇技巧"></a>jupyter notebook 神奇技巧</h2><p><a href="https://www.zybuluo.com/hanxiaoyang/note/534296" target="_blank" rel="external nofollow noopener noreferrer">https://www.zybuluo.com/hanxiaoyang/note/534296</a></p><h2 id="jupyter-notebook-魔法命令"><a href="#jupyter-notebook-魔法命令" class="headerlink" title="jupyter notebook 魔法命令"></a>jupyter notebook 魔法命令</h2><p><a href="http://www.raincent.com/content-85-7795-2.html" target="_blank" rel="external nofollow noopener noreferrer">http://www.raincent.com/content-85-7795-2.html</a></p><h1 id="jupyter-lab"><a href="#jupyter-lab" class="headerlink" title="jupyter lab"></a>jupyter lab</h1><h2 id="jupyter-lab安装"><a href="#jupyter-lab安装" class="headerlink" title="jupyter lab安装"></a>jupyter lab安装</h2><p><a href="https://blog.csdn.net/weixin_34355715/article/details/88670628" target="_blank" rel="external nofollow noopener noreferrer">https://blog.csdn.net/weixin_34355715/article/details/88670628</a></p><h2 id="jupyter-lab简介"><a href="#jupyter-lab简介" class="headerlink" title="jupyter lab简介"></a>jupyter lab简介</h2><p><a href="https://www.codercto.com/a/75771.html" target="_blank" rel="external nofollow noopener noreferrer">https://www.codercto.com/a/75771.html</a></p><h2 id="jupyter-lab-技巧"><a href="#jupyter-lab-技巧" class="headerlink" title="jupyter lab 技巧"></a>jupyter lab 技巧</h2><p><a href="https://blog.csdn.net/weixin_37641832/article/details/94437445" target="_blank" rel="external nofollow noopener noreferrer">https://blog.csdn.net/weixin_37641832/article/details/94437445</a></p>]]></content>
      
      
      <categories>
          
          <category> random_notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jupyter_notebook </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>other people blogs</title>
      <link href="/2020/01/13/random_notes/other_people_blogs/"/>
      <url>/2020/01/13/random_notes/other_people_blogs/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="幻灯片插件"><a href="#幻灯片插件" class="headerlink" title="幻灯片插件"></a>幻灯片插件</h1><p><a href="https://blog.csdn.net/blmoistawinde/article/details/85009603" target="_blank" rel="external nofollow noopener noreferrer">https://blog.csdn.net/blmoistawinde/article/details/85009603</a></p><p><a href="https://blog.csdn.net/qq_27825451/article/details/85050496" target="_blank" rel="external nofollow noopener noreferrer">https://blog.csdn.net/qq_27825451/article/details/85050496</a></p><h1 id="jupyter-插件"><a href="#jupyter-插件" class="headerlink" title="jupyter 插件"></a>jupyter 插件</h1><p><a href="https://www.wandouip.com/t5i186155/" target="_blank" rel="external nofollow noopener noreferrer">https://www.wandouip.com/t5i186155/</a></p><h1 id="jupyter-神奇技巧"><a href="#jupyter-神奇技巧" class="headerlink" title="jupyter 神奇技巧"></a>jupyter 神奇技巧</h1><p><a href="https://www.zybuluo.com/hanxiaoyang/note/534296" target="_blank" rel="external nofollow noopener noreferrer">https://www.zybuluo.com/hanxiaoyang/note/534296</a></p>]]></content>
      
      
      <categories>
          
          <category> random_notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blogs </tag>
            
            <tag> quant </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>bilibili application statistics course notes</title>
      <link href="/2020/01/11/math/statistics/bilibili_application_statistics/"/>
      <url>/2020/01/11/math/statistics/bilibili_application_statistics/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>简介：<br>此笔记为bilibili 应用统计学 视频的学习笔记。</p><h1 id="总体和样本"><a href="#总体和样本" class="headerlink" title="总体和样本"></a>总体和样本</h1><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@ff280eccc3e4dd79b9024925389e43e6d04b6d19/blog/image/B站应用统计学_1.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@ff280eccc3e4dd79b9024925389e43e6d04b6d19/blog/image/B站应用统计学_1.jpg" class="lazyload" title></a></p><h1 id="excel-spss-和-minitab"><a href="#excel-spss-和-minitab" class="headerlink" title="excel, spss 和 minitab"></a>excel, spss 和 minitab</h1><h1 id="数据搜集"><a href="#数据搜集" class="headerlink" title="数据搜集"></a>数据搜集</h1><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@ff280eccc3e4dd79b9024925389e43e6d04b6d19/blog/image/B站应用统计学_2.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@ff280eccc3e4dd79b9024925389e43e6d04b6d19/blog/image/B站应用统计学_2.jpg" class="lazyload" title></a></p><h1 id="图表"><a href="#图表" class="headerlink" title="图表"></a>图表</h1><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@ff280eccc3e4dd79b9024925389e43e6d04b6d19/blog/image/B站应用统计学_3.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@ff280eccc3e4dd79b9024925389e43e6d04b6d19/blog/image/B站应用统计学_3.jpg" class="lazyload" title></a></p><h1 id="描述统计"><a href="#描述统计" class="headerlink" title="描述统计"></a>描述统计</h1><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@ff280eccc3e4dd79b9024925389e43e6d04b6d19/blog/image/B站应用统计学_4.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@ff280eccc3e4dd79b9024925389e43e6d04b6d19/blog/image/B站应用统计学_4.jpg" class="lazyload" title></a></p><h1 id="描述统计软件操作"><a href="#描述统计软件操作" class="headerlink" title="描述统计软件操作"></a>描述统计软件操作</h1><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@ff280eccc3e4dd79b9024925389e43e6d04b6d19/blog/image/B站应用统计学_5.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@ff280eccc3e4dd79b9024925389e43e6d04b6d19/blog/image/B站应用统计学_5.jpg" class="lazyload" title></a></p><h1 id="分布"><a href="#分布" class="headerlink" title="分布"></a>分布</h1><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@ff280eccc3e4dd79b9024925389e43e6d04b6d19/blog/image/B站应用统计学_6.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@ff280eccc3e4dd79b9024925389e43e6d04b6d19/blog/image/B站应用统计学_6.jpg" class="lazyload" title></a><br><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@ff280eccc3e4dd79b9024925389e43e6d04b6d19/blog/image/B站应用统计学_7.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@ff280eccc3e4dd79b9024925389e43e6d04b6d19/blog/image/B站应用统计学_7.jpg" class="lazyload" title></a></p><h1 id="假设检验"><a href="#假设检验" class="headerlink" title="假设检验"></a>假设检验</h1><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@ff280eccc3e4dd79b9024925389e43e6d04b6d19/blog/image/B站应用统计学_8.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@ff280eccc3e4dd79b9024925389e43e6d04b6d19/blog/image/B站应用统计学_8.jpg" class="lazyload" title></a><br><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@ff280eccc3e4dd79b9024925389e43e6d04b6d19/blog/image/B站应用统计学_9.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@ff280eccc3e4dd79b9024925389e43e6d04b6d19/blog/image/B站应用统计学_9.jpg" class="lazyload" title></a></p><h1 id="双样本检验"><a href="#双样本检验" class="headerlink" title="双样本检验"></a>双样本检验</h1><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@ff280eccc3e4dd79b9024925389e43e6d04b6d19/blog/image/B站应用统计学_10.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@ff280eccc3e4dd79b9024925389e43e6d04b6d19/blog/image/B站应用统计学_10.jpg" class="lazyload" title></a><br><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@ff280eccc3e4dd79b9024925389e43e6d04b6d19/blog/image/B站应用统计学_11.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@ff280eccc3e4dd79b9024925389e43e6d04b6d19/blog/image/B站应用统计学_11.jpg" class="lazyload" title></a><br><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@ff280eccc3e4dd79b9024925389e43e6d04b6d19/blog/image/B站应用统计学_12.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@ff280eccc3e4dd79b9024925389e43e6d04b6d19/blog/image/B站应用统计学_12.jpg" class="lazyload" title></a></p><h1 id="方差分析"><a href="#方差分析" class="headerlink" title="方差分析"></a>方差分析</h1><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@ff280eccc3e4dd79b9024925389e43e6d04b6d19/blog/image/B站应用统计学_13.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@ff280eccc3e4dd79b9024925389e43e6d04b6d19/blog/image/B站应用统计学_13.jpg" class="lazyload" title></a><br><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@ff280eccc3e4dd79b9024925389e43e6d04b6d19/blog/image/B站应用统计学_14.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@ff280eccc3e4dd79b9024925389e43e6d04b6d19/blog/image/B站应用统计学_14.jpg" class="lazyload" title></a><br><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@ff280eccc3e4dd79b9024925389e43e6d04b6d19/blog/image/B站应用统计学_15.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@ff280eccc3e4dd79b9024925389e43e6d04b6d19/blog/image/B站应用统计学_15.jpg" class="lazyload" title></a></p><h1 id="线性回归"><a href="#线性回归" class="headerlink" title="线性回归"></a>线性回归</h1><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@ff280eccc3e4dd79b9024925389e43e6d04b6d19/blog/image/B站应用统计学_16.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@ff280eccc3e4dd79b9024925389e43e6d04b6d19/blog/image/B站应用统计学_16.jpg" class="lazyload" title></a><br><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@ff280eccc3e4dd79b9024925389e43e6d04b6d19/blog/image/B站应用统计学_17.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@ff280eccc3e4dd79b9024925389e43e6d04b6d19/blog/image/B站应用统计学_17.jpg" class="lazyload" title></a><br><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@ff280eccc3e4dd79b9024925389e43e6d04b6d19/blog/image/B站应用统计学_18.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@ff280eccc3e4dd79b9024925389e43e6d04b6d19/blog/image/B站应用统计学_18.jpg" class="lazyload" title></a><br><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@ff280eccc3e4dd79b9024925389e43e6d04b6d19/blog/image/B站应用统计学_19.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@ff280eccc3e4dd79b9024925389e43e6d04b6d19/blog/image/B站应用统计学_19.jpg" class="lazyload" title></a></p><h1 id="时间序列简介"><a href="#时间序列简介" class="headerlink" title="时间序列简介"></a>时间序列简介</h1><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@ff280eccc3e4dd79b9024925389e43e6d04b6d19/blog/image/B站应用统计学_20.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@ff280eccc3e4dd79b9024925389e43e6d04b6d19/blog/image/B站应用统计学_20.jpg" class="lazyload" title></a><br><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@ff280eccc3e4dd79b9024925389e43e6d04b6d19/blog/image/B站应用统计学_21.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@ff280eccc3e4dd79b9024925389e43e6d04b6d19/blog/image/B站应用统计学_21.jpg" class="lazyload" title></a></p>]]></content>
      
      
      <categories>
          
          <category> math </category>
          
          <category> statistics </category>
          
      </categories>
      
      
        <tags>
            
            <tag> statistics </tag>
            
            <tag> math </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>statistics links</title>
      <link href="/2020/01/06/math/statistics/statistics_links/"/>
      <url>/2020/01/06/math/statistics/statistics_links/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="应用统计学视频"><a href="#应用统计学视频" class="headerlink" title="应用统计学视频"></a>应用统计学视频</h1><p><a href="https://www.bilibili.com/video/av9051072" target="_blank" rel="external nofollow noopener noreferrer">https://www.bilibili.com/video/av9051072</a></p><h1 id="应用统计学课件"><a href="#应用统计学课件" class="headerlink" title="应用统计学课件"></a>应用统计学课件</h1><p><a href="https://www.docin.com/p-106804331.html?docfrom=rrela" target="_blank" rel="external nofollow noopener noreferrer">https://www.docin.com/p-106804331.html?docfrom=rrela</a></p><h1 id="t分布理解"><a href="#t分布理解" class="headerlink" title="t分布理解"></a>t分布理解</h1><p><a href="http://www.360doc.com/content/18/0208/12/15930282_728577832.shtml" target="_blank" rel="external nofollow noopener noreferrer">http://www.360doc.com/content/18/0208/12/15930282_728577832.shtml</a></p><h1 id="t检验理解"><a href="#t检验理解" class="headerlink" title="t检验理解"></a>t检验理解</h1><p><a href="http://www.360doc.com/content/17/0523/18/40087574_656536995.shtml" target="_blank" rel="external nofollow noopener noreferrer">http://www.360doc.com/content/17/0523/18/40087574_656536995.shtml</a></p><h1 id="区间估计和假设检验的关系"><a href="#区间估计和假设检验的关系" class="headerlink" title="区间估计和假设检验的关系"></a>区间估计和假设检验的关系</h1><p><a href="https://wenku.baidu.com/view/aa7dee0fe87101f69e319545.html" target="_blank" rel="external nofollow noopener noreferrer">https://wenku.baidu.com/view/aa7dee0fe87101f69e319545.html</a></p><h1 id="一元线性回归的解释"><a href="#一元线性回归的解释" class="headerlink" title="一元线性回归的解释"></a>一元线性回归的解释</h1><p><a href="https://zhuanlan.zhihu.com/p/31668592?from_voters_page=true" target="_blank" rel="external nofollow noopener noreferrer">https://zhuanlan.zhihu.com/p/31668592?from_voters_page=true</a></p>]]></content>
      
      
      <categories>
          
          <category> math </category>
          
          <category> statistics </category>
          
      </categories>
      
      
        <tags>
            
            <tag> statistics </tag>
            
            <tag> math </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>excel shortcut</title>
      <link href="/2020/01/06/excel/excel_shortcut/"/>
      <url>/2020/01/06/excel/excel_shortcut/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="Excel-populate-blank-cells-with-formula"><a href="#Excel-populate-blank-cells-with-formula" class="headerlink" title="Excel populate blank cells with formula"></a>Excel populate blank cells with formula</h1><p><a href="https://baijiahao.baidu.com/s?id=1611414376791124260&amp;wfr=spider&amp;for=pc" target="_blank" rel="external nofollow noopener noreferrer">https://baijiahao.baidu.com/s?id=1611414376791124260&amp;wfr=spider&amp;for=pc</a></p>]]></content>
      
      
      <categories>
          
          <category> excel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> excel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>excel数据分析笔记</title>
      <link href="/2019/12/25/excel/excel%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/12/25/excel/excel%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>此笔记为excel数据分析功能详解</p><h1 id="单因素方差分析"><a href="#单因素方差分析" class="headerlink" title="单因素方差分析"></a>单因素方差分析</h1><p>意义：<br>测试多列数据之间的差异显著度。差异主要指均值的差异。<br>h0: 差异显著<br>h1: 差异不显著</p><p>设置：<br>输入区域为两列或多列数据<br><a href="http://q3zyvka9r.bkt.gdipper.com/20200112230149.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="http://q3zyvka9r.bkt.gdipper.com/20200112230149.png" class="lazyload" title></a></p><p>结果：<br>结果为差异显著<br>看f值&gt;f crit<br>p值&lt;0.05就说明很显著了<br><a href="http://q3zyvka9r.bkt.gdipper.com/20200112230321.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="http://q3zyvka9r.bkt.gdipper.com/20200112230321.png" class="lazyload" title></a></p><h1 id="无重复双因素分析"><a href="#无重复双因素分析" class="headerlink" title="无重复双因素分析"></a>无重复双因素分析</h1><p>意义：<br>测试多行及多列数据间的差异显著度。<br>设置：<br><a href="http://q3zyvka9r.bkt.gdipper.com/20200112230340.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="http://q3zyvka9r.bkt.gdipper.com/20200112230340.png" class="lazyload" title></a></p><p>结果：<br>行的p值<0.05: 列差异显著 列的p值>0.05: 列差异不显著<br><a href="http://q3zyvka9r.bkt.gdipper.com/20200112230400.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="http://q3zyvka9r.bkt.gdipper.com/20200112230400.png" class="lazyload" title></a></0.05:></p><h1 id="可重复双因素分析"><a href="#可重复双因素分析" class="headerlink" title="可重复双因素分析"></a>可重复双因素分析</h1><p>意义:<br>测试行和列对数据的影响显著度，以及行列之间的交互</p><p>设置：<br><a href="http://q3zyvka9r.bkt.gdipper.com/20200112230429.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="http://q3zyvka9r.bkt.gdipper.com/20200112230429.png" class="lazyload" title></a></p><p>结果：<br>行和列的p值都很小，说明行间和列间差异都显著。<br>交互作用p值很大，说明行列之间交互作用很小。<br><a href="http://q3zyvka9r.bkt.gdipper.com/20200112230451.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="http://q3zyvka9r.bkt.gdipper.com/20200112230451.png" class="lazyload" title></a></p><h1 id="相关系数"><a href="#相关系数" class="headerlink" title="相关系数"></a>相关系数</h1><p>意义：<br>测试两个样本之间的线性相关程度。<br>值为-1到1。</p><p>设置:<br><a href="http://q3zyvka9r.bkt.gdipper.com/20200112230619.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="http://q3zyvka9r.bkt.gdipper.com/20200112230619.png" class="lazyload" title></a></p><p>结果：<br>非常相关，0.688的相关度。<br><a href="http://q3zyvka9r.bkt.gdipper.com/20200112230639.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="http://q3zyvka9r.bkt.gdipper.com/20200112230639.png" class="lazyload" title></a></p><h1 id="协方差"><a href="#协方差" class="headerlink" title="协方差"></a>协方差</h1><p>意义：<br>两个样本之间的相关度。</p><p>设置：<br><a href="http://q3zyvka9r.bkt.gdipper.com/20200112230720.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="http://q3zyvka9r.bkt.gdipper.com/20200112230720.png" class="lazyload" title></a></p><p>结果:<br><a href="http://q3zyvka9r.bkt.gdipper.com/20200112230739.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="http://q3zyvka9r.bkt.gdipper.com/20200112230739.png" class="lazyload" title></a></p><h1 id="描述统计"><a href="#描述统计" class="headerlink" title="描述统计"></a>描述统计</h1><p>意义：<br>单个样本的各项参数。</p><p>设置：<br><a href="http://q3zyvka9r.bkt.gdipper.com/20200112230812.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="http://q3zyvka9r.bkt.gdipper.com/20200112230812.png" class="lazyload" title></a></p><p>结果：<br><a href="http://q3zyvka9r.bkt.gdipper.com/20200112230828.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="http://q3zyvka9r.bkt.gdipper.com/20200112230828.png" class="lazyload" title></a></p><h1 id="指数平滑"><a href="#指数平滑" class="headerlink" title="指数平滑"></a>指数平滑</h1><p>意义:<br>相当于股票指标的ema。</p><p>设置:<br>每一行ema相当于<br>（1 - 阻尼） <em> 新数据 + 阻尼 </em> 上一个ema</p><p><a href="http://q3zyvka9r.bkt.gdipper.com/20200112230851.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="http://q3zyvka9r.bkt.gdipper.com/20200112230851.png" class="lazyload" title></a></p><p>结果：</p><p><a href="http://q3zyvka9r.bkt.gdipper.com/20200112230924.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="http://q3zyvka9r.bkt.gdipper.com/20200112230924.png" class="lazyload" title></a></p><h1 id="f检验，-双样本方差"><a href="#f检验，-双样本方差" class="headerlink" title="f检验， 双样本方差"></a>f检验， 双样本方差</h1><p>意义:<br>测试两个样本方差的差异显著度。<br>如果差异显著，之后t检验就最好用异方差t检验。否则就最好用等方差t检验。</p><p>设置：<br><a href="http://q3zyvka9r.bkt.gdipper.com/20200112230943.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="http://q3zyvka9r.bkt.gdipper.com/20200112230943.png" class="lazyload" title></a></p><p>结果：<br>p值大于0.05，说明方差差异不是很显著。</p><p><a href="http://q3zyvka9r.bkt.gdipper.com/20200112231006.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="http://q3zyvka9r.bkt.gdipper.com/20200112231006.png" class="lazyload" title></a></p><h1 id="傅里叶分析"><a href="#傅里叶分析" class="headerlink" title="傅里叶分析"></a>傅里叶分析</h1><p>参考</p><p><a href="https://zhuanlan.zhihu.com/p/49600107" target="_blank" rel="external nofollow noopener noreferrer">https://zhuanlan.zhihu.com/p/49600107</a></p><h1 id="直方图"><a href="#直方图" class="headerlink" title="直方图"></a>直方图</h1><p>意义：<br>自己设置间距，来画直方图</p><p>设置：<br>接受区域就是要用自己写的间距。<br><a href="http://q3zyvka9r.bkt.gdipper.com/20200112231025.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="http://q3zyvka9r.bkt.gdipper.com/20200112231025.png" class="lazyload" title></a></p><p>结果：<br>频率是按照 &lt;=每个间距的数据来统计的。比如下图中low_range ==3950的频率， 统计的是小于3950的数字总数。</p><p><a href="http://q3zyvka9r.bkt.gdipper.com/20200112231038.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="http://q3zyvka9r.bkt.gdipper.com/20200112231038.png" class="lazyload" title></a></p><h1 id="移动平均"><a href="#移动平均" class="headerlink" title="移动平均"></a>移动平均</h1><p>意义：<br>相当于股票的ma。</p><p>设置：<br>间隔相当于几日均线。<br><a href="http://q3zyvka9r.bkt.gdipper.com/20200112231056.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="http://q3zyvka9r.bkt.gdipper.com/20200112231056.png" class="lazyload" title></a></p><p>结果:</p><p><a href="http://q3zyvka9r.bkt.gdipper.com/20200112231116.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="http://q3zyvka9r.bkt.gdipper.com/20200112231116.png" class="lazyload" title></a></p><h1 id="随机数发生器"><a href="#随机数发生器" class="headerlink" title="随机数发生器"></a>随机数发生器</h1><p>意义：<br>生成随机数</p><p>设置:<br>变量个数为每次随机几个变量。<br>随机数个数为生成几次。<br>随机数基数就是seed。<br><a href="http://q3zyvka9r.bkt.gdipper.com/20200112231233.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="http://q3zyvka9r.bkt.gdipper.com/20200112231233.png" class="lazyload" title></a></p><p>结果:<br>5 * 5 = 25个标准正态分布随机数<br><a href="http://q3zyvka9r.bkt.gdipper.com/20200112231248.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="http://q3zyvka9r.bkt.gdipper.com/20200112231248.png" class="lazyload" title></a></p><h1 id="排位与百分比排位"><a href="#排位与百分比排位" class="headerlink" title="排位与百分比排位"></a>排位与百分比排位</h1><p>意义:<br>排位</p><p>设置：<br><a href="http://q3zyvka9r.bkt.gdipper.com/20200112231303.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="http://q3zyvka9r.bkt.gdipper.com/20200112231303.png" class="lazyload" title></a></p><p>结果：</p><p>百分比排位为：小于该值的个数/（小于该值的个数+大于该值的个数）</p><p><a href="http://q3zyvka9r.bkt.gdipper.com/20200112231322.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="http://q3zyvka9r.bkt.gdipper.com/20200112231322.png" class="lazyload" title></a></p><h1 id="回归"><a href="#回归" class="headerlink" title="回归"></a>回归</h1><p>意义：<br>一元线性回归 或者 多元线性回归</p><p>线性回归设置：<br><a href="http://q3zyvka9r.bkt.gdipper.com/20200112231456.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="http://q3zyvka9r.bkt.gdipper.com/20200112231456.png" class="lazyload" title></a></p><p>结果：<br><a href="http://q3zyvka9r.bkt.gdipper.com/gg.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="http://q3zyvka9r.bkt.gdipper.com/gg.png" class="lazyload" title></a></p><p><a href="http://q3zyvka9r.bkt.gdipper.com/20200112231621.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="http://q3zyvka9r.bkt.gdipper.com/20200112231621.png" class="lazyload" title></a></p><p>详细解释：</p><p><a href="https://wenku.baidu.com/view/0996a441866fb84ae55c8d3c.html" target="_blank" rel="external nofollow noopener noreferrer">https://wenku.baidu.com/view/0996a441866fb84ae55c8d3c.html</a></p><p><a href="https://www.cnblogs.com/nick477931661/p/9113396.html" target="_blank" rel="external nofollow noopener noreferrer">https://www.cnblogs.com/nick477931661/p/9113396.html</a></p><p><a href="https://blog.csdn.net/data_cola/article/details/87994083" target="_blank" rel="external nofollow noopener noreferrer">https://blog.csdn.net/data_cola/article/details/87994083</a></p><h1 id="抽样"><a href="#抽样" class="headerlink" title="抽样"></a>抽样</h1><p>意义：<br>从样本中抽n个值</p><p>设置：<br><a href="http://q3zyvka9r.bkt.gdipper.com/20200112231640.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="http://q3zyvka9r.bkt.gdipper.com/20200112231640.png" class="lazyload" title></a></p><p>结果：<br><a href="http://q3zyvka9r.bkt.gdipper.com/20200112231703.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="http://q3zyvka9r.bkt.gdipper.com/20200112231703.png" class="lazyload" title></a></p><h1 id="t-检验：-平均值的成对二样本分析"><a href="#t-检验：-平均值的成对二样本分析" class="headerlink" title="t-检验： 平均值的成对二样本分析"></a>t-检验： 平均值的成对二样本分析</h1><p>意义：</p><p>成对二样本分析检验的是成对的两个数值的差异是否不等于零，所谓成对的数值，一般是同一个被访者进行两项测试产生的两个值，例如试饮两个口味的饮品给出的两个评分。</p><p>设置：</p><p><a href="http://q3zyvka9r.bkt.gdipper.com/20200112231722.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="http://q3zyvka9r.bkt.gdipper.com/20200112231722.png" class="lazyload" title></a></p><p>结果：<br>p值小于0.05， t 值大于t双尾临界，所以差异显著。<br><a href="http://q3zyvka9r.bkt.gdipper.com/20200112231751.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="http://q3zyvka9r.bkt.gdipper.com/20200112231751.png" class="lazyload" title></a></p><h1 id="t-检验：-双样本等方差假设"><a href="#t-检验：-双样本等方差假设" class="headerlink" title="t-检验： 双样本等方差假设"></a>t-检验： 双样本等方差假设</h1><p>意义：</p><p>这个是相对于成对二样本分析而言。<br>用等方差还是异方差假设就是要用“方差齐性检验”方差齐性检验的原理，如果检验是显著的，说明两个独立总体方差不一样，这是用异方差假设，否则用等方差假设。</p><p>设置：<br><a href="http://q3zyvka9r.bkt.gdipper.com/20200112231806.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="http://q3zyvka9r.bkt.gdipper.com/20200112231806.png" class="lazyload" title></a></p><p>结果：<br>p双尾很小，因此差异显著<br><a href="http://q3zyvka9r.bkt.gdipper.com/20200112231820.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="http://q3zyvka9r.bkt.gdipper.com/20200112231820.png" class="lazyload" title></a></p><h1 id="t-检验：-双样本异方差假设"><a href="#t-检验：-双样本异方差假设" class="headerlink" title="t-检验： 双样本异方差假设"></a>t-检验： 双样本异方差假设</h1><p>意义：</p><p>异方差情况下的双样本t检验</p><p>设置：<br><a href="http://q3zyvka9r.bkt.gdipper.com/20200112231841.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="http://q3zyvka9r.bkt.gdipper.com/20200112231841.png" class="lazyload" title></a></p><p>结果：<br>很接近双样本等方差t检验。<br>差异也是显著。<br><a href="http://q3zyvka9r.bkt.gdipper.com/20200112231854.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="http://q3zyvka9r.bkt.gdipper.com/20200112231854.png" class="lazyload" title></a></p><h1 id="z-检验：-双样本平均差检验"><a href="#z-检验：-双样本平均差检验" class="headerlink" title="z-检验： 双样本平均差检验"></a>z-检验： 双样本平均差检验</h1><p>意义：<br>已知两个样本总体方差的情况下才用这个检验。 实际效果和t检验也差不多。</p><p>设置：</p><p><a href="http://q3zyvka9r.bkt.gdipper.com/20200112231911.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="http://q3zyvka9r.bkt.gdipper.com/20200112231911.png" class="lazyload" title></a></p><p>结果:<br>p都等于0了，差异非常显著。和t检验结果类似。<br><a href="http://q3zyvka9r.bkt.gdipper.com/20200112231927.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="http://q3zyvka9r.bkt.gdipper.com/20200112231927.png" class="lazyload" title></a></p>]]></content>
      
      
      <categories>
          
          <category> excel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> excel </tag>
            
            <tag> statistics </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>期货从业资格笔记</title>
      <link href="/2019/12/25/finance/basics/future/%E6%9C%9F%E8%B4%A7%E4%BB%8E%E4%B8%9A%E8%B5%84%E6%A0%BC/"/>
      <url>/2019/12/25/finance/basics/future/%E6%9C%9F%E8%B4%A7%E4%BB%8E%E4%B8%9A%E8%B5%84%E6%A0%BC/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>简介： 此笔记为 233网校 期货从业资格视频教程笔记</p><h1 id="期货的发展"><a href="#期货的发展" class="headerlink" title="期货的发展"></a>期货的发展</h1><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/期货从业资格_1.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/期货从业资格_1.jpg" class="lazyload" title></a></p><h1 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h1><h1 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h1><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/期货从业资格_2.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/期货从业资格_2.jpg" class="lazyload" title></a></p><h1 id="期货交易所"><a href="#期货交易所" class="headerlink" title="期货交易所"></a>期货交易所</h1><h1 id="期货结算结构"><a href="#期货结算结构" class="headerlink" title="期货结算结构"></a>期货结算结构</h1><h1 id="期货公司"><a href="#期货公司" class="headerlink" title="期货公司"></a>期货公司</h1><h1 id="期货投资者"><a href="#期货投资者" class="headerlink" title="期货投资者"></a>期货投资者</h1><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/期货从业资格_3.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/期货从业资格_3.jpg" class="lazyload" title></a></p><h1 id="期货合约"><a href="#期货合约" class="headerlink" title="期货合约"></a>期货合约</h1><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/期货从业资格_4.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/期货从业资格_4.jpg" class="lazyload" title></a></p><h1 id="期货保证金"><a href="#期货保证金" class="headerlink" title="期货保证金"></a>期货保证金</h1><h1 id="当日无负债结算"><a href="#当日无负债结算" class="headerlink" title="当日无负债结算"></a>当日无负债结算</h1><h1 id="持仓限额"><a href="#持仓限额" class="headerlink" title="持仓限额"></a>持仓限额</h1><h1 id="强行平仓"><a href="#强行平仓" class="headerlink" title="强行平仓"></a>强行平仓</h1><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/期货从业资格_5.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/期货从业资格_5.jpg" class="lazyload" title></a></p><h1 id="期货交易流程"><a href="#期货交易流程" class="headerlink" title="期货交易流程"></a>期货交易流程</h1><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/期货从业资格_6.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/期货从业资格_6.jpg" class="lazyload" title></a></p><h1 id="套期保值"><a href="#套期保值" class="headerlink" title="套期保值"></a>套期保值</h1><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/期货从业资格_7.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/期货从业资格_7.jpg" class="lazyload" title></a><br><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/期货从业资格_8.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/期货从业资格_8.jpg" class="lazyload" title></a></p><h1 id="期货投机"><a href="#期货投机" class="headerlink" title="期货投机"></a>期货投机</h1><h1 id="期货套利"><a href="#期货套利" class="headerlink" title="期货套利"></a>期货套利</h1><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/期货从业资格_9.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/期货从业资格_9.jpg" class="lazyload" title></a></p><h1 id="期权"><a href="#期权" class="headerlink" title="期权"></a>期权</h1><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/期货从业资格_10.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/期货从业资格_10.jpg" class="lazyload" title></a></p><h1 id="外汇交易"><a href="#外汇交易" class="headerlink" title="外汇交易"></a>外汇交易</h1><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/期货从业资格_11.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/期货从业资格_11.jpg" class="lazyload" title></a></p><h1 id="外汇期货"><a href="#外汇期货" class="headerlink" title="外汇期货"></a>外汇期货</h1><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/期货从业资格_12.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/期货从业资格_12.jpg" class="lazyload" title></a></p><h1 id="外汇掉期"><a href="#外汇掉期" class="headerlink" title="外汇掉期"></a>外汇掉期</h1><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/期货从业资格_13.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/期货从业资格_13.jpg" class="lazyload" title></a></p><h1 id="货币互换"><a href="#货币互换" class="headerlink" title="货币互换"></a>货币互换</h1><h1 id="外汇期权"><a href="#外汇期权" class="headerlink" title="外汇期权"></a>外汇期权</h1><h1 id="利率期货"><a href="#利率期货" class="headerlink" title="利率期货"></a>利率期货</h1><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/期货从业资格_14.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/期货从业资格_14.jpg" class="lazyload" title></a></p><h1 id="国债期货报价"><a href="#国债期货报价" class="headerlink" title="国债期货报价"></a>国债期货报价</h1><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/期货从业资格_15.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/期货从业资格_15.jpg" class="lazyload" title></a></p><h1 id="国债期货运用"><a href="#国债期货运用" class="headerlink" title="国债期货运用"></a>国债期货运用</h1><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/期货从业资格_16.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/期货从业资格_16.jpg" class="lazyload" title></a></p><h1 id="国债期货投机"><a href="#国债期货投机" class="headerlink" title="国债期货投机"></a>国债期货投机</h1><h1 id="远期利率协议"><a href="#远期利率协议" class="headerlink" title="远期利率协议"></a>远期利率协议</h1><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/期货从业资格_17.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/期货从业资格_17.jpg" class="lazyload" title></a></p><h1 id="股票指数"><a href="#股票指数" class="headerlink" title="股票指数"></a>股票指数</h1><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/期货从业资格_18.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/期货从业资格_18.jpg" class="lazyload" title></a></p><h1 id="股指期货套期保值"><a href="#股指期货套期保值" class="headerlink" title="股指期货套期保值"></a>股指期货套期保值</h1><h1 id="期货术语"><a href="#期货术语" class="headerlink" title="期货术语"></a>期货术语</h1><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/期货从业资格_19.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/期货从业资格_19.jpg" class="lazyload" title></a></p><h1 id="期货行情图"><a href="#期货行情图" class="headerlink" title="期货行情图"></a>期货行情图</h1><h1 id="基本面"><a href="#基本面" class="headerlink" title="基本面"></a>基本面</h1><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/期货从业资格_20.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/期货从业资格_20.jpg" class="lazyload" title></a></p><h1 id="技术分析"><a href="#技术分析" class="headerlink" title="技术分析"></a>技术分析</h1><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/期货从业资格_21.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/期货从业资格_21.jpg" class="lazyload" title></a></p>]]></content>
      
      
      <categories>
          
          <category> finance </category>
          
          <category> basics </category>
          
          <category> future </category>
          
      </categories>
      
      
        <tags>
            
            <tag> finance </tag>
            
            <tag> future </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>matplotlib useful links</title>
      <link href="/2019/12/23/python/basics/matplotlib_useful_links/"/>
      <url>/2019/12/23/python/basics/matplotlib_useful_links/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>How to put the legend out of the plot</p><p><a href="https://stackoverflow.com/questions/4700614/how-to-put-the-legend-out-of-the-plot" target="_blank" rel="external nofollow noopener noreferrer">https://stackoverflow.com/questions/4700614/how-to-put-the-legend-out-of-the-plot</a></p><p>Setting a fixed size for points in legend</p><p><a href="https://stackoverflow.com/questions/24706125/setting-a-fixed-size-for-points-in-legend" target="_blank" rel="external nofollow noopener noreferrer">https://stackoverflow.com/questions/24706125/setting-a-fixed-size-for-points-in-legend</a></p><p>difference for image channels(RGB, BGR) for cv2 and matplotlib</p><p><a href="http://www.bogotobogo.com/python/OpenCV_Python/python_opencv3_matplotlib_rgb_brg_image_load_display_save.php" target="_blank" rel="external nofollow noopener noreferrer">http://www.bogotobogo.com/python/OpenCV_Python/python_opencv3_matplotlib_rgb_brg_image_load_display_save.php</a></p><p>add_axes-and-add_subplot</p><p><a href="https://github.com/supersheepbear/Notes_for_myself/wiki/add_axes-and-add_subplot" target="_blank" rel="external nofollow noopener noreferrer">https://github.com/supersheepbear/Notes_for_myself/wiki/add_axes-and-add_subplot</a></p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
          <category> basics </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> matplotlibs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>useful links</title>
      <link href="/2019/12/23/python/basics/useful_links/"/>
      <url>/2019/12/23/python/basics/useful_links/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>Change jupyter notebook directory</p><p>jupyter notebook —notebook-dir=C:\my_python_project</p><p>python文件夹的操作</p><p><a href="https://www.cnblogs.com/zhoujie/archive/2013/04/10/python7.html" target="_blank" rel="external nofollow noopener noreferrer">https://www.cnblogs.com/zhoujie/archive/2013/04/10/python7.html</a></p><p>python创建多级文件夹</p><p><a href="http://www.111cn.net/phper/python/111575.html" target="_blank" rel="external nofollow noopener noreferrer">http://www.111cn.net/phper/python/111575.html</a></p><p>python pycharm常用快捷键<br><a href="https://www.jetbrains.com/help/pycharm/selecting-text-in-the-editor.html" target="_blank" rel="external nofollow noopener noreferrer">https://www.jetbrains.com/help/pycharm/selecting-text-in-the-editor.html</a></p><p>多线程<br><a href="http://yangcongchufang.com/%E9%AB%98%E7%BA%A7python%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/python-process-thread.html" target="_blank" rel="external nofollow noopener noreferrer">http://yangcongchufang.com/%E9%AB%98%E7%BA%A7python%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/python-process-thread.html</a></p><p><a href="https://firsh.me/2017/08/07/python-thread/" target="_blank" rel="external nofollow noopener noreferrer">https://firsh.me/2017/08/07/python-thread/</a></p><p>Python 多进程异常处理<br><a href="http://www.cnblogs.com/liujshi/p/6014521.html" target="_blank" rel="external nofollow noopener noreferrer">http://www.cnblogs.com/liujshi/p/6014521.html</a></p><p>Python GIL锁<br><a href="http://cenalulu.github.io/python/gil-in-python/" target="_blank" rel="external nofollow noopener noreferrer">http://cenalulu.github.io/python/gil-in-python/</a></p><p>Python 事件驱动<br><a href="https://www.jianshu.com/p/8301f1083d5e" target="_blank" rel="external nofollow noopener noreferrer">https://www.jianshu.com/p/8301f1083d5e</a></p><p>pycharm 大小写转换快捷键<br><a href="https://intellij-support.jetbrains.com/hc/en-us/community/posts/205837479-Key-shortcut-for-to-upper-to-lower" target="_blank" rel="external nofollow noopener noreferrer">https://intellij-support.jetbrains.com/hc/en-us/community/posts/205837479-Key-shortcut-for-to-upper-to-lower</a></p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
          <category> basics </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>tensorflow notes</title>
      <link href="/2019/12/23/python/basics/tensorflow_notes/"/>
      <url>/2019/12/23/python/basics/tensorflow_notes/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="layer-shape-can-be-found-by"><a href="#layer-shape-can-be-found-by" class="headerlink" title="layer shape can be found by:"></a>layer shape can be found by:</h2><p>shape = (fc7.get_shape().as_list()[-1], fc8shape) <br><br>Through this we can get layer output shape, and feed to the next layer</p><h2 id="tensorflow-ConfigProto"><a href="#tensorflow-ConfigProto" class="headerlink" title="tensorflow ConfigProto"></a>tensorflow ConfigProto</h2><p>tf.ConfigProto()的参数<br>log_device_placement=True : 是否打印设备分配日志<br>allow_soft_placement=True ： 如果你指定的设备不存在，允许TF自动分配设备<br>tf.ConfigProto(log_device_placement=True,allow_soft_placement=True)</p><h2 id="控制GPU资源使用率"><a href="#控制GPU资源使用率" class="headerlink" title="控制GPU资源使用率"></a>控制GPU资源使用率</h2><p><strong>allow growth</strong><br><br>config = tf.ConfigProto()<br><br>config.gpu_options.allow_growth = True<br><br>session = tf.Session(config=config, …)<br><br>使用allow_growth option，刚一开始分配少量的GPU容量，然后按需慢慢的增加，由于不会释放<br><br>内存，所以会导致碎片<br></p><p><strong>per_process_gpu_memory_fraction</strong><br><br>gpu_options=tf.GPUOptions(per_process_gpu_memory_fraction=0.7)<br><br>config=tf.ConfigProto(gpu_options=gpu_options)<br><br>session = tf.Session(config=config, …)<br><br>设置每个GPU应该拿出多少容量给进程使用，0.4代表 40%<br></p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
          <category> basics </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> tensorflow </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>期权36课笔记</title>
      <link href="/2019/12/12/finance/basics/option/%E6%9C%9F%E6%9D%8336%E8%AF%BE%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/12/12/finance/basics/option/%E6%9C%9F%E6%9D%8336%E8%AF%BE%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>简介： 此笔记为 期权36课 的读书笔记</p><h1 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h1><h1 id="期权属性"><a href="#期权属性" class="headerlink" title="期权属性"></a>期权属性</h1><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@ff280eccc3e4dd79b9024925389e43e6d04b6d19/blog/image/期权36问_1.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@ff280eccc3e4dd79b9024925389e43e6d04b6d19/blog/image/期权36问_1.jpg" class="lazyload" title></a></p><h1 id="期权操作"><a href="#期权操作" class="headerlink" title="期权操作"></a>期权操作</h1><h1 id="期权价值"><a href="#期权价值" class="headerlink" title="期权价值"></a>期权价值</h1><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@ff280eccc3e4dd79b9024925389e43e6d04b6d19/blog/image/期权36问_2.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@ff280eccc3e4dd79b9024925389e43e6d04b6d19/blog/image/期权36问_2.jpg" class="lazyload" title></a></p><h1 id="期权价格平价关系"><a href="#期权价格平价关系" class="headerlink" title="期权价格平价关系"></a>期权价格平价关系</h1><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@ff280eccc3e4dd79b9024925389e43e6d04b6d19/blog/image/期权36问_3.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@ff280eccc3e4dd79b9024925389e43e6d04b6d19/blog/image/期权36问_3.jpg" class="lazyload" title></a></p><h1 id="二项期权定价模型（美式期权定价）"><a href="#二项期权定价模型（美式期权定价）" class="headerlink" title="二项期权定价模型（美式期权定价）"></a>二项期权定价模型（美式期权定价）</h1><h1 id="black-schole-model-欧式期权定价"><a href="#black-schole-model-欧式期权定价" class="headerlink" title="black-schole model (欧式期权定价)"></a>black-schole model (欧式期权定价)</h1><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@ff280eccc3e4dd79b9024925389e43e6d04b6d19/blog/image/期权36问_4.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@ff280eccc3e4dd79b9024925389e43e6d04b6d19/blog/image/期权36问_4.jpg" class="lazyload" title></a></p><h1 id="隐含波动率与历史波动率"><a href="#隐含波动率与历史波动率" class="headerlink" title="隐含波动率与历史波动率"></a>隐含波动率与历史波动率</h1><h1 id="季报，分红，对期权的影响"><a href="#季报，分红，对期权的影响" class="headerlink" title="季报，分红，对期权的影响"></a>季报，分红，对期权的影响</h1><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@ff280eccc3e4dd79b9024925389e43e6d04b6d19/blog/image/期权36问_5.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@ff280eccc3e4dd79b9024925389e43e6d04b6d19/blog/image/期权36问_5.jpg" class="lazyload" title></a></p><h1 id="期权价格变化"><a href="#期权价格变化" class="headerlink" title="期权价格变化"></a>期权价格变化</h1><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@ff280eccc3e4dd79b9024925389e43e6d04b6d19/blog/image/期权36问_6.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@ff280eccc3e4dd79b9024925389e43e6d04b6d19/blog/image/期权36问_6.jpg" class="lazyload" title></a><br><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@ff280eccc3e4dd79b9024925389e43e6d04b6d19/blog/image/期权36问_7.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@ff280eccc3e4dd79b9024925389e43e6d04b6d19/blog/image/期权36问_7.jpg" class="lazyload" title></a><br><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@ff280eccc3e4dd79b9024925389e43e6d04b6d19/blog/image/期权36问_8.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@ff280eccc3e4dd79b9024925389e43e6d04b6d19/blog/image/期权36问_8.jpg" class="lazyload" title></a></p><h1 id="买入-卖出-看涨-看跌期权"><a href="#买入-卖出-看涨-看跌期权" class="headerlink" title="买入/卖出 看涨/看跌期权"></a>买入/卖出 看涨/看跌期权</h1><h1 id="对冲"><a href="#对冲" class="headerlink" title="对冲"></a>对冲</h1><h1 id="备兑看涨期权，-保护性看跌期权"><a href="#备兑看涨期权，-保护性看跌期权" class="headerlink" title="备兑看涨期权， 保护性看跌期权"></a>备兑看涨期权， 保护性看跌期权</h1><h1 id="由做市商引发的思考"><a href="#由做市商引发的思考" class="headerlink" title="由做市商引发的思考"></a>由做市商引发的思考</h1><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@ff280eccc3e4dd79b9024925389e43e6d04b6d19/blog/image/期权36问_9.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@ff280eccc3e4dd79b9024925389e43e6d04b6d19/blog/image/期权36问_9.jpg" class="lazyload" title></a></p><h1 id="垂直期权组合"><a href="#垂直期权组合" class="headerlink" title="垂直期权组合"></a>垂直期权组合</h1><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@ff280eccc3e4dd79b9024925389e43e6d04b6d19/blog/image/期权36问_10.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@ff280eccc3e4dd79b9024925389e43e6d04b6d19/blog/image/期权36问_10.jpg" class="lazyload" title></a></p><h1 id="跨式组合"><a href="#跨式组合" class="headerlink" title="跨式组合"></a>跨式组合</h1><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@ff280eccc3e4dd79b9024925389e43e6d04b6d19/blog/image/期权36问_11.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@ff280eccc3e4dd79b9024925389e43e6d04b6d19/blog/image/期权36问_11.jpg" class="lazyload" title></a></p><h1 id="铁鹰策略"><a href="#铁鹰策略" class="headerlink" title="铁鹰策略"></a>铁鹰策略</h1><h1 id="日历策略，对角策略"><a href="#日历策略，对角策略" class="headerlink" title="日历策略，对角策略"></a>日历策略，对角策略</h1><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@ff280eccc3e4dd79b9024925389e43e6d04b6d19/blog/image/期权36问_12.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@ff280eccc3e4dd79b9024925389e43e6d04b6d19/blog/image/期权36问_12.jpg" class="lazyload" title></a></p>]]></content>
      
      
      <categories>
          
          <category> finance </category>
          
          <category> basics </category>
          
          <category> option </category>
          
      </categories>
      
      
        <tags>
            
            <tag> option </tag>
            
            <tag> finance </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pandas_useful_websites</title>
      <link href="/2019/04/02/python/basics/pandas_useful_websites/"/>
      <url>/2019/04/02/python/basics/pandas_useful_websites/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>optimizing pandas looping speed:<br><a href="https://engineering.upside.com/a-beginners-guide-to-optimizing-pandas-code-for-speed-c09ef2c6a4d6" target="_blank" rel="external nofollow noopener noreferrer">https://engineering.upside.com/a-beginners-guide-to-optimizing-pandas-code-for-speed-c09ef2c6a4d6</a></p><p>Fast, Flexible, Easy and Intuitive: How to Speed Up Your Pandas Projects<br><a href="https://realpython.com/fast-flexible-pandas/" target="_blank" rel="external nofollow noopener noreferrer">https://realpython.com/fast-flexible-pandas/</a></p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
          <category> basics </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> pandas </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python yaml load</title>
      <link href="/2019/04/02/python/basics/yaml_load/"/>
      <url>/2019/04/02/python/basics/yaml_load/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>Load yaml to a nested dict structure, and then parse to a class.<br>below is the code:</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Struct</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, data)</span>:</span></span><br><span class="line">        <span class="keyword">for</span> name, value <span class="keyword">in</span> data.items():</span><br><span class="line">            setattr(self, name, self._wrap(value))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_wrap</span><span class="params">(self, value)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> isinstance(value, (tuple, list, set, frozenset)): </span><br><span class="line">            <span class="keyword">return</span> type(value)([self._wrap(v) <span class="keyword">for</span> v <span class="keyword">in</span> value])</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> Struct(value) <span class="keyword">if</span> isinstance(value, dict) <span class="keyword">else</span> value</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> open(<span class="string">r'c:\Users\uidn4064\Desktop\project_data_analysis\FD69\lab\test.yaml'</span>) <span class="keyword">as</span> stream:</span><br><span class="line">    yaml_dict = yaml.load(stream)</span><br><span class="line">    struct = Struct(yaml_dict)</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
          <category> basics </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> yaml </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CFA note chapter 2 - 数量分析</title>
      <link href="/2018/12/30/finance/cfa_level1/2_1_Time_Value_Of_Money/"/>
      <url>/2018/12/30/finance/cfa_level1/2_1_Time_Value_Of_Money/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="货币的时间价值"><a href="#货币的时间价值" class="headerlink" title="货币的时间价值"></a>货币的时间价值</h1><h2 id="利率的三种形式"><a href="#利率的三种形式" class="headerlink" title="利率的三种形式"></a>利率的三种形式</h2><ul><li>要求回报率： 客户要求的回报率。</li><li>折现率，贴现率(discount rate)： 未来收益折算为现值。</li><li>机会成本(oppotunity cost): 失去的潜在收益。相同风险水平(identical risk)上的次优水平(next best)的收益率。</li></ul><h2 id="要求回报的构成"><a href="#要求回报的构成" class="headerlink" title="要求回报的构成"></a>要求回报的构成</h2><ul><li>要求回报率 = 名义无风险利率 + 风险溢价</li><li>名义无风险利率 = 实际无风险利率 + 通货膨胀率</li><li>风险溢价 = 流动性风险溢价 + 违约风险溢价 + 期限风险溢价</li></ul><h2 id="有效年利率-EAR-effective-annual-rate"><a href="#有效年利率-EAR-effective-annual-rate" class="headerlink" title="有效年利率(EAR: effective annual rate)"></a>有效年利率(EAR: effective annual rate)</h2><p>$EAR = (1 + r/n)^n -1$<br>r是名义利率(nominal rate)。 n是一年内复利次数。 </p><h2 id="单笔现金流的现值和终值"><a href="#单笔现金流的现值和终值" class="headerlink" title="单笔现金流的现值和终值"></a>单笔现金流的现值和终值</h2><ul><li>FV: 终值</li><li>r: 利率</li><li>PV: 现值</li><li>n: 期数</li></ul><p>终值计算：<br>每年一次复利FV: $ FV = PV(1+r)^n $<br>每年多次复利FV: $ FV_N = PV(1+\frac{r}{m})^{mn} $<br>连续复利FV: $ FV = PVe^{rn} $</p><p>现值计算：$ PV = FV/(1+r)^{n} $<br>此过程称为折现。此时r为折现率。</p><h2 id="年金"><a href="#年金" class="headerlink" title="年金"></a>年金</h2><p>年金指一定时期内一系列相等金额的收付款项. 比如: 按揭贷款吗分期付款, 发放养老金, 支付租金, 提取折旧.</p><ul><li>A: 每年收付的金额</li><li>i: 每期利率</li><li>F: 年金终值</li><li>P: 年金现值</li><li>n: 期数</li></ul><p>年金终值计算:<br>$F = A \left(\frac{(1+i)^n - 1}{i} \right)$<br>年金现值计算<br>$F = A \left(\frac{1-(1+i)^{-n}}{i} \right)$<br>先付年金(annuity due): 年初先给钱, 所以多算一个复利(1 + i)<br>$F = A \left(\frac{(1+i)^{n+1} - 1}{i} - 1\right)$<br>递延年金: 第一次收款在第二期或者第二期之后<br>永续年金: 无限期支付,只有现值没有终值.<br>$P = \frac{A}{i}$</p><h2 id="货币时间价值的应用"><a href="#货币时间价值的应用" class="headerlink" title="货币时间价值的应用"></a>货币时间价值的应用</h2><ul><li>不等额现金流量终值和现值: 每年分开计算即可</li><li>分段年金流量: 同上</li><li>养老金: 同上</li></ul><h2 id="TI-BA-II计算器使用"><a href="#TI-BA-II计算器使用" class="headerlink" title="TI BA II计算器使用"></a>TI BA II计算器使用</h2><p>Todo</p><h1 id="折现现金流方法的应用"><a href="#折现现金流方法的应用" class="headerlink" title="折现现金流方法的应用"></a>折现现金流方法的应用</h1><h2 id="净现值和内部投资收益率"><a href="#净现值和内部投资收益率" class="headerlink" title="净现值和内部投资收益率"></a>净现值和内部投资收益率</h2><ul><li><p>净现值(net present value, NPV)<br>一项投资所产生的未来现金流的折现值和项目投资成本之间的差值.<br>净现值为正即投资方案可行.<br>$C<em>0$: 当前成本<br>$CF_t$ : 第t年的净收益值<br>$NPV = PV - C_0 = \sum</em>{i=1}^{n} \frac{CF_t}{(1+r)^t} $</p></li><li><p>内部收益率(internal rate of return, IRR)<br>能够使现金流入量的现值等于现金流出量现值的贴现率, 或者是使投资方案净现值为0的贴现率.<br>$NPV = CF_0 + \frac {CF_1}{(1 + IRR)^1} + \frac {CF_2}{(1 + IRR)^2} + … + \frac {CF_N}{(1 + IRR)^N} = 0$</p><h3 id="选择项目"><a href="#选择项目" class="headerlink" title="选择项目"></a>选择项目</h3></li><li>独立项目(independent project)<br>投资决策不受其他项目投资决策影响.不存在选项目问题. 就看是不是 NPV&gt;0, IRR&lt;收益率</li><li>互斥项目(mutually exclusive project)<br>选择A项目就不能选择B.<br>所以要选择NPV大的, IRR高的.<br>如果相互矛盾, 就要选NPV大的, 因为IRR不能反映投资规模.</li></ul><h3 id="金融计算器计算NPV-IRR"><a href="#金融计算器计算NPV-IRR" class="headerlink" title="金融计算器计算NPV, IRR"></a>金融计算器计算NPV, IRR</h3><p>Todo</p><h2 id="持有期收益-holding-period-return-HPR"><a href="#持有期收益-holding-period-return-HPR" class="headerlink" title="持有期收益(holding period return, HPR)"></a>持有期收益(holding period return, HPR)</h2><p>某一投资工具持有一段时间所带来的总收益, 包括利息收入或股利收入和资本利得或损失.<br>$P_t$: 第t年终值<br>$ HPR = \frac {P_1 - P_0 + CF_1}{P_0}$<br>$P_1 - P_0$: 资本的升值<br>$CF_1$: 净收益值, 红利</p><h2 id="银行贴现收益率-持有期收益率-有效年利率和货币市场收益率"><a href="#银行贴现收益率-持有期收益率-有效年利率和货币市场收益率" class="headerlink" title="银行贴现收益率, 持有期收益率, 有效年利率和货币市场收益率"></a>银行贴现收益率, 持有期收益率, 有效年利率和货币市场收益率</h2><ul><li>持有期收益率(holding period yield, HPY)<br>$ HPY = R<em>t = \frac {P_t - P</em>{t-1} + CF_t}{P_t}$<br>相当于t-1时刻到t时刻的HPR</li><li>有效年利率(effective annual yield, EAY)<br>$ EAY = (1 + HPY)^{\frac{365}{t}} - 1 $<br>一般而言讨论金融产品收益率都是指年收益率</li><li>银行贴现收益率 (band discount yield)<br>这是对于银行贴现证券而言的.<br>P: 证券的购买价格<br>F: 证券的票面价格<br>t: 持有到期时间<br>$r_{BD} = \frac{F - P}{F}\frac{360}{t}$</li><li>货币市场收益率 (money market yield)<br>相比于银行贴现收益率, 使用P作为分母, 更科学.<br>$r_{MM} = \frac{F - P}{P}\frac{360}{t}$</li></ul><p><strong>注意, $r_{MM}$是用的单利, 而且用了360天计算, 而EAY用了复利, 而且是365天计算!!这就是他们的区别!!</strong></p><h3 id="各值相互转换"><a href="#各值相互转换" class="headerlink" title="各值相互转换"></a>各值相互转换</h3><p>$EAY = (1 +HPY)^{\frac{365}{t}} - 1$<br>$HPY = \frac {r<em>{BD}(\frac{t}{360})}{1 - r</em>{BD}(\frac{t}{360})}$<br>推导:<br>$r<em>{BD} = \frac{F-P}{F} =\frac{ P_t + CF_t - P</em>{t-1}}{P<em>{t-1} + CF_t}\times \frac{360}{t} =  \frac {HPY}{1-HPY} \times \frac{360}{t}$<br>=&gt; $HPY = \frac {r</em>{BD}(\frac{t}{360})}{1 - r_{BD}(\frac{t}{360})}$</p><p>$r<em>{MM} = \frac{F - P}{P} \times \frac{360}{t} = HPY \times \frac{360}{t} = \frac{360 \times r</em>{BD}}{360 - t \times r<em>{BD}} = \frac {r</em>{BD}}{1 - t \times \frac{r_{BD}}{360}}$</p><ul><li>债券等价收益率(bond equivalend yield, BEY)<br>P: 债券价格<br>r: 半年期收益率<br>M: 到期支付的本金<br>C: 每次支付的利息<br>n: 利息期数<br>$ P = \frac{C}{1+r} +\frac{C}{(1+r)^2} +… +\frac{C + M}{(1+r)^n}$<br>求得r为半年期收益率, 而债券等价收益率 BEY = 2 <em> r<br><em>*美国要求必须这么算一年的单利!</em></em><br>HPY 和 BEY, EAY可以相互转换<br>$1 + HPY = (1 + \frac{BEY}{2})^{2 \times \frac{t}{365}}  = (1 + EAY)^{\frac{t}{365}}$</li></ul><h2 id="货币加权收益率和时间加权收益率"><a href="#货币加权收益率和时间加权收益率" class="headerlink" title="货币加权收益率和时间加权收益率"></a>货币加权收益率和时间加权收益率</h2><ul><li><p>货币加权收益率(内部收益率) (money weighted rate of return)<br>R_D : 货币加权收益率<br>V_0 : 证券组合初始市场价值<br>V_N: 证券组合的期末市场价值<br>C_K: 自期间k内现金流入减去流出<br>$ V_0 = \frac{C_1}{1+ R_D} +\frac{C_2}{(1+R_D)^2} +… +\frac{C_N + V_N}{(1+R_D)^n}$<br><strong>货币加权收益率就是IRR 换了个理解方式而已</strong></p></li><li><p>时间加权收益率(time-weighted rate of return)(几何收益率)<br>R<em>r: 时间加权收益率<br>R</em>{Pk}: 子期间k的组合投资收益<br>N: 评估期内的子期间数<br>$ R<em>r = [(1 +R</em>{P1})(1 +R<em>{P2})…(1 +R</em>{PN})]^{\frac{1}{N}} - 1$</p></li></ul><h1 id="数理统计基础"><a href="#数理统计基础" class="headerlink" title="数理统计基础"></a>数理统计基础</h1><h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2>]]></content>
      
      
      <categories>
          
          <category> finance </category>
          
          <category> cfa_level1 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> finance </tag>
            
            <tag> cfa </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iterator and generator</title>
      <link href="/2018/12/24/python/basics/Iterator_and_generator/"/>
      <url>/2018/12/24/python/basics/Iterator_and_generator/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="Iterable"><a href="#Iterable" class="headerlink" title="Iterable"></a>Iterable</h1><p>A iterable is an object which implements the _<em>iter_<em> method. __iter\</em></em> has to implement yield statement.</p><h2 id="iterable-concepts"><a href="#iterable-concepts" class="headerlink" title="iterable concepts"></a>iterable concepts</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> abc</span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Iterable</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IterableObjc</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__iter__</span><span class="params">(self)</span>:</span></span><br><span class="line">        cont = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> cont &lt; <span class="number">3</span>:</span><br><span class="line">            cont += <span class="number">1</span></span><br><span class="line">            <span class="keyword">yield</span> cont</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a_iterable = IterableObjc()</span><br><span class="line"><span class="keyword">assert</span> isinstance(a_iterable, abc.Iterable)  <span class="comment"># no exception</span></span><br><span class="line"><span class="keyword">assert</span> isinstance(a_iterable, Iterable)  <span class="comment"># no exception</span></span><br><span class="line">abc.Iterable <span class="keyword">is</span> Iterable <span class="comment"># collection.Iterable is the same as a_iterable</span></span><br></pre></td></tr></table></figure></div><pre><code>True</code></pre><p>‘for’ syntax is able to be used for iterable.</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Iterable_instance =  IterableObjc()</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> Iterable_instance:</span><br><span class="line">    print(i)</span><br></pre></td></tr></table></figure></div><pre><code>123</code></pre><p>Iterable could be also understood as any accepted object by iter() function. <br><br><strong>_<em>getitem_</em>()</strong> is another way to define a Iterable object.<br><br><em>note: <strong>StopIteration()</strong> exception has to be raised in <strong>_<em>getitem_</em>()</strong> function, otherwise infinite loop will be triggered when ‘for’ syntax is used!</em></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GetitemObjc</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__getitem__</span><span class="params">(self, item)</span>:</span></span><br><span class="line">        cont = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> cont &lt;= item:</span><br><span class="line">            cont += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> cont &gt;= <span class="number">5</span>:</span><br><span class="line">                <span class="keyword">raise</span> StopIteration()</span><br><span class="line">        <span class="keyword">return</span> cont</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a_getitem = GetitemObjc()</span><br><span class="line"><span class="keyword">assert</span> isinstance(a_getitem, abc.Iterable)  <span class="comment"># exception</span></span><br></pre></td></tr></table></figure></div><pre><code>---------------------------------------------------------------------------AssertionError                            Traceback (most recent call last)&lt;ipython-input-4-52f2bca5d0ef&gt; in &lt;module&gt;()     10      11 a_getitem = GetitemObjc()---&gt; 12 assert isinstance(a_getitem, abc.Iterable)  # exceptionAssertionError: </code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Getitem_instance &#x3D;  GetitemObjc()</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> Getitem_instance:</span><br><span class="line">    print(i)</span><br></pre></td></tr></table></figure></div><pre><code>1234</code></pre><h2 id="‘for’-syntax"><a href="#‘for’-syntax" class="headerlink" title="‘for’ syntax"></a>‘for’ syntax</h2><p>Here is how <strong>for</strong> syntax works.<br><br><strong>for</strong> syntax is able to call <strong>iter()</strong> method for an iterable object, which transfers the iterable to a generator, and then call <strong>next(generator_object)</strong> until the <strong>StopIteration()</strong> exception is raised.<br></p><h2 id="‘any’-syntax"><a href="#‘any’-syntax" class="headerlink" title="‘any’ syntax"></a>‘any’ syntax</h2><p><strong>any</strong> syntax checks if the iterable is not empty.</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">any(Iterable_instance)</span><br></pre></td></tr></table></figure></div><pre><code>True</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">any(Getitem_instance)</span><br></pre></td></tr></table></figure></div><pre><code>True</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">EmptyIterableObjc</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__iter__</span><span class="params">(self)</span>:</span></span><br><span class="line">        cont = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> cont &lt; <span class="number">0</span>:</span><br><span class="line">            cont += <span class="number">1</span></span><br><span class="line">            <span class="keyword">yield</span> cont</span><br><span class="line"></span><br><span class="line">empty_iterable = EmptyIterableObjc()</span><br><span class="line"><span class="keyword">assert</span> isinstance(empty_iterable, abc.Iterable)  <span class="comment"># no exception</span></span><br></pre></td></tr></table></figure></div><p>This iterable is not able to provide any iteration element, therefore any returns False.</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">any(empty_iterable)</span><br></pre></td></tr></table></figure></div><pre><code>False</code></pre><h2 id="‘list’-syntax"><a href="#‘list’-syntax" class="headerlink" title="‘list’ syntax"></a>‘list’ syntax</h2><p>list syntax is able to iterate through the iterable object, and add all the elements into a list.</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">list(Iterable_instance)</span><br></pre></td></tr></table></figure></div><pre><code>[1, 2, 3]</code></pre><h1 id="Iterator"><a href="#Iterator" class="headerlink" title="Iterator"></a>Iterator</h1><ul><li>Iterable is an object with _<em>iter_</em> method</li><li>Iterator is an object with both _<em>iter_<em> and __next\</em></em> methods</li></ul><p>A class with both <strong>iter</strong> and <strong>next</strong> methods is a iterator object. <strong>for</strong> or <strong>next()</strong> are able to be called for an iterator.</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IteratorObjc</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.cont = <span class="number">0</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__iter__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">while</span> self.cont &lt; <span class="number">3</span>:</span><br><span class="line">            self.cont += <span class="number">1</span></span><br><span class="line">            <span class="keyword">yield</span> self.cont</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__next__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">while</span> self.cont &lt; <span class="number">3</span>:</span><br><span class="line">            self.cont += <span class="number">1</span></span><br><span class="line">            <span class="keyword">return</span> self.cont</span><br><span class="line">        <span class="keyword">raise</span> StopIteration()</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">self_defined_generator = IteratorObjc()</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> self_defined_generator:</span><br><span class="line">    print(i)</span><br></pre></td></tr></table></figure></div><pre><code>123</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">self_defined_generator = IteratorObjc()</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">print(next(self_defined_generator))</span><br><span class="line">print(next(self_defined_generator))</span><br><span class="line">print(next(self_defined_generator))</span><br><span class="line">print(next(self_defined_generator)) <span class="comment">#raise stop iteration</span></span><br></pre></td></tr></table></figure></div><pre><code>123---------------------------------------------------------------------------StopIteration                             Traceback (most recent call last)&lt;ipython-input-59-042c29e8c989&gt; in &lt;module&gt;()      2 print(next(self_defined_generator))      3 print(next(self_defined_generator))----&gt; 4 print(next(self_defined_generator)) #raise stop iteration&lt;ipython-input-55-75f8519e3c93&gt; in __next__(self)     11             self.cont += 1     12             return self.cont---&gt; 13         raise StopIteration()     14 StopIteration: </code></pre><h2 id="manual-implementation-of-next"><a href="#manual-implementation-of-next" class="headerlink" title="manual implementation of  next"></a>manual implementation of  <em>next</em></h2><p>An inheritant class from a iterable class, which implements <strong><strong>next</strong></strong> method will become an iterator.<br><br>e.g: <strong>str</strong> is an iterable object but not an iterator. Here is a inheritant class from <strong>str</strong> class which implements <strong><strong>next</strong></strong> method.</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">normal_string = <span class="string">'abcde'</span></span><br><span class="line">next(normal_string)</span><br></pre></td></tr></table></figure></div><pre><code>---------------------------------------------------------------------------TypeError                                 Traceback (most recent call last)&lt;ipython-input-60-7a029a4ee3bb&gt; in &lt;module&gt;()      1 normal_string = &#39;abcde&#39;----&gt; 2 next(normal_string)TypeError: &#39;str&#39; object is not an iterator</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IteratorStr</span><span class="params">(str)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, string)</span>:</span></span><br><span class="line">        super().__init__()</span><br><span class="line">        self._count = <span class="number">0</span></span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__iter__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self._count = <span class="number">0</span></span><br><span class="line">        <span class="keyword">return</span> self</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__next__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">while</span> self._count &lt; len(self):</span><br><span class="line">            self._count += <span class="number">1</span></span><br><span class="line">            <span class="keyword">return</span> self.__getitem__(self._count - <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">raise</span> StopIteration()</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iterator_string = IteratorStr(<span class="string">'abcde'</span>)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">print(next(iterator_string))</span><br><span class="line">print(next(iterator_string))</span><br><span class="line">print(next(iterator_string))</span><br><span class="line">print(next(iterator_string))</span><br><span class="line">print(next(iterator_string))</span><br><span class="line">print(next(iterator_string)) <span class="comment"># raise StopIteration() exception</span></span><br></pre></td></tr></table></figure></div><pre><code>abcde---------------------------------------------------------------------------StopIteration                             Traceback (most recent call last)&lt;ipython-input-83-2fbad4156275&gt; in &lt;module&gt;()      4 print(next(iterator_string))      5 print(next(iterator_string))----&gt; 6 print(next(iterator_string)) # raise StopIteration() exception&lt;ipython-input-75-a498191acf75&gt; in __next__(self)     12             self._count += 1     13             return self.__getitem__(self._count - 1)---&gt; 14         raise StopIteration()StopIteration: </code></pre><p>Of course the <strong>for</strong> syntax is able to be used for an iterator</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">iterator_string = IteratorStr(<span class="string">'abcde'</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> iterator_string:</span><br><span class="line">    print(i)</span><br></pre></td></tr></table></figure></div><pre><code>abcde</code></pre><h2 id="auto-implementation-of-next-by-iter"><a href="#auto-implementation-of-next-by-iter" class="headerlink" title="auto implementation of  next by iter()"></a>auto implementation of  <em>next</em> by iter()</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">normal_string = <span class="string">'abcde'</span></span><br><span class="line">iterator_string = iter(normal_string)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">print(next(iterator_string))</span><br><span class="line">print(next(iterator_string))</span><br><span class="line">print(next(iterator_string))</span><br><span class="line">print(next(iterator_string))</span><br><span class="line">print(next(iterator_string))</span><br><span class="line">print(next(iterator_string)) <span class="comment"># raise StopIteration() exception</span></span><br></pre></td></tr></table></figure></div><pre><code>abcde---------------------------------------------------------------------------StopIteration                             Traceback (most recent call last)&lt;ipython-input-87-2fbad4156275&gt; in &lt;module&gt;()      4 print(next(iterator_string))      5 print(next(iterator_string))----&gt; 6 print(next(iterator_string)) # raise StopIteration() exceptionStopIteration: </code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">iterator_string = IteratorStr(<span class="string">'abcde'</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> iterator_string:</span><br><span class="line">    print(i)</span><br></pre></td></tr></table></figure></div><pre><code>abcde</code></pre><h1 id="Generator"><a href="#Generator" class="headerlink" title="Generator"></a>Generator</h1><p>function with ‘yield’ syntax is called a generator function.</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">generator_function</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">3</span>):</span><br><span class="line">        <span class="keyword">yield</span> i</span><br></pre></td></tr></table></figure></div><p>A generator function has to be ‘instantiated’. The syntax looks like the instance of the generator function. But actually it is creating a generator from the generator function yield statement.</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gen = generator_function()</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">type(gen)</span><br></pre></td></tr></table></figure></div><pre><code>generator</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> gen:</span><br><span class="line">    print(i)</span><br></pre></td></tr></table></figure></div><pre><code>012</code></pre><p>A generator will automatically have the  <strong>_<em>next_</em></strong> method implemented</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gen = generator_function()</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">print(next(gen))</span><br><span class="line">print(next(gen))</span><br><span class="line">print(next(gen))</span><br><span class="line">print(next(gen)) <span class="comment"># StopIteration() exception raised</span></span><br></pre></td></tr></table></figure></div><pre><code>012---------------------------------------------------------------------------StopIteration                             Traceback (most recent call last)&lt;ipython-input-16-648ef4ded63a&gt; in &lt;module&gt;()      2 print(next(gen))      3 print(next(gen))----&gt; 4 print(next(gen)) # StopIteration() exception raisedStopIteration: </code></pre><h1 id="Advance-material"><a href="#Advance-material" class="headerlink" title="Advance material"></a>Advance material</h1><p><a href="https://blog.csdn.net/dawningblue/article/details/72629362" target="_blank" rel="external nofollow noopener noreferrer">Python中iteration(迭代)、iterator(迭代器)、generator(生成器)等相关概念的理解</a></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
          <category> basics </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> iterator </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>酒店营销的互联网模式思索</title>
      <link href="/2018/12/12/random_notes/internet_thinking_for_hotel_marketing/"/>
      <url>/2018/12/12/random_notes/internet_thinking_for_hotel_marketing/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>近来和一位做互联网营销的朋友聊天，忽然间发现到当今的中国互联网营销，已经到了无所不用其极的程度。<br>上到支付宝的花呗宣传， 下到手机点餐app，返现app, 无时无刻不惊讶于身边五花八门的营销模式。<br>互联网经济的有效性， 扩散性与精准性已然已经今非昔比， 说是领先全球那是绝不夸张。</p><p>回望传统营销行业比如酒店行业，互联网概念的覆盖面似乎还是微乎其微。<br>传统营销由于各大酒店的同质性带来的竞争，让我们似乎不能脱颖而出。<br>我认为最大两个的问题在于：</p><ul><li>营销的同质<br>如何区别于其他酒店？</li><li>营销的有限客户群体<br>如何把营销做给特定群体？</li></ul><p>互联网模式的尝试将会给这两个最大的问题带来无限可能。<br>关于互联网模式的尝试， 相比于实际资本和现金流的投入， 我觉得在风险和消耗上是非常低的， 非常值得尝试。<br>不同模式的尝试也会给营销带来不同的新鲜血液。</p><p><strong>重要： 这篇文章是我的对于酒店营销的纸上谈兵， 很多想法可能不切实际， 希望有可能能起到一点点抛转引玉的作用。 俗话说术业有专攻， 隔行如隔山。 身在工程师和数据分析行业，我也深知自己与营销行业相隔甚远。 这篇随笔里不合理以及不专业之处，还望多多包涵。不恰当的脑补请忽略！</strong></p><h1 id="奖励机制"><a href="#奖励机制" class="headerlink" title="奖励机制"></a>奖励机制</h1><p>我想先谈谈自己总结的奖励机制。<br>个人感觉这是最具吸引力也较为实惠的营销手段。<br>我能想到的奖励机制都列举如下。每一种模式都有其优劣，我也给出自己的一些感受和评价。</p><ul><li>打折。 高定价， 高折扣。<br><strong>模式较为传统， 吸引力不足</strong></li><li>免费发放的优惠券<br><strong>模式较为传统， 吸引力不足</strong></li><li>买多送一<br><strong>在某些商品营销中有刺激作用</strong></li><li>每次消费达标即可返现。 一定数额的消费给与固定数额或百分比的返现。 例如： 100 返 15， 200 返 40。<br><strong>模式较为传统， 对于大批商品售卖有一定刺激</strong></li><li>第一次消费高返现。 比如第一次吃饭， 返50%<br><strong>对于第一次消费的刺激有吸引力</strong></li><li>会员模式，加入会员即可长期享受折扣， 或定期发放的福利和高折扣。<br><strong>对于特定行业，如果福利得当，对于保持某些营销的长期客户有积极作用</strong></li><li>一定时间内（或不限时）再消费即返现的优惠券。<br><strong>在特定营销的二次消费刺激上感觉有吸引力</strong></li><li>推荐模式。 推荐他人消费，每次推荐返还指定金额。或者帮助酒店宣传， 获得额外奖励！<br><strong><font color="green">重点推荐！如今仍然吸引力较高， 属于消费外额外奖励。 比如花呗的推荐奖励机制</font></strong></li><li>随机返现。 每次消费即可抽奖， 随机返现0% - 100%<br><strong><font color="green">重点推荐！同样的返现金额， 平均每人返现固定数额的方式与抽奖模式相比吸引力相差甚远</font></strong></li></ul><p>我深知一些模式已经被我们应用， 比如在连锁酒店的二次消费返现。<br>我想重点谈谈最后两项。 这里先说 <strong>每次消费即可抽奖， 随机返现0% - 100%</strong></p><h2 id="随机返现"><a href="#随机返现" class="headerlink" title="随机返现"></a>随机返现</h2><h3 id="什么是随机返现"><a href="#什么是随机返现" class="headerlink" title="什么是随机返现"></a>什么是随机返现</h3><p>这个想法来自于朋友在做的互联网平台：<br><a href="http://www.1toad.com/" target="_blank" rel="external nofollow noopener noreferrer">一指蟾官方网站</a><br>他们主要的营销模式在于， 建立一个手机商家平台， 吸引各地商家入驻。<br>在app中的指定商家消费， 每次即可获得0% - 100% 的返现。<br>实际返现几率和金额由商家决定。<br>不同于传统返现品台 例如 <a href="https://www.topcashback.cn/" target="_blank" rel="external nofollow noopener noreferrer">topcashback</a>, 一指蟾中的商家是基于本地的。<br>比如某特定一家肯德基加盟了这个平台， 用户并不是在所有肯德基都可以返现， 而是要去特定地点的肯德基才可以返现。<br>也就是说客户群体是针对于某一特定区域的人。<br>与传统的返现app相比， 这个概念被他们称为<strong>精准营销</strong>。</p><p>对于消费者而言， 相比于传统的每次10%或15%的反现，可能的（但是低概率的）0% -100% 返现会带来非常大的消费欲望刺激。<br>试想每次入住， 都有几率可以免除房费（虽然大多数人都不会）， 这对于消费者而言是额外的奖励刺激。<br>具体的奖励数值分配属于数学计算的范畴不做讨论。<br>对于季节的奖励控制这里也不做讨论。<br>据了解 目前加盟的商家都取得了非常的收益。 某些加盟前没有客户的餐饮商家甚至现在能够满座。</p><h3 id="如何推广随机返现"><a href="#如何推广随机返现" class="headerlink" title="如何推广随机返现"></a>如何推广随机返现</h3><p>和我爸的交流中， 我深知如此模式推广的难度和障碍。现在我能想到的推广途径也是已有的途径：</p><ul><li>微信公众号以及的推广中插入推广</li><li>携程的酒店描述或图片中加入（未知是否允许？）</li><li>酒店的网站和app中加入推广</li><li>入住客户对于此模式的推荐</li></ul><p>我的想法是，在非旺季可适当提高返现抽奖（或其他物资奖励）的概率和数额。<br>对于如何刺激入住客户对于此模式的推荐， 我想在下面的推荐章节详解。</p><h2 id="推荐奖励"><a href="#推荐奖励" class="headerlink" title="推荐奖励"></a>推荐奖励</h2><h3 id="什么是推荐奖励"><a href="#什么是推荐奖励" class="headerlink" title="什么是推荐奖励"></a>什么是推荐奖励</h3><p><a href="http://www.1toad.com/" target="_blank" rel="external nofollow noopener noreferrer">一指蟾官方网站</a><br>对于这个平台的另一大特点， 其实也是互联网行业的一大手段即是推荐手段。<br>推荐奖励字面意思即是老用户推荐新用户，或者用户帮助推广商家，获得奖励的模式。<br>最近的例子比如花呗的推荐，上不封顶的推荐模式，是消费者额外的奖励。<br>这也是利用了社交网络的传播原理。</p><h3 id="1对1的推荐奖励"><a href="#1对1的推荐奖励" class="headerlink" title="1对1的推荐奖励"></a>1对1的推荐奖励</h3><p>我相信可能我们酒店对分销和推荐已有一些应用。<br>我能想到的新点子是：<br><strong>对于随机返现，让已入住客户获得其推荐客户所获得的 ‘随机返现’的一部分。</strong><br>这种刺激模式可以使用户推荐也有了‘抽奖’的概念。<br>我还是认为‘抽奖’ 的吸引力是无限的！能抽奖就抽奖 而不是平均分！<br>具体的数字分配亦是数学问题， 总支出不一定高于固定奖励。</p><p>注意1对1推荐的唯一性， 保证了资金链可行性， 和与传销的区别。<br>如果1对1推荐运用得当， 有可能会成为‘随机返现’ 和酒店本身最大的传播模式之一。</p><h3 id="1对多的推荐奖励"><a href="#1对多的推荐奖励" class="headerlink" title="1对多的推荐奖励"></a>1对多的推荐奖励</h3><p>我一直感觉我们酒店的宣传非常有限。 我也看到了大家朋友圈的转发非常的频繁，我认为这其中最大的问题在于<strong>阅读用户群体及总数量</strong><br>我也见证了圣地映像公众号的发展，感觉大家朋友圈孜孜不倦的分享， 然而阅读人数还是非常有限， 以及对于新游客的普及面非常的低。<br>1对多推荐模式也许是对此有可能的一个提升方式。 利用客户本身进行信息扩散。<br>我能想到奖励式1对多推荐的目前有：</p><ul><li>用户游记中加入‘圣地映像’给与特定奖励（抽奖？）</li><li>分享公众号的奖励机制</li><li>分享公众号文章朋友圈即可获得特定奖励或折扣</li><li>分享圣地映像app或者网站， 或者游记的奖励。</li></ul><p>更多模式有待挖掘， 感觉利用客户进行奖励式分销非常有待于挖掘！</p><h1 id="酒店的风格基调和角色化"><a href="#酒店的风格基调和角色化" class="headerlink" title="酒店的风格基调和角色化"></a>酒店的风格基调和角色化</h1><p>我认为就酒店风格塑造而言， 装修上是非常成功的。<br>但是我看了很多其他的酒店， 目前看来大多数酒店也有在装修里做出‘主题’的感觉。<br>比如</p><ul><li><a href="http://hotels.ctrip.com/hotel/6048406.html?isFull=F&amp;checkIn=2018-12-14&amp;checkOut=2018-12-15#ctm_ref=hod_sr_lst_dl_n_1_12" target="_blank" rel="external nofollow noopener noreferrer">稻城阿妈摄影主题酒店</a><br>主题摄影</li><li><a href="http://hotels.ctrip.com/hotel/18517172.html?isFull=F&amp;checkIn=2018-12-14&amp;checkOut=2018-12-15#ctm_ref=hod_sr_lst_dl_n_1_7" target="_blank" rel="external nofollow noopener noreferrer">稻城亲爱的宅宅温泉民宿</a><br>主题温泉</li></ul><p>我们也叫主题客栈/酒店， 我们为什么叫圣地映像？ 映像在哪里？<br>如何对酒店风格基调进行特质化， 以及加深客户印象？<br>每个酒店能不能把‘圣地映像’的概念铺开？</p><p>我能想到的可能方案包括：</p><ul><li><p>故事化，场景化营销<br>我们的圣地映像是<strong>精品主题</strong>酒店<br>说起来有点土， 但是能不能把每个酒店刻画成一个角色，编一个故事？<br>故事是一种沟通方式，也是品牌和产品人格化的象征，没有故事，不成品牌。写出一个好故事，真正地连接消费者内心深处属于人性本质的情感板块，这或许是营销意义上的一种回归。<br>同时，角色感可以增强品牌形象的活力和有好感。<br>可以为每个客户给与免费的酒店角色故事背景手册， 进行‘洗脑’。<br>这个想法来源于目前最火的游戏： <a href="https://www.baidu.com/link?url=lupK1aiMWHZ74xOpTYodBTGpW35wVbT9iSvXnGwtqA4Jf16nxNukDYo-Ztqs1KBjxLGoFKGC0IYiHh0jTSRxyq&amp;wd=&amp;eqid=f282ddb900026b2a000000045c109a1d" target="_blank" rel="external nofollow noopener noreferrer">英雄联盟角色背景故事</a><br>设计师在对游戏中每个角色特点能力分化的同时， 投入精力进行了故事性的设计， 极大的加深了玩家对于每个角色的感情。<br>其实我在这个游戏买什么角色都是看哪个故事写得好。</p></li><li><p>基于酒店的角色形象设计<br>在对每个酒店进行角色化和故事化之后， 可以对每个酒店进行角色形象设计，并可以加入酒店图片中。（比如每幅图片的水印， 或者角标）。这样可以加强对于酒店角色化的强调。<br>进而可以设计每层楼的故事， 每个房间的故事（当然时间和设计成本得考虑， 我就随便说说 -。- ）<br>形象和图标设计对于去同质化应该是一个比较可行的选择。<br><strong>在公众号普及中可以以虚拟酒店角色的口吻进行， 会产生一定的亲切感。</strong><br><strong>公众号的头像可采用角色化</strong><br>客户会感觉在读的过程中是在与某一个特定人物或角色进行交流。<br>参考公众号： 狂言doggy</p></li><li><p>增加每个酒店主题的音乐选择， 突出主题特化</p></li><li><p>加强携程主页的图片非同质化， 突出‘主题‘。（我自己yy的， 可能不得行。。感觉是不是携程有规定？）<br>下面对比携程主页第一的雪域温泉酒店， 我们的主页感觉没有特别突出的 ‘主题’ 优势？<br>也许在酒店角色化和故事化之后可以吧元素加入图片中，不失为一个好选择<br><a href="http://i68.tinypic.com/jj4unt.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="http://i68.tinypic.com/jj4unt.jpg" class="lazyload" title></a></p></li></ul><p><a href="http://i68.tinypic.com/j5ebk2.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="http://i68.tinypic.com/j5ebk2.jpg" class="lazyload" title></a></p><h1 id="软广模式"><a href="#软广模式" class="headerlink" title="软广模式"></a>软广模式</h1><p>以下软广模式内容纯属脑补。。。我知道这个领域说比做容易，不当的地方请多多包涵。</p><h2 id="广告-vs-非广告"><a href="#广告-vs-非广告" class="headerlink" title="广告 vs 非广告"></a>广告 vs 非广告</h2><p>我认为目前公众号整体形象很像广告， 实质内容不够。<br>公众号内容偏向于侧重于重复地，大方面介绍丹巴，稻城， 四姑娘山。<br>如果可能的化， 推荐跳出定向宣传酒店的思维， 做成<strong>川西旅游攻略的公众号</strong>。<br>我认为公众号的目的不应该在于， 吸引未知客户前往丹巴，稻城， 四姑娘山， 从而入住我们的酒店。<br>这么做的问题在于： 老用户知道这是广告， 不会点进去看。会产生， 我去过了， 我不想看！ 或者我不想去这三个地方， 天天都是他们， 不想点进去！<br>新用户也许不想去丹巴，稻城， 四姑娘山。 他们会问： 为什么要给我介绍这三个地方？ 我不想点击这个公众号！<br>也许建立品牌形象，以及<strong>足够多地吸引潜在客户</strong>为标准<br>也就是说如果做成川西旅游攻略，也许潜在客户短期内不会前往丹巴，稻城， 四姑娘山， 但是公众号会聚集大批量的潜在客户。 只要‘圣地映像’的品牌形象足够深入人心， <strong>客户真的要来丹巴，稻城， 四姑娘山的时候， 在搜索我们几个旅游地点的酒店时， 会很自然地选我们</strong>。</p><h2 id="整体基调"><a href="#整体基调" class="headerlink" title="整体基调"></a>整体基调</h2><p>整体形象基调不统一。 在逗比和高雅之间没有把握好品牌形象。我看了很多公众号文章，貌似这是一个普遍问题。 比如下面的图片， 文字和图片不太搭。<br><a href="http://i64.tinypic.com/2e5tipy.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="http://i64.tinypic.com/2e5tipy.jpg" class="lazyload" title></a><br>推荐做成要么风格偏逗比， 要么偏高雅的形式， 更容易塑造一个整体形象。</p><h2 id="文章形式"><a href="#文章形式" class="headerlink" title="文章形式"></a>文章形式</h2><p>如果真做成旅游公众号， 文章的可能模式可以改为以下的模式中的一个， 则更具特色！</p><ul><li>以介绍景点和路线为目标， 覆盖所有川西景点。公众号形象为旅游攻略普及。</li><li>凭借我爸我妈还有大家各位的旅游经历， 以游记形式把公众号做成旅游见闻和各地游记， 吸引潜在客户。公众号形象为旅者。</li></ul><h2 id="平台覆盖面"><a href="#平台覆盖面" class="headerlink" title="平台覆盖面"></a>平台覆盖面</h2><p>我们的品牌文章数量不少， 但是平台覆盖面不够。<br>客户在每天看各个平台的时候会思考， 我为什么要阅读这个内容？ 怎么判断这个不是广告？<br>如今铺天盖地的平台文章，除了特别特色的外，非常容易被用户一扫而过。<br>精力有限情况下， 可以一定程度上减少文章数量， 做成考虑覆盖更多平台的<strong>旅游攻略</strong>形式。<br>利用我爸在多处旅游的优势， 建立完备的川西旅游攻略库， 以及当地名族特色宣传。<br>如果“圣地映像”能够深入人心， 就可以做到以面盖点， 自然而然地吸引更多潜在客户。<br>为此可能需要更多的平台， 比如 知乎， 豆瓣， 天涯。 可以复制粘贴， 但是精品可以以一代10</p><h1 id="二次消费"><a href="#二次消费" class="headerlink" title="二次消费"></a>二次消费</h1><p>我知道客栈也有二次消费的概念。如何刺激消费， 我也没有太多的想法。 目前想的是， 在二次消费中也加入 <strong>随即返现</strong>， <strong>推荐奖励</strong> 和 <strong>故事化</strong> 的 概念， 从互联网模式刺激消费。 微商也许可以加入计划之中，对于微商我不熟悉， 就不纸上谈兵了。<br>总之核心一定还是去同质化， 以及足够的消费刺激。</p><p>就写到这里，还有其他想法的化，之后再增加随笔。</p>]]></content>
      
      
      <categories>
          
          <category> random_notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hotel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>stock introduction</title>
      <link href="/2018/12/10/finance/basics/stock/stock_introduction/"/>
      <url>/2018/12/10/finance/basics/stock/stock_introduction/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="股票的性质"><a href="#股票的性质" class="headerlink" title="股票的性质"></a>股票的性质</h1><ul><li>有价证券</li><li>要式证券 （必须具备所有条件）</li><li>证权证券 （就是说不是创造权利而是证明而已）</li><li>资本证券 （公司资本份额的证券化）</li><li>综合权利证券 （既不是物权证券: 直接财产支配权，也不是债权证券：公司对立的债权人）</li></ul><h1 id="股票的特征"><a href="#股票的特征" class="headerlink" title="股票的特征"></a>股票的特征</h1><ul><li>收益性</li><li>风险性</li><li>流动性</li><li>永久性</li><li>参与性</li></ul><h1 id="股票的分类"><a href="#股票的分类" class="headerlink" title="股票的分类"></a>股票的分类</h1><h2 id="按股东权利"><a href="#按股东权利" class="headerlink" title="按股东权利"></a>按股东权利</h2><ul><li>普通股票<ul><li>蓝筹股</li><li>成长股</li><li>收入股</li><li>周期股</li><li>防守股</li><li>概念股</li><li>投机股</li></ul></li><li>优先股票</li></ul><p>注： 公司盈利和剩余财产分配顺序： 债权人, 优先股票，普通股票</p><h2 id="按股东姓名"><a href="#按股东姓名" class="headerlink" title="按股东姓名"></a>按股东姓名</h2><ul><li>记名股票</li><li>不记名股票</li></ul><p>注： 现在还有记名的？？</p><h2 id="按面额"><a href="#按面额" class="headerlink" title="按面额"></a>按面额</h2><ul><li>有面额股票 （按数值）</li><li>无面额股票 (按比例)</li></ul><p>注： 好像大多数都是无面额</p><h1 id="股利政策，股份变动，股票资本管理"><a href="#股利政策，股份变动，股票资本管理" class="headerlink" title="股利政策，股份变动，股票资本管理"></a>股利政策，股份变动，股票资本管理</h1><h2 id="股利政策"><a href="#股利政策" class="headerlink" title="股利政策"></a>股利政策</h2><ul><li>派现（分红， 直接送钱）</li><li>送股（每个人股数增加）</li><li><p>资本公积金转增股本 （每个人每股钱变多）</p></li><li><p>重要日期</p><ul><li>股利宣布日（公布分红派息）</li><li>股权登记日（统计股利分配的股东的日期）</li><li>除息除权日 （股权登记日后面一天，这天以后买的股票就没得这期股利了）</li><li>派发日 （股利发放的日期）</li></ul></li></ul><h2 id="股份变动"><a href="#股份变动" class="headerlink" title="股份变动"></a>股份变动</h2><ul><li>股票分割（拆细，拆股； 并股， 缩股， 不改变股东权益比重， 但是股价变化会刺激交易。 a 股不准）</li><li>增发（发行新股， 增加股票的发行量，更多的融资，“圈”更多的钱。 定向增发指向指定特定机构或个人增发。 ）</li><li>配股 （面向原有股东增发新股。同样是稀释股本圈钱）</li><li>转增股本 （资本公积金向股东转送股票， 其实是稀释股本， 在不拆股的情况下降低每股价格。）</li></ul><h1 id="普通股股东权利"><a href="#普通股股东权利" class="headerlink" title="普通股股东权利"></a>普通股股东权利</h1><ul><li>公司重大决策参与权</li><li>公司资产收益权和剩余资产分配权</li><li>其他权利（主要是优先认股权）<br>意思就是说增发的时候由于每股价格要变，股东就必须要做出反应免得就要亏。<br>股东有优先权利来做以下决定：<ul><li>优惠价来认购新股。被迫啊。</li><li>权利转让。卖了，老子不玩了。</li><li>不行使权力。 等死。<br>按照股权登记日来划分‘附权股’， ‘含权股’， 和 ‘除权股’</li></ul></li></ul><h1 id="优先股股东权利"><a href="#优先股股东权利" class="headerlink" title="优先股股东权利"></a>优先股股东权利</h1><h2 id="什么是优先股？"><a href="#什么是优先股？" class="headerlink" title="什么是优先股？"></a>什么是优先股？</h2><p>优先股是享有优先权的股票。优先股的股东对公司资产、利润分配等享有优先权，其风险较小。但是优先股股东对公司事务无表决权。 [1]  优先股股东没有选举及被选举权，一般来说对公司的经营没有参与权，优先股股东不能退股，只能通过优先股的赎回条款被公司赎回，但是能稳定分红的股份。所得无解释的股份。他的特点包括：</p><ul><li>股息率固定</li><li>股息分派优先</li><li>剩余资产分配优先</li><li>一般无表决权</li></ul><h2 id="类似优先股的债券"><a href="#类似优先股的债券" class="headerlink" title="类似优先股的债券"></a>类似优先股的债券</h2><ul><li>可转债（但是细节不一样）</li><li>永续债券 （破产清算， 股息不一样）</li></ul><h2 id="优先股分类"><a href="#优先股分类" class="headerlink" title="优先股分类"></a>优先股分类</h2><ul><li>累积优先股 （欠钱要补发）</li><li>非累积优先股 （每年结算， 公司钱不够就赖了）</li><li>参与优先股 （股息拿了还能分剩余盈利）</li><li>非参与优先股 （股息拿了不能分剩余盈利）</li><li>可转换优先股 （可转普通股或者其他品种）</li><li>不可转换优先股 （不能转）</li><li>可赎回优先股</li><li>不可赎回优先股</li><li>股息可调整优先股</li><li>股息固定优先股</li><li>强制分红优先股</li><li>非强制分红优先股</li></ul><h1 id="中国股票主体"><a href="#中国股票主体" class="headerlink" title="中国股票主体"></a>中国股票主体</h1><ul><li>国家股</li><li>法人股</li><li>社会公众股</li><li>外资股<ul><li>境内上市外资股 （外资来投资的，b股）</li><li>境外上市外资股（境内公司境外募集资金，境外上市。 ）<ul><li>h股 港股外资股</li><li>n股 纽约外资股</li><li>l股 伦敦外资股</li><li>s股 新加坡外资股</li></ul></li></ul></li></ul><p><strong>注：红筹股不是外资股。 红筹股注册地在境外，上市在香港。 外资股注册地在国内！</strong></p>]]></content>
      
      
      <categories>
          
          <category> finance </category>
          
          <category> basics </category>
          
          <category> stock </category>
          
      </categories>
      
      
        <tags>
            
            <tag> finance </tag>
            
            <tag> stock </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>boxeh basics</title>
      <link href="/2018/12/07/python/basics/bokeh_basics/"/>
      <url>/2018/12/07/python/basics/bokeh_basics/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="Example-of-a-simple-line-plot"><a href="#Example-of-a-simple-line-plot" class="headerlink" title="Example of a simple line plot"></a>Example of a simple line plot</h1><p><a href="http://bokeh.pydata.org/en/0.10.0/docs/reference/models/tools.html" target="_blank" rel="external nofollow noopener noreferrer">http://bokeh.pydata.org/en/0.10.0/docs/reference/models/tools.html</a></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> bokeh.plotting <span class="keyword">import</span> figure, show, output_file</span><br><span class="line"><span class="keyword">from</span> bokeh.io <span class="keyword">import</span> output_notebook</span><br><span class="line">output_notebook()</span><br></pre></td></tr></table></figure></div><pre><code>&lt;div class=&quot;bk-root&quot;&gt;    &lt;a href=&quot;https://bokeh.pydata.org&quot; target=&quot;_blank&quot; class=&quot;bk-logo bk-logo-small bk-logo-notebook&quot;&gt;&lt;/a&gt;    &lt;span id=&quot;4443&quot;&gt;Loading BokehJS ...&lt;/span&gt;&lt;/div&gt;</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># prepare some data</span></span><br><span class="line">x = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line">y = [<span class="number">6</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># output to static HTML file</span></span><br><span class="line">output_file(<span class="string">"lines.html"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">TOOLS = <span class="string">"hover, crosshair,pan,wheel_zoom,box_zoom,reset,save,box_select,lasso_select"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># create a new plot with a title and axis labels</span></span><br><span class="line">p = figure(title=<span class="string">"simple line example"</span>, x_axis_label=<span class="string">'x'</span>, y_axis_label=<span class="string">'y'</span>, tools=TOOLS)</span><br><span class="line"></span><br><span class="line"><span class="comment"># add a line renderer with legend and line thickness</span></span><br><span class="line">p.line(x, y, legend=<span class="string">"Temp."</span>, line_width=<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">hover = p.select(dict(type=HoverTool))</span><br><span class="line">hover.tooltips = [</span><br><span class="line">    (<span class="string">"index"</span>, <span class="string">"$index"</span>),</span><br><span class="line">    (<span class="string">"(x,y)"</span>, <span class="string">"($x, $y)"</span>),</span><br><span class="line">]</span><br><span class="line">hover.mode = <span class="string">'vline'</span></span><br><span class="line"><span class="comment"># show the results</span></span><br><span class="line">show(p)</span><br></pre></td></tr></table></figure></div>  <div class="bk-root" id="39c34aad-1492-4abe-b725-d88cbff6e88e"></div><h1 id="Example-of-customizing"><a href="#Example-of-customizing" class="headerlink" title="Example of customizing"></a>Example of customizing</h1><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> bokeh.plotting <span class="keyword">import</span> figure, output_file, show</span><br><span class="line"></span><br><span class="line"><span class="comment"># prepare some data</span></span><br><span class="line">x = [<span class="number">0.1</span>, <span class="number">0.5</span>, <span class="number">1.0</span>, <span class="number">1.5</span>, <span class="number">2.0</span>, <span class="number">2.5</span>, <span class="number">3.0</span>]</span><br><span class="line">y0 = [i**<span class="number">2</span> <span class="keyword">for</span> i <span class="keyword">in</span> x]</span><br><span class="line">y1 = [<span class="number">10</span>**i <span class="keyword">for</span> i <span class="keyword">in</span> x]</span><br><span class="line">y2 = [<span class="number">10</span>**(i**<span class="number">2</span>) <span class="keyword">for</span> i <span class="keyword">in</span> x]</span><br><span class="line"></span><br><span class="line"><span class="comment"># output to static HTML file</span></span><br><span class="line">output_file(<span class="string">"log_lines.html"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># create a new plot</span></span><br><span class="line">p = figure(</span><br><span class="line">   tools=<span class="string">"pan,box_zoom,reset,save"</span>,</span><br><span class="line">   y_axis_type=<span class="string">"log"</span>, y_range=[<span class="number">0.001</span>, <span class="number">10</span>**<span class="number">11</span>], title=<span class="string">"log axis example"</span>,</span><br><span class="line">    <span class="comment">#y_axis_type='sections', y_range=[0.001, 10**11], title="log axis example",</span></span><br><span class="line">   x_axis_label=<span class="string">'sections'</span>, y_axis_label=<span class="string">'particles'</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># add some renderers</span></span><br><span class="line">p.line(x, x, legend=<span class="string">"y=x"</span>)</span><br><span class="line">p.circle(x, x, legend=<span class="string">"y=x"</span>, fill_color=<span class="string">"white"</span>, size=<span class="number">8</span>)</span><br><span class="line">p.line(x, y0, legend=<span class="string">"y=x^2"</span>, line_width=<span class="number">3</span>)</span><br><span class="line">p.line(x, y1, legend=<span class="string">"y=10^x"</span>, line_color=<span class="string">"red"</span>)</span><br><span class="line">p.circle(x, y1, legend=<span class="string">"y=10^x"</span>, fill_color=<span class="string">"red"</span>, line_color=<span class="string">"red"</span>, size=<span class="number">6</span>)</span><br><span class="line">p.line(x, y2, legend=<span class="string">"y=10^x^2"</span>, line_color=<span class="string">"orange"</span>, line_dash=<span class="string">"4 4"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># show the results</span></span><br><span class="line">show(p)</span><br></pre></td></tr></table></figure></div>  <div class="bk-root" id="e241f2fa-d661-4bed-98f5-4b71ece2c4d0"></div><h1 id="Plot-multiple-figures-together"><a href="#Plot-multiple-figures-together" class="headerlink" title="Plot multiple figures together"></a>Plot multiple figures together</h1><h3 id="Linked-panning"><a href="#Linked-panning" class="headerlink" title="Linked panning"></a>Linked panning</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> bokeh.layouts <span class="keyword">import</span> gridplot</span><br><span class="line"><span class="keyword">from</span> bokeh.plotting <span class="keyword">import</span> figure, output_file, show</span><br><span class="line"></span><br><span class="line"><span class="comment"># prepare some data</span></span><br><span class="line">N = <span class="number">100</span></span><br><span class="line">x = np.linspace(<span class="number">0</span>, <span class="number">4</span>*np.pi, N)</span><br><span class="line">y0 = np.sin(x)</span><br><span class="line">y1 = np.cos(x)</span><br><span class="line">y2 = np.sin(x) + np.cos(x)</span><br><span class="line"></span><br><span class="line"><span class="comment"># output to static HTML file</span></span><br><span class="line">output_file(<span class="string">"linked_panning.html"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># create a new plot</span></span><br><span class="line">s1 = figure(width=<span class="number">250</span>, plot_height=<span class="number">250</span>, title=<span class="literal">None</span>)</span><br><span class="line">s1.circle(x, y0, size=<span class="number">10</span>, color=<span class="string">"navy"</span>, alpha=<span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># NEW: create a new plot and share both ranges</span></span><br><span class="line">s2 = figure(width=<span class="number">250</span>, height=<span class="number">250</span>, x_range=s1.x_range, y_range=s1.y_range, title=<span class="literal">None</span>)</span><br><span class="line">s2.triangle(x, y1, size=<span class="number">10</span>, color=<span class="string">"firebrick"</span>, alpha=<span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># NEW: create a new plot and share only one range</span></span><br><span class="line">s3 = figure(width=<span class="number">250</span>, height=<span class="number">250</span>, x_range=s1.x_range, title=<span class="literal">None</span>)</span><br><span class="line">s3.square(x, y2, size=<span class="number">10</span>, color=<span class="string">"olive"</span>, alpha=<span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># NEW: put the subplots in a gridplot</span></span><br><span class="line">p = gridplot([[s1, s2, s3]], toolbar_location=<span class="string">'right'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># show the results</span></span><br><span class="line">show(p)</span><br></pre></td></tr></table></figure></div>  <div class="bk-root" id="c722821f-e137-4c3e-a775-9035544e6c11"></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> bokeh.plotting <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> bokeh.models <span class="keyword">import</span> ColumnDataSource</span><br><span class="line"><span class="keyword">from</span> bokeh.models <span class="keyword">import</span> HoverTool</span><br><span class="line"></span><br><span class="line"><span class="comment"># prepare some date</span></span><br><span class="line">N = <span class="number">300</span></span><br><span class="line">x = np.linspace(<span class="number">0</span>, <span class="number">4</span>*np.pi, N)</span><br><span class="line">y0 = np.sin(x)</span><br><span class="line">y1 = np.cos(x)</span><br><span class="line"></span><br><span class="line"><span class="comment"># output to static HTML file</span></span><br><span class="line">output_file(<span class="string">"linked_brushing.html"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># NEW: create a column data source for the plots to share</span></span><br><span class="line">source = ColumnDataSource(data=dict(x=x, y0=y0, y1=y1))</span><br><span class="line"></span><br><span class="line">TOOLS = <span class="string">"hover, crosshair,pan,wheel_zoom,box_zoom,reset,save,box_select,lasso_select"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># create a new plot and add a renderer</span></span><br><span class="line">left = figure(tools=TOOLS, width=<span class="number">350</span>, height=<span class="number">350</span>, title=<span class="literal">None</span>)</span><br><span class="line">left.circle(<span class="string">'x'</span>, <span class="string">'y0'</span>, source=source)</span><br><span class="line"></span><br><span class="line"><span class="comment"># create another new plot and add a renderer</span></span><br><span class="line">right = figure(tools=TOOLS, width=<span class="number">350</span>, height=<span class="number">350</span>, title=<span class="literal">None</span>)</span><br><span class="line">right.circle(<span class="string">'x'</span>, <span class="string">'y1'</span>, source=source)</span><br><span class="line"></span><br><span class="line"><span class="comment"># put the subplots in a gridplot</span></span><br><span class="line">p = gridplot([[left, right]])</span><br><span class="line"></span><br><span class="line"><span class="comment">#hover = p.select(dict(type=HoverTool))</span></span><br><span class="line">hover.tooltips = [</span><br><span class="line">    (<span class="string">"index"</span>, <span class="string">"$index"</span>),</span><br><span class="line">    (<span class="string">"(x,y)"</span>, <span class="string">"($x, $y)"</span>),</span><br><span class="line">    (<span class="string">"radius"</span>, <span class="string">"@radius"</span>),</span><br><span class="line">    (<span class="string">"fill color"</span>, <span class="string">"$color[hex, swatch]:fill_color"</span>),</span><br><span class="line">    (<span class="string">"foo"</span>, <span class="string">"@foo"</span>),</span><br><span class="line">    (<span class="string">"bar"</span>, <span class="string">"@bar"</span>),</span><br><span class="line">]</span><br><span class="line"><span class="comment">#hover.mode = 'mouse'</span></span><br><span class="line"><span class="comment"># show the results</span></span><br><span class="line">show(p)</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
          <category> basics </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> boxeh </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pandas frame creation and insertion</title>
      <link href="/2018/12/04/python/basics/pandas_frame_creation_and_insertion/"/>
      <url>/2018/12/04/python/basics/pandas_frame_creation_and_insertion/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="Pandas-frame-creation"><a href="#Pandas-frame-creation" class="headerlink" title="Pandas frame creation"></a>Pandas frame creation</h1><h2 id="Create-pandas-frame-using-dictionary"><a href="#Create-pandas-frame-using-dictionary" class="headerlink" title="Create pandas frame using dictionary"></a>Create pandas frame using dictionary</h2><h3 id="Using-normal-dictionary-data-structure"><a href="#Using-normal-dictionary-data-structure" class="headerlink" title="Using normal dictionary data structure"></a>Using normal dictionary data structure</h3><p>Note that using the normal dictionary will not be able to ensure the order of columns in pandas frame. <br><br>Example below:</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">from</span> tabulate <span class="keyword">import</span> tabulate</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">markdown_pd</span><span class="params">(df)</span>:</span></span><br><span class="line">    print(tabulate(df, tablefmt=<span class="string">"pipe"</span>, headers=<span class="string">"keys"</span>, showindex=<span class="literal">True</span>))</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">new_dict = &#123;&#125;</span><br><span class="line">new_dict[<span class="string">'foo'</span>] = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>] </span><br><span class="line">new_dict[<span class="string">'bar'</span>] = [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pdframe_normal_dict = pd.DataFrame(new_dict)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">markdown_pd(pdframe_normal_dict)</span><br></pre></td></tr></table></figure></div><div class="table-container"><table><thead><tr><th></th><th>bar</th><th>foo</th></tr></thead><tbody><tr><td>0</td><td>4</td><td>1</td></tr><tr><td>1</td><td>5</td><td>2</td></tr><tr><td>2</td><td>6</td><td>3</td></tr></tbody></table></div><p>As you can see, the pandas frame does not have the order of columns that we want it to be.<br><br>In order to make it the correct order, we have to do:</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pdframe_normal_dict.columns = [<span class="string">'foo'</span>, <span class="string">'bar'</span>]</span><br></pre></td></tr></table></figure></div><p>Because list has an order, now we can get:</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">markdown_pd(pdframe_normal_dict )</span><br></pre></td></tr></table></figure></div><div class="table-container"><table><thead><tr><th></th><th>foo</th><th>bar</th></tr></thead><tbody><tr><td>0</td><td>4</td><td>1</td></tr><tr><td>1</td><td>5</td><td>2</td></tr><tr><td>2</td><td>6</td><td>3</td></tr></tbody></table></div><h3 id="Using-orderedDict-data-structure"><a href="#Using-orderedDict-data-structure" class="headerlink" title="Using orderedDict data structure"></a>Using orderedDict data structure</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> OrderedDict</span><br></pre></td></tr></table></figure></div><p>Order dict has the order of the keys, so the pandas frame columns order will be ensured.</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">order_dict = OrderedDict()</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">order_dict[<span class="string">'foo'</span>] = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">order_dict[<span class="string">'bar'</span>] = [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">order_dict</span><br></pre></td></tr></table></figure></div><pre><code>OrderedDict([(&#39;foo&#39;, [1, 2, 3]), (&#39;bar&#39;, [4, 5, 6])])</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pdframe_order_dict = pd.DataFrame(order_dict)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">markdown_pd(pdframe_order_dict)</span><br></pre></td></tr></table></figure></div><div class="table-container"><table><thead><tr><th></th><th>foo</th><th>bar</th></tr></thead><tbody><tr><td>0</td><td>1</td><td>4</td></tr><tr><td>1</td><td>2</td><td>5</td></tr><tr><td>2</td><td>3</td><td>6</td></tr></tbody></table></div><p>As you can see, the order of column is what we want!</p><h2 id="Create-pandas-frame-from-lists"><a href="#Create-pandas-frame-from-lists" class="headerlink" title="Create pandas frame from lists"></a>Create pandas frame from lists</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br></pre></td></tr></table></figure></div><p>Create a column list: [‘foo’, ‘bar’]<br>Create a numpy array np.array([[1, 2, 3], [4, 5, 6]])</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">columns = [<span class="string">'foo'</span>, <span class="string">'bar'</span>]</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data = np.array([[<span class="number">1</span>, <span class="number">4</span>], [<span class="number">2</span>, <span class="number">5</span>], [<span class="number">3</span>, <span class="number">6</span>]])</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data.shape</span><br></pre></td></tr></table></figure></div><pre><code>(3, 2)</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">new_pdframe = pd.DataFrame(data=data, columns=columns)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">markdown_pd(new_pdframe)</span><br></pre></td></tr></table></figure></div><div class="table-container"><table><thead><tr><th></th><th>foo</th><th>bar</th></tr></thead><tbody><tr><td>0</td><td>1</td><td>4</td></tr><tr><td>1</td><td>2</td><td>5</td></tr><tr><td>2</td><td>3</td><td>6</td></tr></tbody></table></div><h1 id="insert-column"><a href="#insert-column" class="headerlink" title="insert column"></a>insert column</h1><h2 id="unexplicit-insert-without-defining-column-index"><a href="#unexplicit-insert-without-defining-column-index" class="headerlink" title="unexplicit insert without defining column index"></a>unexplicit insert without defining column index</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">markdown_pd(new_pdframe)</span><br></pre></td></tr></table></figure></div><div class="table-container"><table><thead><tr><th></th><th>foo</th><th>bar</th></tr></thead><tbody><tr><td>0</td><td>1</td><td>4</td></tr><tr><td>1</td><td>2</td><td>5</td></tr><tr><td>2</td><td>3</td><td>6</td></tr></tbody></table></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">new_pdframe.loc[:, <span class="string">'foz'</span>] = [<span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">markdown_pd(new_pdframe)</span><br></pre></td></tr></table></figure></div><div class="table-container"><table><thead><tr><th></th><th>foo</th><th>bar</th><th>foz</th></tr></thead><tbody><tr><td>0</td><td>1</td><td>4</td><td>7</td></tr><tr><td>1</td><td>2</td><td>5</td><td>8</td></tr><tr><td>2</td><td>3</td><td>6</td><td>9</td></tr></tbody></table></div><p>in this case, the new column will be added at the most right of the data frame</p><h2 id="explicit-insert-with-defining-column-index"><a href="#explicit-insert-with-defining-column-index" class="headerlink" title="explicit insert with defining column index"></a>explicit insert with defining column index</h2><p>Let’s try insert the new column in the middle</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">new_pdframe = pd.DataFrame(data=data, columns=columns)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">markdown_pd(new_pdframe)</span><br></pre></td></tr></table></figure></div><div class="table-container"><table><thead><tr><th></th><th>foo</th><th>bar</th></tr></thead><tbody><tr><td>0</td><td>1</td><td>4</td></tr><tr><td>1</td><td>2</td><td>5</td></tr><tr><td>2</td><td>3</td><td>6</td></tr></tbody></table></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">new_pdframe.insert(<span class="number">1</span>,<span class="string">'foz'</span>, [<span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>])</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">markdown_pd(new_pdframe)</span><br></pre></td></tr></table></figure></div><div class="table-container"><table><thead><tr><th></th><th>foo</th><th>foz</th><th>bar</th></tr></thead><tbody><tr><td>0</td><td>1</td><td>7</td><td>4</td></tr><tr><td>1</td><td>2</td><td>8</td><td>5</td></tr><tr><td>2</td><td>3</td><td>9</td><td>6</td></tr></tbody></table></div><p>Note that you still can insert the new column at the end by the corresponding index.</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">new_pdframe = pd.DataFrame(data=data, columns=columns)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">markdown_pd(new_pdframe)</span><br></pre></td></tr></table></figure></div><div class="table-container"><table><thead><tr><th></th><th>foo</th><th>bar</th></tr></thead><tbody><tr><td>0</td><td>1</td><td>4</td></tr><tr><td>1</td><td>2</td><td>5</td></tr><tr><td>2</td><td>3</td><td>6</td></tr></tbody></table></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">new_pdframe.insert(<span class="number">2</span>,<span class="string">'foz'</span>, [<span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>])</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">markdown_pd(new_pdframe)</span><br></pre></td></tr></table></figure></div><div class="table-container"><table><thead><tr><th></th><th>foo</th><th>bar</th><th>foz</th></tr></thead><tbody><tr><td>0</td><td>1</td><td>4</td><td>7</td></tr><tr><td>1</td><td>2</td><td>5</td><td>8</td></tr><tr><td>2</td><td>3</td><td>6</td><td>9</td></tr></tbody></table></div><h1 id="insert-row"><a href="#insert-row" class="headerlink" title="insert row"></a>insert row</h1><p>Inserting a row is not as easy as inserting a column</p><p>In order to make it more clear, let’s set the index of the pandas frame to some new values instead of 0, 1, 2.</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">new_pdframe = pd.DataFrame(data=data, columns=columns, index = [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>])</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">markdown_pd(new_pdframe)</span><br></pre></td></tr></table></figure></div><div class="table-container"><table><thead><tr><th style="text-align:left"></th><th>foo</th><th>bar</th></tr></thead><tbody><tr><td style="text-align:left">a</td><td>1</td><td>4</td></tr><tr><td style="text-align:left">b</td><td>2</td><td>5</td></tr><tr><td style="text-align:left">c</td><td>3</td><td>6</td></tr></tbody></table></div><p>As you can see, now the indices are characters instead of numbers.</p><h2 id="insert-by-loc-new-index-value"><a href="#insert-by-loc-new-index-value" class="headerlink" title="insert by loc[new_index_value]"></a>insert by loc[new_index_value]</h2><p>by setting a new index value, the new row will be appended at the end of the dataframe.<br><br>Note: the index must not be existing already!</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">new_pdframe.index</span><br></pre></td></tr></table></figure></div><pre><code>Index([&#39;a&#39;, &#39;b&#39;, &#39;c&#39;], dtype=&#39;object&#39;)</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">new_pdframe.loc[<span class="string">'d'</span>] = [<span class="number">4</span>, <span class="number">7</span>]</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">markdown_pd(new_pdframe)</span><br></pre></td></tr></table></figure></div><div class="table-container"><table><thead><tr><th style="text-align:left"></th><th>foo</th><th>bar</th></tr></thead><tbody><tr><td style="text-align:left">a</td><td>1</td><td>4</td></tr><tr><td style="text-align:left">b</td><td>2</td><td>5</td></tr><tr><td style="text-align:left">c</td><td>3</td><td>6</td></tr><tr><td style="text-align:left">d</td><td>4</td><td>7</td></tr></tbody></table></div><h2 id="insert-by-appending-a-row-in-a-specific-index-position"><a href="#insert-by-appending-a-row-in-a-specific-index-position" class="headerlink" title="insert by appending a row in a specific index position"></a>insert by appending a row in a specific index position</h2><p>In this case you wanna to insert a pandas frame, but to a specific position inside the pandas frame</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">insert_row</span><span class="params">(idx, df, df_insert)</span>:</span></span><br><span class="line">    dfA = df.iloc[:idx, ]</span><br><span class="line">    dfB = df.iloc[idx:, ]</span><br><span class="line"></span><br><span class="line">    df = dfA.append(df_insert).append(dfB)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> df</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">new_pdframe = pd.DataFrame(data=data, columns=columns, index = [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>])</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">markdown_pd(new_pdframe)</span><br></pre></td></tr></table></figure></div><div class="table-container"><table><thead><tr><th style="text-align:left"></th><th>foo</th><th>bar</th></tr></thead><tbody><tr><td style="text-align:left">a</td><td>1</td><td>4</td></tr><tr><td style="text-align:left">b</td><td>2</td><td>5</td></tr><tr><td style="text-align:left">c</td><td>3</td><td>6</td></tr></tbody></table></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">appended_pdframe = pd.DataFrame(data=np.array([[<span class="number">5</span>, <span class="number">5</span>], [<span class="number">6</span>, <span class="number">6</span>]]), columns=columns, index = [<span class="string">'d'</span>, <span class="string">'e'</span>])</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">markdown_pd(appended_pdframe)</span><br></pre></td></tr></table></figure></div><div class="table-container"><table><thead><tr><th style="text-align:left"></th><th>foo</th><th>bar</th></tr></thead><tbody><tr><td style="text-align:left">d</td><td>5</td><td>5</td></tr><tr><td style="text-align:left">e</td><td>6</td><td>6</td></tr></tbody></table></div><p>Now let’s try adding it between b and c.</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">updated_frame = insert_row(<span class="number">2</span>, new_pdframe, appended_pdframe)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">markdown_pd(updated_frame)</span><br></pre></td></tr></table></figure></div><div class="table-container"><table><thead><tr><th style="text-align:left"></th><th>foo</th><th>bar</th></tr></thead><tbody><tr><td style="text-align:left">a</td><td>1</td><td>4</td></tr><tr><td style="text-align:left">b</td><td>2</td><td>5</td></tr><tr><td style="text-align:left">d</td><td>5</td><td>5</td></tr><tr><td style="text-align:left">e</td><td>6</td><td>6</td></tr><tr><td style="text-align:left">c</td><td>3</td><td>6</td></tr></tbody></table></div><h2 id="insert-by-pd-concat"><a href="#insert-by-pd-concat" class="headerlink" title="insert by pd.concat"></a>insert by pd.concat</h2><p>In this case, the frame will be appended at the end of the frame.</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">updated_frame = pd.concat([new_pdframe, appended_pdframe])</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">markdown_pd(updated_frame)</span><br></pre></td></tr></table></figure></div><div class="table-container"><table><thead><tr><th style="text-align:left"></th><th>foo</th><th>bar</th></tr></thead><tbody><tr><td style="text-align:left">a</td><td>1</td><td>4</td></tr><tr><td style="text-align:left">b</td><td>2</td><td>5</td></tr><tr><td style="text-align:left">c</td><td>3</td><td>6</td></tr><tr><td style="text-align:left">d</td><td>5</td><td>5</td></tr><tr><td style="text-align:left">e</td><td>6</td><td>6</td></tr></tbody></table></div>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
          <category> basics </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> pandas </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>magic methods</title>
      <link href="/2018/11/29/python/basics/magic_methods/"/>
      <url>/2018/11/29/python/basics/magic_methods/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="Examples-for-function-built-in-method"><a href="#Examples-for-function-built-in-method" class="headerlink" title="Examples for function built-in method"></a>Examples for function built-in method</h2><div class="table-container"><table><thead><tr><th>method</th><th style="text-align:center">explanation</th><th></th></tr></thead><tbody><tr><td>_<em>doc_</em></td><td style="text-align:center">The function’s documentation string, or Noneif unavailable; not inherited by subclasses</td><td>Writable</td></tr><tr><td>_<em>name_</em></td><td style="text-align:center">The function’s name</td><td>Writable</td></tr><tr><td>_<em>qualname_</em></td><td style="text-align:center">The function’s qualified nameNew in version 3.3.</td><td>Writable</td></tr><tr><td>_<em>module_</em></td><td style="text-align:center">The name of the module the function was defined in, or None if unavailable.</td><td>Writable</td></tr><tr><td>_<em>defaults_</em></td><td style="text-align:center">A tuple containing default argument values for those arguments that have defaults, or None if no arguments have a default value</td><td>Writable</td></tr><tr><td>_<em>code_</em></td><td style="text-align:center">The code object representing the compiled function body.</td><td>Writable</td></tr><tr><td>_<em>globals_</em></td><td style="text-align:center">A reference to the dictionary that holds the function’s global variables — the global namespace of the module in which the function was defined.</td><td>Read-only</td></tr><tr><td>_<em>dict_</em></td><td style="text-align:center">The namespace supporting arbitrary function attributes.</td><td>Writable</td></tr><tr><td>_<em>closure_</em></td><td style="text-align:center">None or a tuple of cells that contain bindings for the function’s free variables. See below for information on the cell_contents attribute.</td><td>Read-only</td></tr></tbody></table></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">myfunction</span><span class="params">(arg1 = <span class="number">1</span>)</span>:</span></span><br><span class="line">    <span class="string">""" My function example"""</span></span><br><span class="line">    <span class="comment"># test string</span></span><br><span class="line">    test = <span class="string">'test_string'</span></span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">myfunction.__doc__</span><br></pre></td></tr></table></figure></div><pre><code>&#39; My function example&#39;</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">myfunction.__name__</span><br></pre></td></tr></table></figure></div><pre><code>&#39;myfunction&#39;</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">myfunction.__qualname__</span><br></pre></td></tr></table></figure></div><pre><code>&#39;myfunction&#39;</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">myfunction.__module__</span><br></pre></td></tr></table></figure></div><pre><code>&#39;__main__&#39;</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">myfunction.__defaults__</span><br></pre></td></tr></table></figure></div><pre><code>(1,)</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">myfunction.__code__</span><br></pre></td></tr></table></figure></div><pre><code>&lt;code object myfunction at 0x0000020E0443AB70, file &quot;&lt;ipython-input-1-d45fff7bc581&gt;&quot;, line 1&gt;</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">myfunction.__dict__</span><br></pre></td></tr></table></figure></div><pre><code>{}</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">myfunction.__closure__</span><br></pre></td></tr></table></figure></div><h2 id="Examples-for-class-built-in-method"><a href="#Examples-for-class-built-in-method" class="headerlink" title="Examples for class built-in method"></a>Examples for class built-in method</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyClass</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="string">''' My class example'''</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span> <span class="params">(self)</span>:</span></span><br><span class="line">        self.a = <span class="number">0</span></span><br><span class="line">        self.b = <span class="string">'test'</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__new__</span><span class="params">(cls)</span>:</span></span><br><span class="line">        print(<span class="string">'Creating new instance'</span>)</span><br><span class="line">        <span class="keyword">return</span> super(MyClass, cls).__new__(MyClass)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__del__</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">'Deleting instance'</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">'Ass hole class'</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__getattr__</span><span class="params">(self, attr)</span>:</span></span><br><span class="line">        print(<span class="string">'No such attribute!'</span>)</span><br><span class="line">        <span class="keyword">raise</span> AttributeError</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__setattr__</span><span class="params">(self, attr, value)</span>:</span></span><br><span class="line">        self.__dict__[attr] = <span class="number">1</span></span><br></pre></td></tr></table></figure></div><h3 id="Class-methods"><a href="#Class-methods" class="headerlink" title="Class methods:"></a>Class methods:</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dir(MyClass)</span><br></pre></td></tr></table></figure></div><pre><code>[&#39;__class__&#39;, &#39;__del__&#39;, &#39;__delattr__&#39;, &#39;__dict__&#39;, &#39;__dir__&#39;, &#39;__doc__&#39;, &#39;__eq__&#39;, &#39;__format__&#39;, &#39;__ge__&#39;, &#39;__getattr__&#39;, &#39;__getattribute__&#39;, &#39;__gt__&#39;, &#39;__hash__&#39;, &#39;__init__&#39;, &#39;__init_subclass__&#39;, &#39;__le__&#39;, &#39;__lt__&#39;, &#39;__module__&#39;, &#39;__ne__&#39;, &#39;__new__&#39;, &#39;__reduce__&#39;, &#39;__reduce_ex__&#39;, &#39;__repr__&#39;, &#39;__setattr__&#39;, &#39;__sizeof__&#39;, &#39;__str__&#39;, &#39;__subclasshook__&#39;, &#39;__weakref__&#39;]</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MyClass.__class__</span><br></pre></td></tr></table></figure></div><pre><code>type</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MyClass.__bases__</span><br></pre></td></tr></table></figure></div><pre><code>(object,)</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MyClass.__dict__</span><br></pre></td></tr></table></figure></div><pre><code>mappingproxy({&#39;__module__&#39;: &#39;__main__&#39;,              &#39;__doc__&#39;: &#39; My class example&#39;,              &#39;__init__&#39;: &lt;function __main__.MyClass.__init__(self)&gt;,              &#39;__new__&#39;: &lt;staticmethod at 0x20e045c0be0&gt;,              &#39;__del__&#39;: &lt;function __main__.MyClass.__del__(self)&gt;,              &#39;__str__&#39;: &lt;function __main__.MyClass.__str__(self)&gt;,              &#39;__getattr__&#39;: &lt;function __main__.MyClass.__getattr__(self, attr)&gt;,              &#39;__setattr__&#39;: &lt;function __main__.MyClass.__setattr__(self, attr, value)&gt;,              &#39;__dict__&#39;: &lt;attribute &#39;__dict__&#39; of &#39;MyClass&#39; objects&gt;,              &#39;__weakref__&#39;: &lt;attribute &#39;__weakref__&#39; of &#39;MyClass&#39; objects&gt;})</code></pre><h3 id="Instance-methods"><a href="#Instance-methods" class="headerlink" title="Instance methods:"></a>Instance methods:</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">test_instance = MyClass()</span><br></pre></td></tr></table></figure></div><pre><code>Creating new instance</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dir(test_instance)</span><br></pre></td></tr></table></figure></div><pre><code>[&#39;__class__&#39;, &#39;__del__&#39;, &#39;__delattr__&#39;, &#39;__dict__&#39;, &#39;__dir__&#39;, &#39;__doc__&#39;, &#39;__eq__&#39;, &#39;__format__&#39;, &#39;__ge__&#39;, &#39;__getattr__&#39;, &#39;__getattribute__&#39;, &#39;__gt__&#39;, &#39;__hash__&#39;, &#39;__init__&#39;, &#39;__init_subclass__&#39;, &#39;__le__&#39;, &#39;__lt__&#39;, &#39;__module__&#39;, &#39;__ne__&#39;, &#39;__new__&#39;, &#39;__reduce__&#39;, &#39;__reduce_ex__&#39;, &#39;__repr__&#39;, &#39;__setattr__&#39;, &#39;__sizeof__&#39;, &#39;__str__&#39;, &#39;__subclasshook__&#39;, &#39;__weakref__&#39;, &#39;a&#39;, &#39;b&#39;]</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">test_instance.__dict__</span><br></pre></td></tr></table></figure></div><pre><code>{&#39;a&#39;: 1, &#39;b&#39;: 1}</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">test_instance.__doc__</span><br></pre></td></tr></table></figure></div><pre><code>&#39; My class example&#39;</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">test_instance.__init__.__code__</span><br></pre></td></tr></table></figure></div><pre><code>&lt;code object __init__ at 0x0000020E044FD8A0, file &quot;&lt;ipython-input-31-5e1debc8af67&gt;&quot;, line 3&gt;</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">test_instance.__setattr__.__doc__</span><br></pre></td></tr></table></figure></div><p>Note: _<em>del_</em>() is <strong>NOT</strong> directly called when deleting instance. It has to be called eplicitely!</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">test_instance.__del__()</span><br></pre></td></tr></table></figure></div><pre><code>Deleting instance</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(test_instance)</span><br></pre></td></tr></table></figure></div><pre><code>Ass hole class</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">test_instance.__str__()</span><br></pre></td></tr></table></figure></div><pre><code>&#39;Ass hole class&#39;</code></pre><p>The correspondence between operator symbols and method names is as follows:<br><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">x&lt;y calls x.__lt__(y),</span><br><span class="line">x&lt;&#x3D;y calls x.__le__(y),</span><br><span class="line">x&#x3D;&#x3D;y calls x.__eq__(y),</span><br><span class="line">x!&#x3D;y calls x.__ne__(y),</span><br><span class="line">x&gt;y calls x.__gt__(y),</span><br><span class="line">and x&gt;&#x3D;y calls x.__ge__(y).</span><br></pre></td></tr></table></figure></div></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">object.__lt__(self, other)</span><br><span class="line">object.__le__(self, other)</span><br><span class="line">object.__eq__(self, other)</span><br><span class="line">object.__ne__(self, other)</span><br><span class="line">object.__gt__(self, other)</span><br><span class="line">object.__ge__(self, other)</span><br></pre></td></tr></table></figure></div><p>_<em>getattr_</em>(self, attr) only gets called when attribute is not found</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">test_instance.d</span><br></pre></td></tr></table></figure></div><pre><code>No such attribute!---------------------------------------------------------------------------AttributeError                            Traceback (most recent call last)&lt;ipython-input-45-4c7135cdd908&gt; in &lt;module&gt;----&gt; 1 test_instance.d&lt;ipython-input-31-5e1debc8af67&gt; in __getattr__(self, attr)     13     def __getattr__(self, attr):     14         print(&#39;No such attribute!&#39;)---&gt; 15         raise AttributeError     16     def __setattr__(self, attr, value):     17         self.__dict__[attr] = 1AttributeError: </code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">test_instance.a</span><br></pre></td></tr></table></figure></div><pre><code>1</code></pre><p>_<em>setattr_</em> will do things when setting a value.</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">test_instance.d = <span class="number">4</span></span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">test_instance.d</span><br></pre></td></tr></table></figure></div><pre><code>1</code></pre>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
          <category> basics </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> built-in_methods </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python exception basics</title>
      <link href="/2018/11/27/python/basics/exception_basics/"/>
      <url>/2018/11/27/python/basics/exception_basics/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="Catch-built-in-type-exceptions"><a href="#Catch-built-in-type-exceptions" class="headerlink" title="Catch built-in type exceptions"></a>Catch built-in type exceptions</h1><h2 id="simple-non-inspect-exception"><a href="#simple-non-inspect-exception" class="headerlink" title="simple non-inspect exception"></a>simple non-inspect exception</h2><p>For the following example, ‘myfile.txt’ does not exist. Therfore, the exception will trigger the code that is defined under the except block. Code will not stop but continue. The code under try block will be just ignored. Example below:</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    f = open(<span class="string">'myfile.txt'</span>)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    print(<span class="string">"Unexpected error:"</span>, sys.exc_info())</span><br><span class="line">    print(e.__class__)</span><br><span class="line">    print(e.__str__())</span><br><span class="line">print(<span class="string">"code continues"</span>)</span><br></pre></td></tr></table></figure></div><pre><code>Unexpected error: (&lt;class &#39;FileNotFoundError&#39;&gt;, FileNotFoundError(2, &#39;No such file or directory&#39;), &lt;traceback object at 0x0000022951A150C8&gt;)&lt;class &#39;FileNotFoundError&#39;&gt;[Errno 2] No such file or directory: &#39;myfile.txt&#39;code continues</code></pre><p>The sys.exc<em>info() will have the exit information for what class the exception is. The format is: type, value, object <br><br>The  e._<em>class\</em></em> and  e.__str()__are exception class methods which contain the exception class name and printing out information. <br><br>The print out of ‘code continues’ indicates that the try block code is ignored and program does not exit.<br><br>I would think this type of exception handling will be used for the main function only, as any other  exception which we don’t want to handle by ourselves has no need to have additional logic. Example below:</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        create_logdir()</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e</span><br><span class="line">        logging.exception(e)</span><br><span class="line">        <span class="keyword">raise</span></span><br></pre></td></tr></table></figure></div><h2 id="raise-an-exception-intentionally"><a href="#raise-an-exception-intentionally" class="headerlink" title="raise an exception intentionally"></a>raise an exception intentionally</h2><p>By raising the exception, the correspoding method of build-in exception will be called. IDE will stop and not run the remaining code.</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">raise</span> NameError(<span class="string">'HiThere'</span>)</span><br><span class="line">print(<span class="string">'Continue code'</span>)</span><br></pre></td></tr></table></figure></div><pre><code>---------------------------------------------------------------------------NameError                                 Traceback (most recent call last)&lt;ipython-input-17-ecb1af770a0f&gt; in &lt;module&gt;()----&gt; 1 raise NameError(&#39;HiThere&#39;)      2 print(&#39;Continue code&#39;)NameError: HiThere</code></pre><p>If putting a <strong>raise</strong> at the bottom, after the execution of the code you define, the handler method from above exception object method will be triggered. See below.</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    f = open(<span class="string">'myfile.txt'</span>)</span><br><span class="line"><span class="keyword">except</span> Exception:</span><br><span class="line">    print(<span class="string">"Unexpected error:"</span>, sys.exc_info())</span><br><span class="line">    <span class="keyword">raise</span></span><br><span class="line">print(<span class="string">"code continues"</span>)</span><br></pre></td></tr></table></figure></div><pre><code>Unexpected error: (&lt;class &#39;FileNotFoundError&#39;&gt;, FileNotFoundError(2, &#39;No such file or directory&#39;), &lt;traceback object at 0x000001E05FC58D48&gt;)---------------------------------------------------------------------------FileNotFoundError                         Traceback (most recent call last)&lt;ipython-input-18-bc5f8ae109ca&gt; in &lt;module&gt;()      1 try:----&gt; 2     f = open(&#39;myfile.txt&#39;)      3 except Exception:      4     print(&quot;Unexpected error:&quot;, sys.exc_info())      5     raiseFileNotFoundError: [Errno 2] No such file or directory: &#39;myfile.txt&#39;</code></pre><p>If you want to simply print or log the message for the exception, you can print or log the exception object.<br><br>The string that is printed out is the return from_<em>str_</em> build-in method.<br>Again, the <strong>raise</strong> at the bottom of except block will make sure the exception instance handler is called.</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    f = open(<span class="string">'myfile.txt'</span>)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    print(<span class="string">"Unexpected error:"</span>, e)</span><br><span class="line">    print(<span class="string">"Unexpected error:"</span>,e.__str__())</span><br><span class="line">    <span class="keyword">raise</span></span><br><span class="line">print(<span class="string">"code continues"</span>)</span><br></pre></td></tr></table></figure></div><pre><code>Unexpected error: [Errno 2] No such file or directory: &#39;myfile.txt&#39;Unexpected error: [Errno 2] No such file or directory: &#39;myfile.txt&#39;---------------------------------------------------------------------------FileNotFoundError                         Traceback (most recent call last)&lt;ipython-input-16-b337c26a5c69&gt; in &lt;module&gt;()      1 try:----&gt; 2     f = open(&#39;myfile.txt&#39;)      3 except Exception as e:      4     print(&quot;Unexpected error:&quot;, e)      5     print(&quot;Unexpected error:&quot;,e.__str__())FileNotFoundError: [Errno 2] No such file or directory: &#39;myfile.txt&#39;</code></pre><h2 id="specify-special-handling-for-each-exception-type"><a href="#specify-special-handling-for-each-exception-type" class="headerlink" title="specify special handling for each exception type"></a>specify special handling for each exception type</h2><p>Below is an example of catching different built-in type of exceptions.</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    f = open(<span class="string">'myfile.txt'</span>)</span><br><span class="line">    s = f.readline()</span><br><span class="line">    i = int(s.strip())</span><br><span class="line"><span class="keyword">except</span> OSError <span class="keyword">as</span> err:</span><br><span class="line">    print(<span class="string">"OS error: &#123;0&#125;"</span>.format(err))</span><br><span class="line">    <span class="keyword">raise</span></span><br><span class="line"><span class="keyword">except</span> ValueError:</span><br><span class="line">    print(<span class="string">"Could not convert data to an integer."</span>)</span><br><span class="line">    <span class="keyword">raise</span></span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    print(<span class="string">"Unexpected error:"</span>, sys.exc_info()[<span class="number">0</span>])</span><br><span class="line">    <span class="keyword">raise</span></span><br></pre></td></tr></table></figure></div><pre><code>OS error: [Errno 2] No such file or directory: &#39;myfile.txt&#39;---------------------------------------------------------------------------FileNotFoundError                         Traceback (most recent call last)&lt;ipython-input-70-778921e79d26&gt; in &lt;module&gt;()      1 try:----&gt; 2     f = open(&#39;myfile.txt&#39;)      3     s = f.readline()      4     i = int(s.strip())      5 except OSError as err:FileNotFoundError: [Errno 2] No such file or directory: &#39;myfile.txt&#39;</code></pre><h1 id="Custom-Exception"><a href="#Custom-Exception" class="headerlink" title="Custom Exception"></a>Custom Exception</h1><p>I would use custom exception to define API errors that are not inclued in python built-in exceptions. Example below.</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileTypeError</span><span class="params">(Exception)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="comment"># log something here</span></span><br><span class="line">        Exception.__init__(self,<span class="string">"well, you type is wrong, isn't it?"</span>)</span><br><span class="line">some_condition = <span class="literal">True</span></span><br><span class="line"><span class="keyword">if</span> (some_condition):</span><br><span class="line">    <span class="keyword">raise</span> FileTypeError</span><br></pre></td></tr></table></figure></div><pre><code>---------------------------------------------------------------------------FileTypeError                             Traceback (most recent call last)&lt;ipython-input-95-1a7136f7f775&gt; in &lt;module&gt;()      5 some_condition = True      6 if (some_condition):----&gt; 7     raise FileTypeErrorFileTypeError: well, you type is wrong, isn&#39;t it?</code></pre>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
          <category> basics </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> exception </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>class attribute</title>
      <link href="/2018/11/19/python/basics/class_attribute/"/>
      <url>/2018/11/19/python/basics/class_attribute/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>Here is an understanding of class attribute.<br><br>It is so easy to mess up between class attribute and instance attribute. <br></p><p>Below is a very good example between the two concepts. <br></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">InstanceCounter</span><span class="params">(object)</span>:</span></span><br><span class="line">    count = <span class="number">0</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,value)</span>:</span></span><br><span class="line">        self.value = value</span><br><span class="line">        InstanceCounter.count += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">a = InstanceCounter(<span class="number">5</span>)</span><br><span class="line">b = InstanceCounter(<span class="number">10</span>)</span><br><span class="line">c = InstanceCounter(<span class="number">15</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> obj <span class="keyword">in</span> (a, b, c):</span><br><span class="line">    print(<span class="string">"Instance attribute value: &#123;&#125;"</span>.format(obj.value))</span><br><span class="line">    print(<span class="string">"Instance attribute value: &#123;&#125;"</span>.format(InstanceCounter.count))</span><br></pre></td></tr></table></figure></div><pre><code>Instance attribute value: 5Instance attribute value: 3Instance attribute value: 10Instance attribute value: 3Instance attribute value: 15Instance attribute value: 3</code></pre><p>As we can see, the class attribute InstanceCounter.count incremented after each instantiate of a new object. <br><br>The trick is that, python treats everything as an ‘object.’. <br><br>Not only an instance of class is an object, but the class itself is also an object. <br><br><strong>‘class InstanceCounter(object)’ means instantiating a ‘class’ type object named InstanceCounter </strong> <br><br>Let us print the methods of the InstanceCounter: <br></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(InstanceCounter)</span><br></pre></td></tr></table></figure></div><pre><code>&lt;class &#39;__main__.InstanceCounter&#39;&gt;</code></pre><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(dir(InstanceCounter))</span><br></pre></td></tr></table></figure></div><pre><code>[&#39;__class__&#39;, &#39;__delattr__&#39;, &#39;__dict__&#39;, &#39;__dir__&#39;, &#39;__doc__&#39;, &#39;__eq__&#39;, &#39;__format__&#39;, &#39;__ge__&#39;, &#39;__getattribute__&#39;, &#39;__gt__&#39;, &#39;__hash__&#39;, &#39;__init__&#39;, &#39;__init_subclass__&#39;, &#39;__le__&#39;, &#39;__lt__&#39;, &#39;__module__&#39;, &#39;__ne__&#39;, &#39;__new__&#39;, &#39;__reduce__&#39;, &#39;__reduce_ex__&#39;, &#39;__repr__&#39;, &#39;__setattr__&#39;, &#39;__sizeof__&#39;, &#39;__str__&#39;, &#39;__subclasshook__&#39;, &#39;__weakref__&#39;, &#39;count&#39;]</code></pre><p>Clearyly, InstanceCounter is also an object.<br></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Datastorage</span><span class="params">(object)</span>:</span></span><br><span class="line">    a = <span class="number">0</span></span><br><span class="line">    b = <span class="number">1</span></span><br><span class="line">    c = <span class="number">2</span></span><br></pre></td></tr></table></figure></div><p>According to this concept, the class attribute will normally be used as static variables among all the instances.</p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
          <category> basics </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> oop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>黑夜</title>
      <link href="/2017/01/20/diary/%E9%BB%91%E5%A4%9C/"/>
      <url>/2017/01/20/diary/%E9%BB%91%E5%A4%9C/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>喜欢这样慢慢地渗透进黑夜里<br>没有防备的夜<br>空荡的一片黑暗<br>远离一切浮华的喧嚣<br>此时的我<br>被命名为’我’的生物所折服<br>不需要挣脱的黑<br>本会令人恐惧的虚无<br>却发出安全感的信号<br>让’我’沉醉于麻木的宁静中<br>享受着黑色空白的温度</p><p>黑夜就像魅魔<br>用不可理喻的迷人抵抗着白天的到来<br>do not go gentle into that good night<br>old age should burn and rave at close of day<br>rage, rage against the dying of light.</p><p>抵抗<br>而不是逃避<br>我说着这样的话<br>唱着这样的歌词</p><p>安静是一种愤怒<br>燃烧着欲望的麻痹<br>臣服于黑夜之下的贪婪<br>扼杀着一切回忆的勇敢</p><p>我害怕入梦<br>灵魂如果脱离了身体<br>俯瞰着愚蠢的世界<br>那些不应该看到的羽毛<br>会带走这份安静<br>将’我’丢进现实的夹缝中<br>无尽地挣扎</p><p>所以<br>‘我’仔细聆听着时钟的滴答声<br>无穷无尽的<br>抵抗着白日到来的<br>黑夜的声音</p>]]></content>
      
      
      <categories>
          
          <category> diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> diary </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>烟花</title>
      <link href="/2016/08/24/diary/%E7%83%9F%E8%8A%B1/"/>
      <url>/2016/08/24/diary/%E7%83%9F%E8%8A%B1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>抛开杂念，最近时间又多了起来。<br>也是重拾了最爱的村上的小说。<br>无意中看到”过客”这个词，<br>不禁感到有些恍惚。</p><p>就我的三观而言，我是极为抵触它的物理定义的。</p><p>我一向反对单纯的唯物论。<br>广义的”我们”，只是时间和记忆堆砌的，<br>视觉化和听觉化的呈现罢了。</p><p>我们所看到和听到的我们自己，<br>抛开形成的过程而言，<br>可谓一文不值。</p><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20200523071007.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20200523071007.png" class="lazyload" title></a></p><p>昨天和朋友聊起”过客”，<br>莫名地想笑。<br>我使劲地从海马区里要挤出点什么干货，<br>却像堵住了口，<br>怎么也倒不出来。</p><p>这种被大脑排异功能过滤的东西，<br>躲在时间的夹缝里，<br>在我身体不知道的地方，<br>留下了一些什么。</p><p>我找不到，<br>看不到，<br>也听不到它们的存在。<br>但是我知道的，<br>它们不会消失，<br>甚至成为了我的一部分。</p><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20200523071045.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20200523071045.png" class="lazyload" title></a></p><p>大多数我安静的时候，<br>“过客”们就像是隐身了一般，<br>无踪无影，<br>无声无息<br>你甚至想不起来，<br>“过客”是否存在过<br>为什么会和名为”我”的产物纠缠不清。</p><p>可有时，<br>会让你心绞痛，<br>会隐隐灼烧着皮肤，<br>会不知疲倦的阻止你的睡意，<br>会在微笑时让你难过，<br>会在人海中让你感到孤独。</p><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20200523071108.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20200523071108.png" class="lazyload" title></a></p><p>想起来jasmin离开的最后一天，<br>没有人为她送行。</p><p>如果不是她提醒我，<br>大概真的忘记了是她最后一天？</p><p>直到她跟我握手，<br>我想，<br>15年的日子，<br>就这样结束了。</p><p>subbu开完会回来问我，<br>她走了么，<br>我说，嗯，大概吧。</p><p>不是大概，<br>她，<br>真的走了呢。</p><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20200523071135.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20200523071135.png" class="lazyload" title></a></p><p>直到某一天，<br>不经意碰到座位旁边的立柱上，<br>不知道什么时候挂着的吊兰，<br>你才会想起，<br>好像曾经把它的叶子撞了一地。</p><p>有个人拍拍我的肩膀，<br>和我说，<br>不要紧，<br>叶子掉了还会长呢。</p><p>在名为”过客”的荒诞记忆里，<br>它们悄悄地发了芽。</p><p>而悲伤的是，<br>这些萌芽，<br>都在没有阳光的黑色天空里，<br>消亡殆尽。</p>]]></content>
      
      
      <categories>
          
          <category> diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> diary </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>A sky full of stars</title>
      <link href="/2016/08/19/diary/sky_full_of_stars/"/>
      <url>/2016/08/19/diary/sky_full_of_stars/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>恼人的无力感，<br>挥之不去，<br>浑浑噩噩，<br>就像怎么删也删不完的回收站。</p><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20200523071330.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20200523071330.png" class="lazyload" title></a></p><p>总是想为前进<br>寻找一个理由。</p><p>而当我四处张望的时候，<br>总有一些他们，<br>无忧无虑地看着太阳。</p><p>而太阳是什么样的地方，<br>他们并不知道。</p><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20200523071344.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20200523071344.png" class="lazyload" title></a></p><p>回忆的画面，<br>美得让人窒息。</p><p>我想驻足停留，<br>可是我在哪里，<br>我到底在哪里。</p><p>这里不属于我。</p><p>那些花儿，<br>已经随风而散。</p><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20200523071402.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20200523071402.png" class="lazyload" title></a></p><p>混沌里传来的虚无缥缈的声音，<br>你沉沦在这黑色的幽默里。</p><p>黑夜越黑，<br>光亮就更加刺眼。</p><p>他们的快乐，<br>是我的绝望。</p><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20200523071415.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20200523071415.png" class="lazyload" title></a></p><p>你看见的那些所谓月亮，<br>不过是太阳的影子罢了。</p><p>而真正的月亮，<br>他们只是在那里，<br>在那里而已。</p><p>我永远看不见，也摸不着。</p><p><a href="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20200523071426.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://cdn.jsdelivr.net/gh/supersheepbear/blog_source@master/blog/image/20200523071426.png" class="lazyload" title></a></p><p>我笑着，<br>撕破那本没有封面的书。</p><p>水晶球的故事<br>不过是童话罢了。</p>]]></content>
      
      
      <categories>
          
          <category> diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> diary </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
